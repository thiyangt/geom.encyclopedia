[["index.html", "Data Visualisation geom Encyclopedia Chapter 1 About 1.1 Usage 1.2 Render book 1.3 Preview book", " Data Visualisation geom Encyclopedia Thiyanga S. Talagala 2023-08-31 Chapter 1 About This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports; for example, a math equation \\(a^2 + b^2 = c^2\\). 1.1 Usage Each bookdown chapter is an .Rmd file, and each .Rmd file can contain one (and only one) chapter. A chapter must start with a first-level heading: # A good chapter, and can contain one (and only one) first-level heading. Use second-level and higher headings within chapters like: ## A short section or ### An even shorter section. The index.Rmd file is required, and is also your first book chapter. It will be the homepage when you render the book. 1.2 Render book You can render the HTML version of this example book without changing anything: Find the Build pane in the RStudio IDE, and Click on Build Book, then select your output format, or select “All formats” if you’d like to use multiple formats from the same book source files. Or build the book from the R console: bookdown::render_book() To render this example to PDF as a bookdown::pdf_book, you’ll need to install XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.org/tinytex/. 1.3 Preview book As you work, you may start a local server to live preview this HTML book. This preview will update as you edit the book when you save individual .Rmd files. You can start the server in a work session by using the RStudio add-in “Preview book,” or from the R console: bookdown::serve_book() "],["hello-bookdown.html", "Chapter 2 Hello bookdown 2.1 A section", " Chapter 2 Hello bookdown All chapters start with a first-level heading followed by your chapter title, like the line above. There should be only one first-level heading (#) per .Rmd file. 2.1 A section All chapter sections start with a second-level (##) or higher heading followed by your section title, like the sections above and below here. You can have as many as you want within a chapter. An unnumbered section Chapters and sections are numbered by default. To un-number a heading, add a {.unnumbered} or the shorter {-} at the end of the heading, like in this section. "],["cross.html", "Chapter 3 Graph types 3.1 Chapters and sub-chapters", " Chapter 3 Graph types 3.1 Chapters and sub-chapters "],["r-packages.html", "Chapter 4 R Packages 4.1 Data processing 4.2 Graph arrangement 4.3 Data packages 4.4 Large cross sectional dataset 4.5 Small cross sectional dataset 4.6 Time series dataset 4.7 Packages related to geom 4.8 geom Extensions 4.9 All available geom_… in the ggplot2 package", " Chapter 4 R Packages This chapter lists all the packages necessary for plotting 4.1 Data processing library(tidyverse) ## ── Attaching packages ── tidyverse 1.3.2 ── ## ✔ ggplot2 3.4.3 ✔ purrr 1.0.2 ## ✔ tibble 3.2.1 ✔ dplyr 1.1.2 ## ✔ tidyr 1.3.0 ✔ stringr 1.5.0 ## ✔ readr 2.1.3 ✔ forcats 1.0.0 ## ── Conflicts ───── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() 4.2 Graph arrangement library(patchwork) 4.3 Data packages 4.3.1 Cross sectional data #install_github(&quot;thiyangt/elephants&quot;) library(elephants) 4.3.2 Time series data #install_github(&quot;denguedatahub&quot;) library(denguedatahub) 4.4 Large cross sectional dataset data(&quot;elephants&quot;) 4.4.1 Glimpse of the large dataset 4.5 Small cross sectional dataset set.seed(2023) elephants.subset.100 &lt;- elephants |&gt; sample_n(100) 4.5.1 Glimpse of the small cross sectional dataset 4.6 Time series dataset library(denguedatahub) srilanka_weekly_data ## # A tibble: 21,934 × 6 ## year week start.date end.date ## * &lt;dbl&gt; &lt;dbl&gt; &lt;date&gt; &lt;date&gt; ## 1 2006 52 2006-12-23 2006-12-29 ## 2 2006 52 2006-12-23 2006-12-29 ## 3 2006 52 2006-12-23 2006-12-29 ## 4 2006 52 2006-12-23 2006-12-29 ## 5 2006 52 2006-12-23 2006-12-29 ## 6 2006 52 2006-12-23 2006-12-29 ## 7 2006 52 2006-12-23 2006-12-29 ## 8 2006 52 2006-12-23 2006-12-29 ## 9 2006 52 2006-12-23 2006-12-29 ## 10 2006 52 2006-12-23 2006-12-29 ## # ℹ 21,924 more rows ## # ℹ 2 more variables: district &lt;chr&gt;, ## # cases &lt;dbl&gt; 4.7 Packages related to geom library(ggplot2) #devtools::install_github(&quot;EvaMaeRey/ggxmean&quot;) # library(gxmean) # devtools::install_github(&quot;davidsjoberg/ggsankey&quot;) library(ggxmean) # install.packages(&quot;ggpattern&quot;) library(ggpattern) 4.8 geom Extensions library(GGally) # Matrix plots 4.9 All available geom_… in the ggplot2 package x geom_abline geom_area geom_bar geom_bin_2d geom_bin2d geom_blank geom_boxplot geom_col geom_contour geom_contour_filled geom_count geom_crossbar geom_curve geom_density geom_density_2d geom_density_2d_filled geom_density2d geom_density2d_filled geom_dotplot geom_errorbar geom_errorbarh geom_freqpoly geom_function geom_hex geom_histogram geom_hline geom_jitter geom_label geom_line geom_linerange geom_map geom_path geom_point geom_pointrange geom_polygon geom_qq geom_qq_line geom_quantile geom_raster geom_rect geom_ribbon geom_rug geom_segment geom_sf geom_sf_label geom_sf_text geom_smooth geom_spoke geom_step geom_text geom_tile geom_violin geom_vline "],["a-geom_a.html", "Chapter 5 A: geom_a… 5.1 geom_abline 5.2 geom_area", " Chapter 5 A: geom_a… 5.1 geom_abline Package: ggplot2 (Wickham 2016) Book: Description: Draw a straight line (\\(Y=mX+c\\)) for a given slope (\\(m\\)) and intercept (\\(c\\)). Understandable aesthetics: alpha, colour, linetype, linewidth Statistics layer(s): See also: geom_point, geom_vline, geom_hline Example: abline &lt;- ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + geom_abline(intercept = 0.15, slope = 1.9) + labs(title=&quot;A: `geom_abline` only&quot;) + theme(aspect.ratio = 1) pointabline &lt;- ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + geom_point() + geom_abline(intercept = 0.15, slope = 1.9) + labs(title=&quot;B: `geom_point + geom_abline` both&quot;) + theme(aspect.ratio = 1) library(patchwork) abline | pointabline Figure 5.1: Illustration of (A) geom_abline and (B) use of geom_point and geom_abline both 5.2 geom_area Package: ggplot2 (Wickham 2016) Description: Create an area plot. This cover the space between x-axis and line that connects the data points. Understandable aesthetics: alpha, colour, linetype, linewidth Statistics layer(s): See also: geom_line, geom_ribbon colombo &lt;- srilanka_weekly_data |&gt; filter(district == &quot;Colombo&quot;) ggplot(data=colombo, aes(x=start.date, y=cases)) + geom_area() Figure 5.2: Illustration of geom_area References "],["b-geom_b.html", "Chapter 6 B: geom_b… 6.1 geom_bar 6.2 geom_bin_2d 6.3 geom_bin2d_pattern 6.4 geom_bin2d 6.5 geom_blank 6.6 geom_boxplot", " Chapter 6 B: geom_b… 6.1 geom_bar Package: ggplot2 (Wickham 2016) Description: Draw a bar proportional to the specified number. For example, number of cases or user defined number. Statistics layer(s): stat_count - This the default statistics layer. It counts number of cases in each group. stat_identify - It plots the data as it is. See also: geom_col 6.1.1 With count ggplot(elephants, aes(y = Age_Category)) + geom_bar() Figure 6.1: Illustration of geom_bar to create a bar chart ggplot(elephants, aes(y = Age_Category, fill=Category)) + geom_bar() Figure 6.2: Illustration of geom_bar to create a stacked bar chart ggplot(elephants, aes(y=Age_Category, fill = Category)) + geom_bar(position = &quot;dodge&quot;) Figure 6.3: Illustration of geom_bar to create a cluster bar chart ggplot(elephants, aes(y=Age_Category, fill = Category)) + geom_bar(position = &quot;dodge&quot;) Figure 6.4: Illustration of geom_bar to create a cluster bar chart 6.1.2 With identity dfbar &lt;- data.frame(class=c(&quot;A&quot;, &quot;B&quot;), income = c(100, 200)) ggplot(dfbar, aes(class, income)) + geom_bar(stat=&quot;identity&quot;) 6.2 geom_bin_2d Package: ggplot2 (Wickham 2016) Description: Divides the Cartesian plane created by x-variable and y-variable into rectangles (2D histogram), counts the number of observations in each rectangle. Only the observations with rectangles are filled according to the number ofobservations. Understandable aesthetics: x, y, fill, group Statistics layer(s): See also: geom_bin2d, geom_point ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + geom_bin_2d() + theme(aspect.ratio = 1) Figure 6.5: Illustration of using geom_bin_2d ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + geom_bin_2d(bins=20) + theme(aspect.ratio = 1) Figure 6.6: Illustration of changing bins in geom_bin_2d 6.3 geom_bin2d_pattern Package: ggpattern (FC, Davis, and ggplot2 authors 2022) Description: Divides the Cartesian plane created by x-variable and y-variable into rectangles (2D-Histogram), counts the number of observations in each rectangle. Only the observations with rectangles are filled with a pattern. Understandable aesthetics: pattern_fill (pattern_* - for mapping variables under aesthetics), pattern (to set a patten, for example pattern=‘stripe’), fill, colour Statistics layer(s): See also: geom_bin2d, geom_point ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + ggpattern::geom_bin2d_pattern(bins=5) + theme(aspect.ratio = 1) Figure 6.7: Illustration of using geom_bin_2d 6.4 geom_bin2d Package: ggplot2 (Wickham 2016) Description: Divides the Cartesian plane created by x-variable and y-variable into rectangles, counts the number of observations in each rectangle. Only the observations with rectangles are filled according to the number ofobservations. Understandable aesthetics: x, y, fill, group Statistics layer(s): See also: geom_bin_2d, geom_point Example: ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + geom_bin2d() + theme(aspect.ratio = 1) Figure 6.8: Illustration of using geom_bin_2d 6.5 geom_blank Package: ggplot2 (Wickham 2016) Description: Draws nothing. 6.6 geom_boxplot Package: ggplot2 (Wickham 2016) Description: Draw a bar proportional to the specified number. For example, number of cases or user defined number. Statistics layer(s): stat_boxplot - This the default statistics layer. This computes minimum, maximum, median, first quartile (\\(Q1\\)), third quartile (\\(Q3\\)), upper whisker extends up to \\(Q3 + 1.5 \\times IQR\\) and lower whisker extends up to \\(Q1 - 1.5 \\times IQR\\), where \\(IQR = Q3 - Q1\\). In a notched box plot, it creates 95% confidence interval for mean. See also: geom_col ggplot(elephants, aes(y = Weight)) + geom_boxplot() Figure 6.9: Illustration of using geom_boxplot ggplot(elephants, aes(y = Weight)) + geom_boxplot(outlier.colour=&quot;black&quot;, outlier.shape=16, outlier.size=2, notch=TRUE) Figure 6.10: Illustration of using geom_boxplot with changing outliers and adding a notch to create notched box plot. References "],["c-geom_c.html", "Chapter 7 C: geom_c… 7.1 geom_col", " Chapter 7 C: geom_c… 7.1 geom_col Before using geom_col, you need to create a summary table of counts or you can apply geom_col for a summary table already given. ## # A tibble: 3 × 2 ## Age_Category n ## &lt;chr&gt; &lt;int&gt; ## 1 10-20 years 560 ## 2 greater than 20 years 430 ## 3 less than 10 years 710 "],["d-geom_d.html", "Chapter 8 D: geom_d… 8.1 geom_delaunay_tile 8.2 geom_density 8.3 geom_density_2d 8.4 geom_density_2d_filled 8.5 geom_density_ridges 8.6 geom_dl", " Chapter 8 D: geom_d… 8.1 geom_delaunay_tile Description: The Delaunay triangulation is used to create a planar graph. delaunay &lt;- ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + ggforce::geom_delaunay_tile(alpha = 0.5, colour = &#39;black&#39;) + labs(title=&quot;geom_delaunay_tile&quot;) + theme(aspect.ratio = 1) # to compare with geom_point point &lt;- ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + geom_point(alpha = 0.5, colour = &#39;black&#39;) + labs(title=&quot;geom_point&quot;) + theme(aspect.ratio = 1) library(patchwork) delaunay|point 8.2 geom_density ggplot(elephants, aes(x = Weight)) + geom_density() 8.3 geom_density_2d ggplot(elephants, aes(y = Height, x=Weight)) + geom_density_2d() 8.4 geom_density_2d_filled ggplot(elephants, aes(y = Height, x=Weight)) + geom_density_2d_filled() 8.5 geom_density_ridges Here the y variable should be qualitative and the x variable should be quantitative. library(ggridges) ggplot(elephants, aes(y=Category, x = Height)) + geom_density_ridges() ## Picking joint bandwidth of 0.092 8.6 geom_dl library(directlabels) ggplot(elephants, aes(y = Height, x=Weight, col=Category)) + geom_point() + geom_dl(aes(label=Category),method=&quot;smart.grid&quot;) "],["e-geom_e.html", "Chapter 9 E: geom_e… 9.1 geom_encircle", " Chapter 9 E: geom_e… 9.1 geom_encircle Other related geoms: geom_mark_circle ## Registered S3 methods overwritten by &#39;ggalt&#39;: ## method from ## grid.draw.absoluteGrob ggplot2 ## grobHeight.absoluteGrob ggplot2 ## grobWidth.absoluteGrob ggplot2 ## grobX.absoluteGrob ggplot2 ## grobY.absoluteGrob ggplot2 geom_encircle with geom_point "],["f-geom_f.html", "Chapter 10 F: geom_f… 10.1 geom_function", " Chapter 10 F: geom_f… 10.1 geom_function ggplot() + xlim(c(-1,1)) + geom_function(fun=cos, colour=&quot;red&quot;,lwd=1, linetype=1) "],["a-geom_axxxxx.html", "Chapter 11 A: geom_axxxxx", " Chapter 11 A: geom_axxxxx "],["h-geom_h.html", "Chapter 12 H: geom_h… 12.1 geom_histogram 12.2 geom_hline", " Chapter 12 H: geom_h… 12.1 geom_histogram ## `stat_bin()` using `bins = 30`. Pick ## better value with `binwidth`. 12.2 geom_hline Package: ggplot2 (Wickham 2016) Book: Description: Draw a horizontal line (\\(Y=c\\)) for a given value of \\(c\\), which is known as yintercept. Understandable aesthetics: alpha, colour, linetype, linewidth Statistics layer(s): See also: geom_point, geom_vline, geom_hline Example: hline &lt;- ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + geom_hline(yintercept = 2.5) + labs(title=&quot;A: `geom_hline` only&quot;) + theme(aspect.ratio = 1) pointhline &lt;- ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + geom_point() + geom_hline(yintercept = 2.5) + labs(title=&quot;B: `geom_point + geom_hline` both&quot;) + theme(aspect.ratio = 1) hline | pointhline Figure 12.1: Illustration of (A) geom_hline and (B) use of geom_point and geom_hline both References "],["a-geom_axxxxx-1.html", "Chapter 13 A: geom_axxxxx", " Chapter 13 A: geom_axxxxx "],["a-geom_axxxxx-2.html", "Chapter 14 A: geom_axxxxx", " Chapter 14 A: geom_axxxxx "],["a-geom_axxxxx-3.html", "Chapter 15 A: geom_axxxxx", " Chapter 15 A: geom_axxxxx "],["l-geom_l.html", "Chapter 16 L: geom_l… 16.1 geom_label_repel 16.2 geom_lm", " Chapter 16 L: geom_l… 16.1 geom_label_repel ggplot(elephants.subset.100, aes(y = Height, x=Weight)) + geom_point() + ggrepel::geom_label_repel(aes(y = Height, x=Weight, label = rownames(elephants.subset.100)), fontface = &#39;bold&#39;, color = &#39;red&#39;, box.padding = unit(0.40, &quot;lines&quot;), point.padding = unit(0.6, &quot;lines&quot;), segment.color = &#39;grey50&#39; ) 16.2 geom_lm "],["m-geom_m.html", "Chapter 17 M: geom_m… 17.1 geom_mark_circle", " Chapter 17 M: geom_m… 17.1 geom_mark_circle ## Warning: Using the `size` aesthetic in this geom ## was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` in the ## `default_aes` field and elsewhere ## instead. ## This warning is displayed once every 8 ## hours. ## Call ## `lifecycle::last_lifecycle_warnings()` to ## see where this warning was generated. With geom_point "],["a-geom_axxxxx-4.html", "Chapter 18 A: geom_axxxxx", " Chapter 18 A: geom_axxxxx "],["a-geom_axxxxx-5.html", "Chapter 19 A: geom_axxxxx", " Chapter 19 A: geom_axxxxx "],["p-geom_p.html", "Chapter 20 P: geom_p… 20.1 geom_point", " Chapter 20 P: geom_p… 20.1 geom_point "],["a-geom_axxxxx-6.html", "Chapter 21 A: geom_axxxxx", " Chapter 21 A: geom_axxxxx "],["r-geom_r.html", "Chapter 22 R: geom_r… 22.1 geom_ribbon", " Chapter 22 R: geom_r… 22.1 geom_ribbon Package: ggplot2 (Wickham 2016) Description: Displays a interval according given the upper interval boundary(ymax or xmax) and lower interval boundary (ymin or xmin). Understandable aesthetics: Required aesthetics: x or y, ymin or xmin, ymax or xmax Other: alpha, colour, fill, group, linetype, linewidth Statistics layer(s): See also: geom_area, geom_line colombo21 &lt;- srilanka_weekly_data |&gt; filter(district == &quot;Colombo&quot; &amp; year==2021) ribbon &lt;- ggplot(data=colombo21, aes(x=start.date, y=cases)) + geom_ribbon(aes(ymin = cases - 50, ymax = cases + 50), fill = &quot;grey70&quot;) + labs(title = &quot;A: `geom_ribbon` only&quot;) ribbonline &lt;- ggplot(data=colombo21, aes(x=start.date, y=cases)) + geom_ribbon(aes(ymin = cases - 50, ymax = cases + 50), fill = &quot;grey70&quot;) + geom_line() + labs(title = &quot;B: `geom_ribbon + geom_line` both&quot;) ribbon|ribbonline Figure 22.1: Illustration of geom_ribbon, A: geom_ribbon only and B: geom_ribbon + geom_line References "],["s-geom_s.html", "Chapter 23 S: geom_s… 23.1 geom_segment 23.2 geom_signif 23.3 geom_smooth", " Chapter 23 S: geom_s… 23.1 geom_segment 23.2 geom_signif ggplot(elephants, aes(y = Weight, x=Category)) + geom_boxplot() + ggsignif::geom_signif() ## Warning: Computation failed in `stat_signif()` ## Caused by error in `$&lt;-.data.frame`: ## ! replacement has 1 row, data has 0 23.3 geom_smooth ggplot(elephants, aes(y = Height, x=Fore_Feet_Circumference)) + geom_smooth() + theme(aspect.ratio=1) ## `geom_smooth()` using method = &#39;gam&#39; and ## formula = &#39;y ~ s(x, bs = &quot;cs&quot;)&#39; ggplot(elephants, aes(y = Height, x=Fore_Feet_Circumference)) + geom_smooth(method=lm) + theme(aspect.ratio=1) ## `geom_smooth()` using formula = &#39;y ~ x&#39; ggplot(elephants, aes(y = Height, x=Fore_Feet_Circumference)) + geom_smooth(method = lm, formula = y ~ splines::bs(x, 4)) + theme(aspect.ratio=1) "],["a-geom_axxxxx-7.html", "Chapter 24 A: geom_axxxxx", " Chapter 24 A: geom_axxxxx "],["a-geom_axxxxx-8.html", "Chapter 25 A: geom_axxxxx", " Chapter 25 A: geom_axxxxx "],["v-geom_v.html", "Chapter 26 V: geom_v… 26.1 geom_vline 26.2 geom_violin", " Chapter 26 V: geom_v… 26.1 geom_vline Package: ggplot2 (Wickham 2016) Book: Description: Draw a vertical line (\\(X=c\\)) for a given value of \\(c\\), which is known as xintercept. Understandable aesthetics: alpha, colour, linetype, linewidth Statistics layer(s): See also: geom_point, , geom_hline, geom_smooth, geom_vline Example: vline &lt;- ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + geom_vline(xintercept = 1.25) + labs(title=&quot;A: `geom_vline` only&quot;) + theme(aspect.ratio = 1) pointvline &lt;- ggplot(elephants.subset.100, aes(y = Height, x=Fore_Feet_Circumference)) + geom_point() + geom_vline(xintercept = 1.25) + labs(title=&quot;B: `geom_point + geom_vline` both&quot;) + theme(aspect.ratio = 1) library(patchwork) vline | pointvline Figure 26.1: Illustration of (A) geom_vline and (B) use of geom_point and geom_vline both 26.2 geom_violin Without trimming Draw quantiles References "],["a-geom_axxxxx-9.html", "Chapter 27 A: geom_axxxxx", " Chapter 27 A: geom_axxxxx "],["a-geom_axxxxx-10.html", "Chapter 28 A: geom_axxxxx", " Chapter 28 A: geom_axxxxx "],["a-geom_axxxxx-11.html", "Chapter 29 A: geom_axxxxx", " Chapter 29 A: geom_axxxxx "],["a-geom_axxxxx-12.html", "Chapter 30 A: geom_axxxxx", " Chapter 30 A: geom_axxxxx "],["others.html", "Chapter 31 Others 31.1 ggpairs", " Chapter 31 Others 31.1 ggpairs With all variables GGally::ggpairs(elephants) With only numeric variables elephants.numeric &lt;- elephants |&gt; select_if(is.numeric) GGally::ggpairs(elephants.numeric) Colour the points according to category elephants.numeric &lt;- elephants |&gt; select_if(is.numeric) elephants.numeric$Category &lt;- elephants$Category GGally::ggpairs(elephants.numeric, aes(col=Category)) "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
