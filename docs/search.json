[
  {
    "objectID": "i.html",
    "href": "i.html",
    "title": "9  I",
    "section": "",
    "text": "9.1 geom_image\nPackage\nggimage (Yu 2023)\nDescription\nVisualise data through images.\nUnderstandable aesthetics\nimage\nSee also\ngeom_emoji\nExample\nlibrary(\"ggimage\")\ndf &lt;- data.frame(x = rnorm(10),\n                 y = rnorm(10),\n                image = sample(\"https://www.r-project.org/logo/Rlogo.png\",\n                              size=10, replace = TRUE))\nggplot(df, aes(x, y)) + geom_image(aes(image=image))",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>I</span>"
    ]
  },
  {
    "objectID": "i.html#icon",
    "href": "i.html#icon",
    "title": "9  I",
    "section": "9.2 geom_icon",
    "text": "9.2 geom_icon\n\n9.2.1 Example\n\nlibrary(\"ggimage\")\ndf &lt;- data.frame(x = rnorm(10),\n                 y = rnorm(10))\ndf$icon = sample(c('ios-power', 'ios-wifi', 'ios-pie'), 10, replace=TRUE)\nggplot(df, aes(x, y)) + geom_icon(aes(image=icon))\n\n\n\n\n\nYu, Guangchuang. 2023. Ggimage: Use Image in ’Ggplot2’. https://CRAN.R-project.org/package=ggimage.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>I</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Visualisation Geometries Encyclopedia",
    "section": "",
    "text": "Welcome\nWelcome to the “Data Visualisation geom Encyclopedia”, an encyclopedia of geometrics use in data visualisation. This encyclopedia is a curated collection of geom available in different R programming software packages. This book can also be considered as an “Encyclopedia of Plots”.\nThis book is a work in progress. The accompanying R package for drone is available on CRAN: https://github.com/thiyangt/drone",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#accompanying-r-package-drone-data-for-geom-encyclopaedia",
    "href": "index.html#accompanying-r-package-drone-data-for-geom-encyclopaedia",
    "title": "Data Visualisation Geometries Encyclopedia",
    "section": "Accompanying R package: drone: Data foR geOm eNcyclopaEdia",
    "text": "Accompanying R package: drone: Data foR geOm eNcyclopaEdia",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#why-choose-drone-as-the-package-name",
    "href": "index.html#why-choose-drone-as-the-package-name",
    "title": "Data Visualisation Geometries Encyclopedia",
    "section": "Why choose “drone” as the package name?",
    "text": "Why choose “drone” as the package name?\nThis encyclopedia provides a comprehensive overview of geoms within the grammar of graphics framework, much like a drone offers a bird’s-eye view of a landscape.\nTo load this Data Visualisation Geom Encyclopedia via drone package use the following code.\ninstall.packages(drone)\nlibrary(drone)\nload_encyclopedia()",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "j.html",
    "href": "j.html",
    "title": "10  J",
    "section": "",
    "text": "10.1 geom_jitter\nPackage\nggplot2 (Wickham 2016)\nDescription\nAdds a small amount of random variation to the location of each point, horizontally and/or vertically.\nSee also\ngeom_point\nExample\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Income, y=Electricity)) + \n  geom_jitter() + ggtitle(\"a1: geom_jitter\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Income, y=Electricity)) + \n  geom_point() + ggtitle(\"a1: geom_point\")\na1 | a2",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>J</span>"
    ]
  },
  {
    "objectID": "j.html#jitter",
    "href": "j.html#jitter",
    "title": "10  J",
    "section": "",
    "text": "Wickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>J</span>"
    ]
  },
  {
    "objectID": "k.html",
    "href": "k.html",
    "title": "11  K",
    "section": "",
    "text": "Not found",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>K</span>"
    ]
  },
  {
    "objectID": "l.html",
    "href": "l.html",
    "title": "12  L",
    "section": "",
    "text": "12.1 geom_label\nPackage\nggplot2 (Wickham 2016)\nDescription\nLabelling plots\nUnderstandable aesthetics\nRequired aesthetics\nx, y, label\nOptional aesthetics\nalpha, angle, colour, family, fontface, group, hjust, lineheight, size, vjust\nSee also\ngeom_text\nExample\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\" | Income ==\"H\") |&gt; \n  filter(Year == 2021) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity, label = Income)) + \n  geom_label(aes(fill = factor(Income)), colour = \"white\", fontface = \"bold\", alpha=0.5) + theme(aspect.ratio = 1) + labs(title = \"a1: geom_label only\") \na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\" | Income ==\"H\") |&gt; \n  filter(Year == 2021) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity, label = Income)) + \n  geom_point(aes(col = Income)) +  theme(aspect.ratio = 1) + \n  labs(title = \"a2: geom_point only\") \na1|a2",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>L</span>"
    ]
  },
  {
    "objectID": "l.html#line",
    "href": "l.html#line",
    "title": "12  L",
    "section": "12.2 geom_line",
    "text": "12.2 geom_line\nPackage\nggplot2 (Wickham 2016)\nDescription\nConnects data in order of the variable on the x axis.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_path\nExample\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Sri Lanka\") |&gt;\n  ggplot(aes(x=Year, y=Cooking)) + \n  geom_line() + ggtitle(\"geom_line only\")\na2 &lt;- worldbankdata |&gt;\n  filter(Country == \"Sri Lanka\") |&gt;\n  ggplot(aes(x=Year, y=Cooking)) + \n  geom_line() + \n  geom_point() +\n  ggtitle(\"geom_line and geom_point\")\na1|a2",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>L</span>"
    ]
  },
  {
    "objectID": "l.html#geom_linerange",
    "href": "l.html#geom_linerange",
    "title": "12  L",
    "section": "12.3 geom_linerange",
    "text": "12.3 geom_linerange\nPackage\nggplot2 (Wickham 2016)\nDescription\nRepresenting a vertical interval defined by x, ymin and ymax\nUnderstandable aesthetics\nrequired aesthetics\nx or y,\nymin or xmin,\nymax or xmax\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_line, geom_crossbar, geom_errorbar, geom_pointrange\nExample\n\nworldbankdata |&gt;\n  group_by(Region) |&gt;\n  summarise(min = min(Cooking, na.rm = TRUE), max=max(Cooking, \n                                                      na.rm = TRUE)) |&gt;\n  ggplot(aes(x=Region)) +\n  geom_linerange(aes(ymin = min, ymax = max)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>L</span>"
    ]
  },
  {
    "objectID": "l.html#geom_lm",
    "href": "l.html#geom_lm",
    "title": "12  L",
    "section": "12.4 geom_lm",
    "text": "12.4 geom_lm",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>L</span>"
    ]
  },
  {
    "objectID": "l.html#geom_lm_fitted",
    "href": "l.html#geom_lm_fitted",
    "title": "12  L",
    "section": "12.5 geom_lm_fitted",
    "text": "12.5 geom_lm_fitted",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>L</span>"
    ]
  },
  {
    "objectID": "l.html#geom_lm_pred_int",
    "href": "l.html#geom_lm_pred_int",
    "title": "12  L",
    "section": "12.6 geom_lm_pred_int",
    "text": "12.6 geom_lm_pred_int",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>L</span>"
    ]
  },
  {
    "objectID": "l.html#geom_lm_residuals",
    "href": "l.html#geom_lm_residuals",
    "title": "12  L",
    "section": "12.7 geom_lm_residuals",
    "text": "12.7 geom_lm_residuals",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>L</span>"
    ]
  },
  {
    "objectID": "l.html#geom_lm_conf_int",
    "href": "l.html#geom_lm_conf_int",
    "title": "12  L",
    "section": "12.8 geom_lm_conf_int",
    "text": "12.8 geom_lm_conf_int",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>L</span>"
    ]
  },
  {
    "objectID": "l.html#geom_lm_formula",
    "href": "l.html#geom_lm_formula",
    "title": "12  L",
    "section": "12.9 geom_lm_formula",
    "text": "12.9 geom_lm_formula\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>L</span>"
    ]
  },
  {
    "objectID": "m.html",
    "href": "m.html",
    "title": "13  M",
    "section": "",
    "text": "13.1 geom_mark_circle\nPackage\nggforce (Pedersen 2022)\nDescription\nAnnotate sets of points via circles.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\nSee also\ngeom_circle, geom_encircle, geom_mark_ellipse, geom_mark_hull, geom_mark_rect\nExample\nlibrary(ggforce)\nworldbankdata |&gt;\n  filter(Country == \"Angola\") |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_circle(aes(fill = Income, label = Income),\n                   con.cap = 0) +\n  geom_point(aes(col=Income))",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>M</span>"
    ]
  },
  {
    "objectID": "m.html#mark_ellipse",
    "href": "m.html#mark_ellipse",
    "title": "13  M",
    "section": "13.2 geom_make_ellipse",
    "text": "13.2 geom_make_ellipse\nPackage\nggforce (Pedersen 2022)\nDescription\nAnnotate sets of points via ellipse.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\nSee also\ngeom_circle, geom_encircle, geom_mark_circle, geom_mark_hull, geom_mark_rect\nExample\n\nlibrary(ggforce)\nworldbankdata |&gt;\n  filter(Country == \"Angola\") |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_ellipse(aes(fill = Income, label = Income),\n                   con.cap = 0) +\n  geom_point(aes(col=Income))",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>M</span>"
    ]
  },
  {
    "objectID": "m.html#mark_hull",
    "href": "m.html#mark_hull",
    "title": "13  M",
    "section": "13.3 geom_make_hull",
    "text": "13.3 geom_make_hull\nPackage\nggforce (Pedersen 2022)\nDescription\nAnnotate sets of points via hulls.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\nSee also\ngeom_circle, geom_encircle, geom_mark_circle, geom_mark_ellipse, geom_mark_rect\nExample\n\nlibrary(ggforce)\nlibrary(concaveman)\nworldbankdata |&gt;\n  filter(Income == \"L\" | Income ==\"UM\") |&gt;\n  filter(Year == 2021) |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_hull(aes(fill=Income, lable = Income)) +\n  geom_point(aes(col=Income))",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>M</span>"
    ]
  },
  {
    "objectID": "m.html#mark_rect",
    "href": "m.html#mark_rect",
    "title": "13  M",
    "section": "13.4 geom_make_rect",
    "text": "13.4 geom_make_rect\nPackage\nggforce (Pedersen 2022)\nDescription\nAnnotate sets of points via rectangles.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\nSee also\ngeom_circle, geom_encircle, geom_mark_circle, geom_mark_ellipse, geom_mark_hull\nExample\n\nlibrary(ggforce)\nworldbankdata |&gt;\n  filter(Country == \"Angola\") |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_rect(aes(fill = Income, label = Income),\n                   con.cap = 0) +\n  geom_point(aes(col=Income))",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>M</span>"
    ]
  },
  {
    "objectID": "m.html#map",
    "href": "m.html#map",
    "title": "13  M",
    "section": "13.5 geom_map",
    "text": "13.5 geom_map\nPackage\nggplot2 (Wickham 2016)\nDescription\nDisplay polygons as a map.\nUnderstandable aesthetics\nrequired aesthetics\nmap_id\n**optional aesthetics*\nalpha, colour, fill ,group, linetype, linewidth, subgropu\nSee also\ngeom_polygon\nExample\n\nworld = map_data(\"world\")\nggplot() +\n  geom_map(\n    data = world, map = world,\n    aes(long, lat, map_id = region),\n    fill = \"white\", colour = \"#7f7f7f\", size=0.5)",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>M</span>"
    ]
  },
  {
    "objectID": "m.html#mosaic",
    "href": "m.html#mosaic",
    "title": "13  M",
    "section": "13.6 geom_mosaic",
    "text": "13.6 geom_mosaic\nPackage\nggmosaic (Jeppson, Hofmann, and Cook 2021)\nDescription\nCreate mosaic plot\nUnderstandable aesthetics\nx, y, xmin, xmax, ymin, ymax\nSee also\ngeom_bar, geom_mosaic_jitter, geom_mosaic_text\nExample\n\nlibrary(ggmosaic)\nworldbankdata |&gt;\n  filter(Year == 2022) |&gt;\n  ggplot() +\n  geom_mosaic(aes(x = product(Region), fill = Income)) + \n  scale_fill_brewer(palette = \"Dark2\") + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>M</span>"
    ]
  },
  {
    "objectID": "m.html#geom_mosic_jittermosaic-jitter",
    "href": "m.html#geom_mosic_jittermosaic-jitter",
    "title": "13  M",
    "section": "13.7 geom_mosic_jitter{#mosaic jitter}",
    "text": "13.7 geom_mosic_jitter{#mosaic jitter}\nPackage\nggmosaic (Jeppson, Hofmann, and Cook 2021)\nDescription\nCreate a mosaic plot with text or labels.\n\n13.7.1 Understandable aesthetics\nx, y, xmin, xmax, ymin, ymax\nSee also\ngeom_bar, geom_mosaic, geom_mosaic_text\nExample\n\nlibrary(ggmosaic)\nworldbankdata |&gt;\n  filter(Year == 2022) |&gt;\n  ggplot() +\n  geom_mosaic(aes(x = product(Region), fill = Income), alpha=0.5) +\n  geom_mosaic_text(aes(x = product(Region), fill = Income)) +\n  scale_fill_brewer(palette = \"Dark2\") + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) \n\n\n\n\n\n\n\n\n\n\n\n\nJeppson, Haley, Heike Hofmann, and Di Cook. 2021. Ggmosaic: Mosaic Plots in the ’Ggplot2’ Framework. https://CRAN.R-project.org/package=ggmosaic.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>M</span>"
    ]
  },
  {
    "objectID": "o.html",
    "href": "o.html",
    "title": "15  O",
    "section": "",
    "text": "15.1 geom_outlier\nPackage\nggdemetra (Quartier-la-Tente 2024)\nDescription\nFunction to add directly to the plot the outliers used in the pre-adjustment process of the seasonal adjustment.\nUnderstandable aesthetics\nrequired aesthetics\ndate\ny\nNote: frequency must be equal to 12, 6, 4 or 2\noptional aesthetics\nfirst_date, last_date, coefficients, digits, show.legend, inherit.aes\nSee also\ngeom_text, geom_label geom_text_repel, geom_label_repel\nExample\n#install.packages(\"RJDemetra\")\n#install.packages(\"ggdemetra\")\nlibrary(RJDemetra)\nlibrary(ggdemetra)\nipi_c_eu &lt;- window(ipi_c_eu, start = c(2000, 1), end = c(2010, 12))\nipi_c_eu_df &lt;- ts2df(ipi_c_eu)\np1 &lt;- ggplot(data = ipi_c_eu_df, mapping = aes(x = date, y = FR)) +\n    geom_line() + ggtitle(\"Without geom_outlier\")\np2 &lt;- ggplot(data = ipi_c_eu_df, mapping = aes(x = date, y = FR)) +\n    geom_line() + geom_outlier(geom = \"label_repel\") + ggtitle(\"With geom_outlier\")\np1/p2",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>O</span>"
    ]
  },
  {
    "objectID": "o.html#outline",
    "href": "o.html#outline",
    "title": "15  O",
    "section": "15.2 geom_outline",
    "text": "15.2 geom_outline\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_line, geom_ribbon\nExample",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>O</span>"
    ]
  },
  {
    "objectID": "o.html#outline_point",
    "href": "o.html#outline_point",
    "title": "15  O",
    "section": "15.3 geom_outline_point",
    "text": "15.3 geom_outline_point\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_line, geom_ribbon\nExample",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>O</span>"
    ]
  },
  {
    "objectID": "o.html#overhang_seats",
    "href": "o.html#overhang_seats",
    "title": "15  O",
    "section": "15.4 geom_overhang_seats",
    "text": "15.4 geom_overhang_seats\nPackage\nggparliament (ggparliament?)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_line, geom_ribbon\nExample\n\n#devtools::install_github(\"zmeers/ggparliament\")\nlibrary(ggparliament)\n\n\n\n\n\nQuartier-la-Tente, Alain. 2024. Ggdemetra: ’Ggplot2’ Extension for Seasonal and Trading Day Adjustment with ’RJDemetra’. https://CRAN.R-project.org/package=ggdemetra.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>O</span>"
    ]
  },
  {
    "objectID": "p.html",
    "href": "p.html",
    "title": "16  P",
    "section": "",
    "text": "16.1 geom_point",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>P</span>"
    ]
  },
  {
    "objectID": "p.html#geom_point",
    "href": "p.html#geom_point",
    "title": "16  P",
    "section": "",
    "text": "16.1.1 Package\nggplot2 (Wickham 2016)\n\n\n16.1.2 Description\nVisualize observations using points\n\n\n16.1.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n**See also88\ngeom_jitter\n**Example88\n\nworldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_point() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>P</span>"
    ]
  },
  {
    "objectID": "p.html#geom_path",
    "href": "p.html#geom_path",
    "title": "16  P",
    "section": "16.2 geom_path",
    "text": "16.2 geom_path\nPackage\nggplot2 (Wickham 2016)\nDescription\nConnects the observations in the order in which they appear in the dataset.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_line\n\n16.2.1 Example\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_path() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"a1: X-time dependent variable\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Electricity, y=Cooking)) + \n  geom_path() + ggtitle(\"a2: X-time independent variable\")\na1|a2",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>P</span>"
    ]
  },
  {
    "objectID": "p.html#geom_pointrange",
    "href": "p.html#geom_pointrange",
    "title": "16  P",
    "section": "16.3 geom_pointrange",
    "text": "16.3 geom_pointrange\nPackage\nggplot2 (Wickham 2016)\nDescription\nRepresenting a vertical interval defined by ymin, ymax and point represent by y for different levels of x.\nUnderstandable aesthetics\nrequired aesthetics\nx or y,\nymin or xmin,\nymax or xmax\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_line, geom_crossbar, geom_errorbar, geom_linerange\nExample\nMethod 1\n\nworldbankdata |&gt;\n  group_by(Region) |&gt;\n  summarise(min = min(Cooking, na.rm = TRUE), max=max(Cooking, \n                                                      na.rm = TRUE),\n            median = median(Cooking, na.rm=TRUE)) |&gt;\n  ggplot(aes(x = Region, y = median, ymin = min, ymax = max)) +\n  geom_pointrange() + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\nMethod 2\n\nggplot(data = worldbankdata) +\n  geom_pointrange(\n    mapping = aes(x = Region, y = Cooking),\n    stat = \"summary\",\n    fun.min = min,\n    fun.max = max,\n    fun = median\n  ) + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\nWarning: Removed 6047 rows containing non-finite outside the scale range\n(`stat_summary()`).",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>P</span>"
    ]
  },
  {
    "objectID": "p.html#geom_polygon",
    "href": "p.html#geom_polygon",
    "title": "16  P",
    "section": "16.4 geom_polygon",
    "text": "16.4 geom_polygon\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate polygon given x and y values. This is similar to paths except that the start an end points are connected.\nUnderstandable aesthetics\nrequired aesthetics\nx,\ny\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth, subgroup\nSee also\ngeom_path\nExample\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_polygon() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"a1: X-time dependent variable\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Electricity, y=Cooking)) + \n  geom_polygon() + ggtitle(\"a2: X-time independent variable\")\na1|a2",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>P</span>"
    ]
  },
  {
    "objectID": "p.html#geom_polygon_pattern",
    "href": "p.html#geom_polygon_pattern",
    "title": "16  P",
    "section": "16.5 geom_polygon_pattern",
    "text": "16.5 geom_polygon_pattern\nPackage\nggpattern (FC, Davis, and ggplot2 authors 2023)\nDescription\nFill polygons with pattern\nUnderstandable aesthetics\nrequired aesthetics\nx or y,\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth, subgroup, pattern_fill, pattern_fill_colour, pattern\nSee also\ngeom_polygon\nExample\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_polygon_pattern() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"a1: X-time dependent variable\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Electricity, y=Cooking)) + \n  geom_polygon_pattern(aes(fill=Region)) + \n  ggtitle(\"a2: X-time independent variable\")\na1|a2\n\n\n\n\n\n\n\n\n\n\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern: ’Ggplot2’ Pattern Geoms.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>P</span>"
    ]
  },
  {
    "objectID": "q.html",
    "href": "q.html",
    "title": "17  Q",
    "section": "",
    "text": "17.1 geom_qq\nPackage\nggplot2 (Wickham 2016)\nDescription\nDraws quantitle-quantile plot.\nUnderstandable aesthetics\nrequired aesthetics\nsample\noptional aesthetics\ngroup, x, y\nSee also\ngeom_qq_line\nExample\nworldbankdata |&gt;\n  ggplot(aes(sample = Cooking)) +\n  geom_qq()\n\nWarning: Removed 6047 rows containing non-finite outside the scale range\n(`stat_qq()`).",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Q</span>"
    ]
  },
  {
    "objectID": "q.html#qq_line",
    "href": "q.html#qq_line",
    "title": "17  Q",
    "section": "17.2 geom_qq_line",
    "text": "17.2 geom_qq_line\nPackage\nggplot2 (Wickham 2016)\nDescription\nComputes the slope and intercept of the line connecting the points at specified quartiles of the theoretical and sample distribution in the quantitle-quantile plot. This geom should be used along with geom_qq to plot to be meaningful.\nUnderstandable aesthetics\nrequired aesthetics\nsample\noptional aesthetics\ngroup, x, y\nSee also\ngeom_qq_line\nExample\n\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(sample = Cooking)) +\n  geom_qq_line()  + ggtitle(\"geom_qq_line only\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(sample = Cooking)) +\n  geom_qq_line() + geom_qq() + ggtitle(\"geom_qq_line and geom_qq\")\na1|a2",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Q</span>"
    ]
  },
  {
    "objectID": "q.html#quantile",
    "href": "q.html#quantile",
    "title": "17  Q",
    "section": "17.3 geom_qquantile",
    "text": "17.3 geom_qquantile\nPackage\nggplot2 (Wickham 2016)\nDescription\nFits and draw quantile regression lines. Quantile regression models the relationship between independent variables and the percentiles of the dependent variable\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nalpha, colour, group, linetype, linewidth, weight, quantile, method\nSee also\ngeom_boxplot\nExamples\nExample 1\n\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(y=Cooking, x = Electricity)) + \n  geom_quantile() + ggtitle(\"geom_quantile only\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(y=Cooking, x = Electricity)) + \n  geom_quantile() + \n  geom_point() +\n  ggtitle(\"geom_quantile and geom_point\")\na1|a2\n\n\n\n\n\n\n\n\nExample 2\n\nq &lt;- seq(0.05, 0.95, by = 0.05)\na3 &lt;- worldbankdata |&gt;\n  ggplot(aes(y=Cooking, x = Electricity)) + \n  geom_quantile(method = \"rqss\") + \n  ggtitle(\"geom_quantile with method rqss\")\na4 &lt;- worldbankdata |&gt;\n  ggplot(aes(y=Cooking, x = Electricity)) + \n  geom_quantile(method = \"rqss\") + \n  geom_point() +\n  ggtitle(\"geom_quantile with \\n method rqss and geom_point\")\na3|a4\n\n\n\n\n\n\n\n\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Q</span>"
    ]
  },
  {
    "objectID": "r.html",
    "href": "r.html",
    "title": "18  R",
    "section": "",
    "text": "18.1 geom_raster\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\noptional aesthetics\nSee also\ngeom_tile, geom_rect\nExample",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>R</span>"
    ]
  },
  {
    "objectID": "r.html#geom_rect",
    "href": "r.html#geom_rect",
    "title": "18  R",
    "section": "18.2 geom_rect",
    "text": "18.2 geom_rect\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\noptional aesthetics\nSee also\ngeom_tile, geom_rect\nExample",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>R</span>"
    ]
  },
  {
    "objectID": "r.html#geom_ribbon",
    "href": "r.html#geom_ribbon",
    "title": "18  R",
    "section": "18.3 geom_ribbon",
    "text": "18.3 geom_ribbon\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\noptional aesthetics\nSee also\nExample",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>R</span>"
    ]
  },
  {
    "objectID": "r.html#geom_rub",
    "href": "r.html#geom_rub",
    "title": "18  R",
    "section": "18.4 geom_rub",
    "text": "18.4 geom_rub\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\noptional aesthetics\nSee also\nExample",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>R</span>"
    ]
  },
  {
    "objectID": "r.html#geom_rect-1",
    "href": "r.html#geom_rect-1",
    "title": "18  R",
    "section": "18.5 geom_rect",
    "text": "18.5 geom_rect\nSee also\ngeom_tile, geom_raster",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>R</span>"
    ]
  },
  {
    "objectID": "r.html#geom_raster",
    "href": "r.html#geom_raster",
    "title": "18  R",
    "section": "18.6 geom_raster",
    "text": "18.6 geom_raster\nSee also\ngeom_tile, geom_tile\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>R</span>"
    ]
  },
  {
    "objectID": "s.html",
    "href": "s.html",
    "title": "19  S",
    "section": "",
    "text": "19.1 geom_smooth\nPackage\nggplot2 (Wickham 2016)\nDescription\nAdd a smooth curve or line to a scatter plot for visulizing trend between x and y variable.\nSee also\ngeom_point\nUnderstandable aesthetics\nThe statistical transformation to use on the data for this layer\nExample\np1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Sri Lanka\" ) |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt; \n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_point() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2000:2021)  + \n\n  ggtitle(\"geom_point_only\")\n\np2 &lt;- worldbankdata |&gt; \n  filter(Country == \"Sri Lanka\" ) |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_smooth() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2000:2021)  + \n  ggtitle(\"geom_smoth_only\")\n\np3 &lt;- worldbankdata |&gt;\n  filter(Country == \"Sri Lanka\" ) |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_point() +\n  geom_smooth() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2000:2021)  + \n  ggtitle(\"geom_point + geom_smooth: loess\")\n\np4 &lt;- worldbankdata |&gt; \n  filter(Country == \"Sri Lanka\" ) |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt; \n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2000:2021)  + \n  ggtitle(\"geom_point + geom_smooth:lm\")\n\n(p1 + p2)/(p3+p4)",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>S</span>"
    ]
  },
  {
    "objectID": "s.html#geom_smooth",
    "href": "s.html#geom_smooth",
    "title": "19  S",
    "section": "",
    "text": "Required aesthetics\n\nx, y\n\nOptional aesthetics\n\nalpha, colour, fill, group, linetype, linewidth, weight, ymax, ymin\n\n\n\n\nsmooth",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>S</span>"
    ]
  },
  {
    "objectID": "s.html#geom_segment",
    "href": "s.html#geom_segment",
    "title": "19  S",
    "section": "19.2 geom_segment",
    "text": "19.2 geom_segment\nPackage\nggplot2 (Wickham 2016)\nDescription\nAdd a straight line segment between two points.\nUnderstandable aesthetics\n\nRequired aesthetics\n\nx, y, xend or yend\n\nOptional aesthetics\n\nalpha, colour, group, linetype, linewidth\n\n\nThe statistical transformation to use on the data for this layer\n\nidentity\n\nSee Also\n\ngeom_curve(), geom_path(), geom_line(), geom_spoke()\n\nExamples\nExample 1: simulated data\n\np1 &lt;- ggplot() + \n  geom_segment(aes(x = 3, y = 4, xend = 25, yend = 25)) +\n  theme_minimal() +\n  coord_cartesian(ylim = c(0, 30), xlim = c(0, 30)) +\n  theme_bw()+\n  ggtitle(\"geom_segment_only\")\n\n\ndata &lt;- data.frame(\n  x_start = c(1.5, 2.6, 4.1, 5.1),\n  y_start = c(1.2, 2, 2.2, 2.8),\n  x_end = c(2.6, 4.1, 5.1, 6),\n  y_end = c(2, 2.2, 2.8, 4))\n\np2 &lt;- ggplot(data) +\n  geom_segment(aes(x = x_start, y = y_start, xend = x_end, yend = y_end),\n               color = \"black\", size = 0.5, \n               arrow = arrow(type = \"closed\", length = unit(0.2, \"inches\"))) +\n  labs(x = \"X Axis\",\n       y = \"Y Axis\") +\n  ggtitle(\"geom_segment with direction\")\np1+p2\n\n\n\n\n\n\n\n\nExample 2: Application data\n\nSL_segments &lt;- worldbankdata |&gt; \n  filter(Country == \"Sri Lanka\" & Year &gt; 2013) |&gt; \n     mutate(\n    x_end = lead(Year), \n    y_end = lead(Electricity)  \n  ) |&gt; \n  filter(!is.na(x_end) & !is.na(y_end))\n\n ggplot(SL_segments) +\n  geom_segment(aes(x = Year, y = Electricity, xend = x_end, \n                   yend = y_end),\n               color = \"blue\", size = 0.5, arrow = arrow(type = \"closed\", length = unit(0.2, \"inches\"))) +\n  labs(x = \"Year\",\n       y = \"Electricity Consumption\",\n       title = \"Sri Lanka Electricity Consumption Over Time (geom_segment)\")",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>S</span>"
    ]
  },
  {
    "objectID": "s.html#geom_spoke",
    "href": "s.html#geom_spoke",
    "title": "19  S",
    "section": "19.3 geom_spoke",
    "text": "19.3 geom_spoke\nPackage\nggplot2 (Wickham 2016)\nDescription\n\nCreates radial line segments (spokes) from a central point, where each spoke is defined by its angle and radius. This is useful for visualizing directions or vectors.\n\nUnderstandable aesthetics\n\nRequired aesthetics\n\nx, y, angle, radius\n\nOptional aesthetics\n\nalpha, colour, group, linetype, linewidth\n\n\nThe statistical transformation to use on the data for this layer\n\nidentity\n\nExamples\nExample: Simulated data\n\nset.seed(8)\ndata &lt;- tibble(\n  x = runif(10, 1, 10),      # Random x-coordinates\n  y = runif(10, 1, 10),      # Random y-coordinates\n  angle = runif(10, 0, 2 * pi),  # Random angles in radians\n  radius = runif(10, 0.5, 2) # Random lengths for spokes\n)\n\n\nggplot(data, aes(x = x, y = y)) +\n  geom_spoke(aes(angle = angle, radius = radius),\n             color = \"blue\", size = 0.5) +\n  labs(x = \"X-Axis\", \n       y = \"Y-Axis\", \n       title = \"geom_spoke\") \n\n\n\n\n\n\n\n\nExample: Practical application data\n\nSL &lt;- worldbankdata |&gt; \n  filter(Country == \"Sri Lanka\" & Year &gt; 2013)\n\n# Prepare the data for geom_spoke\nSL_segments &lt;- SL |&gt; \n  mutate(\n    x_end = lead(Year),  # Next year\n    y_end = lead(Electricity)  # Next year's electricity value\n  ) |&gt; \n  filter(!is.na(x_end) & !is.na(y_end)) |&gt; \n  mutate(\n    angle = atan2(y_end - Electricity, x_end - Year),  # Angle in radians\n    radius = sqrt((x_end - Year)^2 + (y_end - Electricity)^2)  # Euclidean distance\n  )\n\n# Plot with geom_spoke\nggplot(SL_segments, aes(x = Year, y = Electricity, color=as.factor(Year))) +\n  geom_spoke(aes(angle = angle, radius = radius), size = 1) +\n  scale_color_brewer(type = \"qual\", palette = 2) +\n  labs(x = \"Year\",\n       y = \"Electricity Consumption\",\n       title = \"Sri Lanka Electricity Consumption Over Time (geom_spoke)\")",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>S</span>"
    ]
  },
  {
    "objectID": "s.html#geom_step",
    "href": "s.html#geom_step",
    "title": "19  S",
    "section": "19.4 geom_step",
    "text": "19.4 geom_step\nPackage\nggplot2 (Wickham 2016)\nDescription\n\nCreate stairstep plot: Connect observations in the order in which they appear in the data by stairs.\n\nUnderstandable aesthetics\n\nRequired aesthetics\n\nx, y\n\nOptional aesthetics\n\nalpha, colour, group, linetype, linewidth\n\n\nThe statistical transformation to use on the data for this layer\n\nidentity\n\nSee Also\n\ngeom_path(), geom_line(), geom_polygon(), geom_segment()\n\nExample\n\np1 &lt;- worldbankdata |&gt; \n  filter(Country == \"Bangladesh\") |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_point() + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"geom_point only\")\n\np2 &lt;- worldbankdata |&gt; \n  filter(Country == \"Sri Lanka\") |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_step(color = \"red\", size = 1) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"geom_step only\")\n\np1 + p2",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>S</span>"
    ]
  },
  {
    "objectID": "s.html#geom_sf",
    "href": "s.html#geom_sf",
    "title": "19  S",
    "section": "19.5 geom_sf",
    "text": "19.5 geom_sf\nPackage\nggplot2 (Wickham 2016)\nDescription\n\nVisualize sf objects.\n\nUnderstandable aesthetics\n\nRequired aesthetics\n\nsimple feature geometry\n\nOptional aesthetics\n\nalpha, colour, group, fill\n\n\nThe statistical transformation to use on the data for this layer\n\nsf\n\nSee Also\n\ngeom_sf_label(), geom_sf_text()\n\nExample\n\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n# Load world spatial data\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\nelectricity_data &lt;- worldbankdata |&gt; filter(Year == 2020)\nworld_electricity &lt;- world |&gt; \n  left_join(electricity_data, by = c(\"name\" = \"Country\"))\n\nggplot(data = world_electricity) +\n  geom_sf(aes(fill = Electricity), color = \"black\", size = 0.1) +\n  scale_fill_viridis_c(option = \"plasma\", na.value = \"grey90\") +\n  labs(\n    title = \"Percentage of Population Access to Electricity by Country\",\n    fill = \"Electricity\")",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>S</span>"
    ]
  },
  {
    "objectID": "s.html#geom_sf_label",
    "href": "s.html#geom_sf_label",
    "title": "19  S",
    "section": "19.6 geom_sf_label",
    "text": "19.6 geom_sf_label\nPackage\nggsflabel (Yutani 2024)\n# install.packages(\"devtools\")\ndevtools::install_github(\"yutannihilation/ggsflabel\")\nDescription\n\nAdd text labels to spatial features in a plot created with geom_sf()\n\nUnderstandable aesthetics\n\nRequired aesthetics\n\nlabel\n\nOptional aesthetics\n\nalpha, colour, group, fill\n\n\nThe statistical transformation to use on the data for this layer\n\nsf_coordinates\n\nSee Also\n\ngeom_sf(), geom_sf_text()\n\nExample\n\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n# Load world spatial data\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\nelectricity_data &lt;- worldbankdata |&gt; filter(Year == 2020)\nworld_electricity &lt;- world |&gt; \n  left_join(electricity_data, by = c(\"name\" = \"Country\"))\n\ncountries_to_label &lt;- world_electricity |&gt; head(10)\n\nggplot(data = world_electricity) +\n  geom_sf(aes(fill = Electricity), color = \"black\", size = 0.1) +\n   geom_sf_label(data = countries_to_label, aes(label = name), size = 3, label.padding = unit(0.1, \"lines\")) +\n  scale_fill_viridis_c(option = \"plasma\", na.value = \"grey90\") +\n  labs(\n    title = \"Percentage of Population Access to Electricity by Country\",\n    fill = \"Electricity\")",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>S</span>"
    ]
  },
  {
    "objectID": "s.html#geom_sf_text",
    "href": "s.html#geom_sf_text",
    "title": "19  S",
    "section": "19.7 geom_sf_text",
    "text": "19.7 geom_sf_text\nggsflabel (Yutani 2024)\n# install.packages(\"devtools\")\ndevtools::install_github(\"yutannihilation/ggsflabel\")\nDescription\n\nAdd text labels to spatial features in a plot created with geom_sf() without the background box. It is a similar approach as with geom_sf_label().\n\nUnderstandable aesthetics\n\nRequired aesthetics\n\nlabel\n\nOptional aesthetics\n\nalpha, colour, group, fill\n\n\nThe statistical transformation to use on the data for this layer\n\nsf_coordinates\n\nSee Also\n\ngeom_sf(), geom_sf_label()\n\nExample\n\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n# Load world spatial data\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\nelectricity_data &lt;- worldbankdata |&gt; filter(\"Year\" == 2020 )\nworld_electricity &lt;- world |&gt; \n  left_join(electricity_data, by = c(\"name\" = \"Country\"))\n\ncountries_to_label &lt;- world_electricity |&gt; head(10)\n\nggplot(data = world_electricity) +\n  geom_sf(aes(fill = Electricity), color = \"black\", size = 0.1) +\n   geom_sf_text(data = countries_to_label, aes(label = name), size = 3, label.padding = unit(0.1, \"lines\")) +\n  scale_fill_viridis_c(option = \"plasma\", na.value = \"grey90\") +\n  labs(\n    title = \"Percentage of Population Access to Electricity by Country\",\n    fill = \"Electricity\")",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>S</span>"
    ]
  },
  {
    "objectID": "s.html#geom_sf_pattern",
    "href": "s.html#geom_sf_pattern",
    "title": "19  S",
    "section": "19.8 geom_sf_pattern",
    "text": "19.8 geom_sf_pattern\nPackage\nggpattern (FC, Davis, and ggplot2 authors 2023)\nDescription\n\nAdd patterns to the map.\n\nUnderstandable aesthetics\n\nRequired aesthetics\n\nNuULL\n\nOptional aesthetics\n\nalpha, colour, group, fill\n\n\nThe statistical transformation to use on the data for this layer\n\nsf_coordinates\n\nExample\n\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(ggpattern)\n\n# Load world spatial data\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\nelectricity_data &lt;- worldbankdata |&gt; filter(\"Year\" == 2020)\nworld_electricity &lt;- world |&gt; \n  left_join(electricity_data, by = c(\"name\" = \"Country\"))\n\nggplot(data = world_electricity) +\n  geom_sf_pattern(aes(fill = Electricity, pattern = is.na(Electricity)), \n                  color = \"black\", \n                  size = 0.1,\n                  pattern_fill = \"gray80\", \n                  pattern_angle = 45, \n                  pattern_density = 0.1) +\n  scale_fill_viridis_c(option = \"plasma\", na.value = \"white\") +\n  labs(\n    title = \"Global Electricity Access with Patterns for Missing Data\",\n    fill = \"Electricity (GWh)\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern: ’Ggplot2’ Pattern Geoms.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nYutani, Hiroaki. 2024. Ggsflabel: Labels for ’Sf’ with ’Ggplot2’. https://github.com/yutannihilation/ggsflabel.",
    "crumbs": [
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>S</span>"
    ]
  },
  {
    "objectID": "t.html",
    "href": "t.html",
    "title": "20  T",
    "section": "",
    "text": "20.1 geom_text\nPackage\nggplot2 (Wickham 2016)\nDescription\nLabeling plots.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nstat , position , size\nExample\np1 &lt;- drop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity, label = Income)) + geom_text(size = 3) + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\") + ggtitle(\"geom_text only\")\np2 &lt;- drop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity, label = Income)) + \n  geom_point(aes(color = Income)) +\n  geom_text(size = 3) + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\") + ggtitle(\"geom_point and geom_text only\")\np1|p2",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>T</span>"
    ]
  },
  {
    "objectID": "t.html#text_repel",
    "href": "t.html#text_repel",
    "title": "20  T",
    "section": "20.2 geom_text_repel",
    "text": "20.2 geom_text_repel\nPackage\nggrepel (Slowikowski 2024)\nDescription\nRepulsive textual annotations.\nUnderstandable aesthetics\nrequired aesthetics\n`x, y\noptional aesthetics\nstat , position , size\nExample\n\nlibrary(ggrepel)\np1 &lt;- ggplot(mtcars, aes(x = wt, y = mpg, label = rownames(mtcars))) +\n  geom_text_repel() +  \n  labs(title = \"\",x = \"Weight (1000 lbs)\", y = \"Miles/(US) gallon\") + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\") + ggtitle(\"geom_text_repel only\")\np2 &lt;- ggplot(mtcars, aes(x = wt, y = mpg, label = rownames(mtcars))) +\n  geom_point() +\n  geom_text_repel() +  \n  labs(title = \"\",x = \"Weight (1000 lbs)\", y = \"Miles/(US) gallon\") + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\") + ggtitle(\"geom_text_repel and geom_point\")\np1|p2",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>T</span>"
    ]
  },
  {
    "objectID": "t.html#tile",
    "href": "t.html#tile",
    "title": "20  T",
    "section": "20.3 geom_tile",
    "text": "20.3 geom_tile\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate heat map plot. geom_rect() and geom_tile() do the same thing, but function inputs are different: geom_rect() uses the locations of the four corners (xmin, xmax, ymin and ymax), while geom_tile() uses the center of the tile and its dimensions (x, y, width, height).\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_rect, geom_raster\nExample\n\n worldbankdata |&gt;\n  filter(Region == \"South Asia\" ) |&gt;\n  ggplot(aes(x=Year,\n             y=Country, fill=Cooking)) +\n  geom_tile(aes(width=1, height=1), col=\"white\") +\n  viridis::scale_fill_viridis() +\n  coord_fixed()",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>T</span>"
    ]
  },
  {
    "objectID": "t.html#text_cooks",
    "href": "t.html#text_cooks",
    "title": "20  T",
    "section": "20.4 geom_text_cooks",
    "text": "20.4 geom_text_cooks\nPackage\nggxmean (Reynolds 2024)\nDescription\nReturns a scatter plot with points that are labeled.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nposition , size, digits, check_overlap\nSee also\ngeom_scatter, geom_text, geom_label\nExample\n\nlibrary(ggxmean)\np1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bolivia\" & Cooking &gt; 75) |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) + \n  geom_text_cooks(check_overlap = TRUE, digits = 1) + ggtitle(\"geom_text_cooks only\")  \np2 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bolivia\" & Cooking &gt; 75) |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) + \n  geom_point(col=\"red\") +\n  geom_text_cooks(check_overlap = TRUE, digits = 1) + ggtitle(\"geom_point and geom_text_cooks\") \np1|p2",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>T</span>"
    ]
  },
  {
    "objectID": "t.html#text_coordinate",
    "href": "t.html#text_coordinate",
    "title": "20  T",
    "section": "20.5 geom_text_coordinate",
    "text": "20.5 geom_text_coordinate\nPackage\nggplot2 (Wickham 2016)\nDescription\nReturns a scatter plot with points that are labeled with (x, y) coordinates.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nposition, size, check_overlap, nudge_x\nSee also\ngeom_text, geom_text_cooks, geom_text_repel\nExample\n\np1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bolivia\" & Cooking &gt; 75) |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) + \n  geom_text_coordinate() +\n  ggtitle(\"geom_text_coordinate only\")\n\np2 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bolivia\" & Cooking &gt; 75) |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) + \n  geom_point(col=\"red\") +\n  geom_text_coordinate() +\n  ggtitle(\"geom_point and geom_text_coordinate\")\np1|p2",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>T</span>"
    ]
  },
  {
    "objectID": "t.html#text_leverage",
    "href": "t.html#text_leverage",
    "title": "20  T",
    "section": "20.6 geom_text_leverage",
    "text": "20.6 geom_text_leverage\nPackage\nggxmean (Reynolds 2024)\nDescription\nReturns a scatter plot with points that are labeled.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nposition , size, check_overlap, nudge_x\nSee also\ngeom_text, geom_text_cooks, geom_text_repel\nExample\n\np1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bolivia\" & Cooking &gt; 75) |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) + \n  geom_text_leverage() +\n  ggtitle(\"geom_text_leverage only\")\n\np2 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bolivia\" & Cooking &gt; 75) |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) + \n  geom_point(col=\"red\") +\n  geom_text_leverage() +\n  ggtitle(\"geom_point and geom_text_leverage\")\np1|p2\n\n\n\n\n\n\n\n\n\n\n\n\nReynolds, Evangeline. 2024. Ggxmean: Statistical Geoms.\n\n\nSlowikowski, Kamil. 2024. Ggrepel: Automatically Position Non-Overlapping Text Labels with ’Ggplot2’. https://CRAN.R-project.org/package=ggrepel.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>T</span>"
    ]
  },
  {
    "objectID": "v.html",
    "href": "v.html",
    "title": "22  V",
    "section": "",
    "text": "22.1 geom_violin\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreates violin plot.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth, weight\nSee also\ngeom_boxplot, geom_density\nExample\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\nggplot(aes(y = Cooking, x=Income, fill=Income)) + \n  geom_violin() + \n  scale_fill_brewer(palette = \"Dark2\") +\n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>V</span>"
    ]
  },
  {
    "objectID": "v.html#violin_pattern",
    "href": "v.html#violin_pattern",
    "title": "22  V",
    "section": "22.2 geom_violin_pattern",
    "text": "22.2 geom_violin_pattern\nPackage\nggforce (Pedersen 2022)\nDescription\nFill violin plots with patterns.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth, weight\n\n22.2.1 The statistical transformation to use on the data for this layer\nydensity\nSee also\ngeom_boxplot, geom_density\nExample\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\nggplot(aes(y = Cooking, x=Income, fill=Income)) + \n  geom_violin_pattern() + \n  scale_fill_brewer(palette = \"Dark2\") +\n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>V</span>"
    ]
  },
  {
    "objectID": "v.html#geom_voronoi_tile",
    "href": "v.html#geom_voronoi_tile",
    "title": "22  V",
    "section": "22.3 geom_voronoi_tile",
    "text": "22.3 geom_voronoi_tile\nPackage\nggforce (Pedersen 2022)\nDescription\nVoronoi tiles are the polygons that result from the spatial division of a plane based on the input points.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, linetype, size\nSee also\ngeom_voronoi_segment, geom_delaunay_tile, geom_delaunay_segment\nExample\n\nlibrary(ggforce)\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  filter(Region == \"Middle East & North Africa\" | Region == \"Sub-Saharan Africa\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_tile(alpha=0.5, aes(fill=Region)) + \n  labs(title = \"a1: geom_voronoi_tile only\") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  theme(aspect.ratio = 1) + \n  theme(legend.position='bottom')\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  filter(Region == \"Middle East & North Africa\" | Region == \"Sub-Saharan Africa\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_tile(alpha=0.5, aes(fill=Region)) + \n  geom_point(aes(col=Region)) + \n  labs(title = \"a1: geom_voronoi_tile and  geom_point\") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  theme(aspect.ratio = 1) +\n  theme(legend.position='none')\na1|a2",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>V</span>"
    ]
  },
  {
    "objectID": "v.html#geom_voronoi_segment",
    "href": "v.html#geom_voronoi_segment",
    "title": "22  V",
    "section": "22.4 geom_voronoi_segment",
    "text": "22.4 geom_voronoi_segment\nPackage\nggforce (Pedersen 2022)\nDescription\nRepresents the borders between the regions assigned to different input points.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, linetype, size\nSee also\ngeom_voronoi_tile, geom_delaunay_tile, geom_delaunay_segment\nExample\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\na1 &lt;- worldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  filter(Income == \"LM\" | Income == \"UM\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_segment() +\n  labs(title = \"a1: geom_voronoi_segment only\") +\n  theme(aspect.ratio = 1)\n\na2 &lt;- worldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  filter(Income == \"LM\" | Income == \"UM\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_voronoi_segment() +\n  labs(title = \"a2: geom_point and \\n geom_voronoi_segment\") +\n  theme(aspect.ratio = 1)\na1 | a2\n\n\n\n\n\n\n\n\n\n\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>V</span>"
    ]
  },
  {
    "objectID": "w.html",
    "href": "w.html",
    "title": "23  W",
    "section": "",
    "text": "23.1 geom_waffle\nPackage\n#install.packages(\"remotes\")\n#remotes::install_github(\"hrbrmstr/waffle\")\nwaffle (Rudis and Gandy 2023)\nDescription\nCreate waffle plots\nUnderstandable aesthetics\nrequired aesthetics\nfill (so the geom knows which column to map the fills to)\nvalues (which column you’re mapping the filling for the squares with)\nSee also\ngeom_bar, geom_col\nExample\nlibrary(waffle)\nworldbankdata |&gt;\n  filter(Region == \"East Asia & Pacific\" | Region == \"Europe & Central Asia\") |&gt;\n  select(Region, Income, Year) |&gt;\n  group_by(Region, Income) |&gt;\n  tally() |&gt;\n  ggplot(aes(fill=Income, values=n)) +\n  geom_waffle(color = \"white\", size=1) +\n  facet_wrap(~Region, ncol=1) +\n  scale_x_discrete(expand=c(0,0)) +\n  scale_y_discrete(expand=c(0,0))",
    "crumbs": [
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>W</span>"
    ]
  },
  {
    "objectID": "w.html#geom_waffle",
    "href": "w.html#geom_waffle",
    "title": "23  W",
    "section": "",
    "text": "Rudis, Bob, and Dave Gandy. 2023. Waffle: Create Waffle Chart Visualizations.",
    "crumbs": [
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>W</span>"
    ]
  },
  {
    "objectID": "x.html",
    "href": "x.html",
    "title": "24  X",
    "section": "",
    "text": "24.1 geom_xmax\nPackage\n# install.packages(\"devtools\")\n#devtools::install_github(\"EvaMaeRey/ggxmean\")\nggxmean (Reynolds 2024)\nDescription\nDraw vertical line at the max of x.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, linetype , size\nSee also\ngeom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\nlibrary(ggxmean)\ndrop_na(worldbankdata) |&gt;\nggplot(aes(x = Cooking)) +\n  geom_histogram(binwidth = 5, alpha=0.5, fill = \"#1b9e77\", color = \"black\") + \n  geom_xmax(color = \"#d95f02\", linetype = \"dashed\", size = 1)",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xmin",
    "href": "x.html#xmin",
    "title": "24  X",
    "section": "24.2 geom_xmin",
    "text": "24.2 geom_xmin\nPackage\nggxmean (Reynolds 2024)\nDescription\nDraw vertical line at the min of x.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, linetype , size\nSee also\ngeom_xmax, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample 1\n\ndrop_na(worldbankdata) |&gt;\nggplot(aes(x = Cooking)) +\n  geom_histogram(binwidth = 5, fill = \"#1b9e77\", color = \"black\") + \n  geom_xmin(color = \"#d95f02\", linetype = \"dashed\", size = 1)",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#x_median",
    "href": "x.html#x_median",
    "title": "24  X",
    "section": "24.3 geom_x_median",
    "text": "24.3 geom_x_median\nPackage\nggxmean (Reynolds 2024)\nDescription\nPlace point at median of x.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, linetype , size\nSee also\ngeom_xmax, geom_xmin, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\n\ndrop_na(worldbankdata) |&gt;\nggplot(aes(x = Cooking)) +\n  geom_histogram(binwidth = 5, fill = \"#1b9e77\", color = \"black\") + \n  geom_x_median(color = \"#d95f02\", linetype = \"dashed\", size = 1)",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#x_mean",
    "href": "x.html#x_mean",
    "title": "24  X",
    "section": "24.4 geom_x_mean",
    "text": "24.4 geom_x_mean\nPackage\nggxmean (Reynolds 2024)\nDescription\nPlace point at mean of x.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, linetype , size\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\n\ndrop_na(worldbankdata) |&gt;\nggplot(aes(x = Cooking)) +\n  geom_histogram(binwidth = 5, fill = \"#1b9e77\", color = \"black\") + \n  geom_x_mean(color = \"#d95f02\", linetype = \"dashed\", size = 1)",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#x_mean_label",
    "href": "x.html#x_mean_label",
    "title": "24  X",
    "section": "24.5 geom_x_mean_label",
    "text": "24.5 geom_x_mean_label\nPackage\nggxmean (Reynolds 2024)\nDescription\nPlace point at mean of x and label.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, linetype , size\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\n\ndrop_na(worldbankdata) |&gt;\nggplot(aes(x = Cooking)) +\n  geom_histogram(binwidth = 5, fill = \"#1b9e77\", color = \"black\") + \n  geom_x_mean_label(color = \"#d95f02\", linetype = \"dashed\", size = 1)",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#x_percentile",
    "href": "x.html#x_percentile",
    "title": "24  X",
    "section": "24.6 geom_x_percentile",
    "text": "24.6 geom_x_percentile\nPackage\nggxmean (Reynolds 2024)\nDescription\nLines are drawn at the percentile value of x.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\npercentile, color, linetype , size\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\n\nquantile(worldbankdata$Cooking, na.rm = T)\n\n    0%    25%    50%    75%   100% \n  0.00  27.30  84.75 100.00 100.00 \n\ndrop_na(worldbankdata) |&gt;\nggplot(mapping = aes(x = Cooking)) +\n  geom_histogram(binwidth = 5, fill = \"#1b9e77\", color = \"black\") + \n  geom_x_percentile(percentile = c( 25,50, 75), linetype = \"dashed\", size = 1, color = \"#d95f02\") +\n     labs(title = \"25th, 50th and 75th percentiles\", x = \"Cooking\", y = \"Frequency\")",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xy_means",
    "href": "x.html#xy_means",
    "title": "24  X",
    "section": "24.7 geom_xy_means",
    "text": "24.7 geom_xy_means\nPackage\nggxmean (Reynolds 2024)\nDescription\nPlace point at the intersection point of mean of x and mean of y.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nposition, color, size\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\n\ndrop_na(worldbankdata) |&gt; \n  ggplot() +\n  aes(x = Electricity, y = Cooking) +\n  geom_point(color = \"black\", size = 1) + \n  ggxmean::geom_xy_means(color = \"red\", size = 5) +  \n  labs(title = \"\", x = \"Electricity\", y = \"Cooking\") \n\n\n\n\n\n\n\n\nExample 2\n\nlibrary(ggxmean)\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(x = Income, y = Cooking)) + \n  geom_xy_means(na.rm=TRUE, col=\"red\", size=4) + \n  ggtitle(\"a1: geom_xy_means only\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x = Income, y = Cooking)) + \n  geom_point(alpha=0.5) +\n  geom_xy_means(na.rm=TRUE, col=\"red\", size=4) + \n  ggtitle(\"a2: geom_points and geom_xy_means\")\na1|a2\n\nWarning: Removed 6047 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#x_line",
    "href": "x.html#x_line",
    "title": "24  X",
    "section": "24.8 geom_x_line",
    "text": "24.8 geom_x_line\nPackage\nggxmean (Reynolds 2024)\nDescription\nLines defined by values of x.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, size, alpha\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample \n\np1 &lt;- drop_na(worldbankdata) |&gt; \n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity)) + geom_point()+\n  labs(title = \"geom_point only\", x = \"Cooking\", y = \"Electricity\") \np2 &lt;- drop_na(worldbankdata) |&gt; \n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity)) + geom_point()+\n  geom_x_line(color = '#1b9e77', size = 0.9) +\n  labs(title = \"geom_point and geom_x_line\", x = \"Cooking\", y = \"Electricity\") \np1|p2",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xdiff",
    "href": "x.html#xdiff",
    "title": "24  X",
    "section": "24.9 geom_xdiff",
    "text": "24.9 geom_xdiff\nPackage\nggxmean (Reynolds 2024)\nDescription\nPlace lines from each point to mean x.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, size\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample \n\np1 &lt;- drop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt; \n  ggplot(aes(x = Cooking, y = Electricity)) + geom_point() + ggxmean:::geom_xdiff() +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\") +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"),\n        plot.subtitle = element_text(hjust = 0.5),\n        plot.caption = element_text(hjust = 0.5), legend.position = \"none\",\n        axis.title.x = element_text(margin = margin(t = 10)),\n        axis.title.y = element_text(margin = margin(r = 10)))\np2 &lt;- drop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt; \n  ggplot(aes(x = Cooking, y = Electricity)) + geom_x_mean() +\n  geom_point() + ggxmean:::geom_xdiff() +\n  labs(title = \"geom_x_mean, geom_point and geom_xdiff\", x = \"Cooking\", y = \"Electricity\") +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"),\n        plot.subtitle = element_text(hjust = 0.5),\n        plot.caption = element_text(hjust = 0.5), legend.position = \"none\",\n        axis.title.x = element_text(margin = margin(t = 10)),\n        axis.title.y = element_text(margin = margin(r = 10)))\np1/p2",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#x1sd",
    "href": "x.html#x1sd",
    "title": "24  X",
    "section": "24.10 geom_x1sd",
    "text": "24.10 geom_x1sd\nPackage\nggxmean (Reynolds 2024)\nDescription\nRepresents one standard deviation.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, alpha, fill, linetype\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample \n\ndrop_na(worldbankdata) |&gt; \n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity)) + \n  geom_point() + \n  ggxmean:::geom_x1sd(color = '#e7298a', fill = '#e7298a') +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\")",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xydiffsmean",
    "href": "x.html#xydiffsmean",
    "title": "24  X",
    "section": "24.11 geom_xydiffsmean",
    "text": "24.11 geom_xydiffsmean\nPackage\nggxmean (Reynolds 2024)\nDescription\nDraw the results of \\[\\frac{\\sum_{i=1}^{N}(x_i-\\bar{x})(y_i-\\bar{y})}{N}\\]\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, alpha, fill\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample \n\np1 &lt;- drop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity)) + \n  geom_point() +\n  ggxmean:::geom_xydiffsmean(color = '#c51b8a', fill = '#c51b8a', alpha = 0.5) +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\") \np2 &lt;- drop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity)) + \n  geom_point() + ggxmean:::geom_xdiff(col=\"#1b9e77\") + ggxmean:::geom_ydiff(col=\"#d95f02\")+\n  ggxmean:::geom_xydiffsmean(color = '#c51b8a', fill = '#c51b8a', alpha = 0.5) +\n  labs(title = \"geom_point, geom_xdiff, geom_ydiff, geom_xydiffmean\", x = \"Cooking\", y = \"Electricity\") \np1/p2",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xsidebar",
    "href": "x.html#xsidebar",
    "title": "24  X",
    "section": "24.12 geom_xsidebar",
    "text": "24.12 geom_xsidebar\nPackage\nggside (Landis 2024)\nDescription\nThe xside variant of geom_bar is geom_xsidebar.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, alpha, fill, position, width\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample \n\nrequire(ggside)\ndrop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity )) +\n  geom_point(size = 1.5) + \n  geom_xsidebar(aes(fill = Income)) +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\") + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\")",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xsidedensity",
    "href": "x.html#xsidedensity",
    "title": "24  X",
    "section": "24.13 geom_xsidedensity",
    "text": "24.13 geom_xsidedensity\nPackage\nggside (Landis 2024)\nDescription\nThe xside variant of geom_density is geom_xsidedensity.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, fill, position\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\n\nrequire(ggside)\ndrop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity, fill = Income)) +\n  geom_point(size = 1.5) +\n  geom_xsidedensity(size = 1) +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\")  + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\")",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xsidefreqpoly",
    "href": "x.html#xsidefreqpoly",
    "title": "24  X",
    "section": "24.14 geom_xsidefreqpoly",
    "text": "24.14 geom_xsidefreqpoly\nPackage\nggside (Landis 2024)\nDescription\nThe xside variant of geom_freqpoly is geom_xsidefreqpoly.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, fill, position\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\n\nrequire(ggside)\ndrop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity, colour = Income)) +\n  geom_point(size = 1.5) + \n  geom_xsidefreqpoly(aes(y=after_stat(count)),binwidth = 500) +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\") + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\")",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xsidehistogram",
    "href": "x.html#xsidehistogram",
    "title": "24  X",
    "section": "24.15 geom_xsidehistogram",
    "text": "24.15 geom_xsidehistogram\nPackage\nggside (Landis 2024)\nDescription\nThe xside variant of geom_histogram is geom_xsidehistogram.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, fill, position, binwidth\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\n\nrequire(ggside)\ndrop_na(worldbankdata) %&gt;% \n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) %&gt;% \n  ggplot(aes(x = Cooking, y = Electricity, colour = Income)) +\n  geom_point(size = 1.5) + \n  geom_xsidehistogram(binwidth = 0.1, aes(fill = Income)) +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\") + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\")",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xsidepoint",
    "href": "x.html#xsidepoint",
    "title": "24  X",
    "section": "24.16 geom_xsidepoint",
    "text": "24.16 geom_xsidepoint\nPackage\nggside (Landis 2024)\nDescription\nThe ggside variants of geom_point is geom_xsidepoint. Projection of points into the x-axis to show the marginal distribution of x.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, fill, position\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\n\nrequire(ggside)\ndrop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt; \n  ggplot(aes(x = Cooking, y = Electricity, colour = Income)) +\n  geom_point(size = 1.5) +\n  geom_xsidepoint(aes(y = Income)) +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\")  + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\")",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xsideboxplot",
    "href": "x.html#xsideboxplot",
    "title": "24  X",
    "section": "24.17 geom_xsideboxplot",
    "text": "24.17 geom_xsideboxplot\nPackage\nggside (Landis 2024)\nDescription\nThe xside variant of geom_boxplot is geom_xsideboxplot. Marginal distribution of x using boxplots\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, fill, position, alpha\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_x_margin_arrow, geom_x_margin_point, geom_xsidefunction\nExample\n\nrequire(ggside)\ndrop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity, colour = Income)) +\n  geom_point(size = 1.5) + \n  geom_xsideboxplot(aes(y = Income), orientation = \"y\") +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\")  + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\")",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#x_margin_arrow",
    "href": "x.html#x_margin_arrow",
    "title": "24  X",
    "section": "24.18 geom_x_margin_arrow",
    "text": "24.18 geom_x_margin_arrow\nPackage\nggpp (Aphalo 2024)\nDescription\nPlot small arrows on plot margins in a 2D display. Arrows can be used to highlight specific values along a margin.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, alpha, position, xintercept\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_point, geom_xsidefunction\nExample\n\nrequire(ggpp)\ndrop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt; \n  ggplot(aes(x = Cooking, y = Electricity, colour = Income)) +\n  geom_point(size = 1.5) + \n  geom_x_margin_arrow(xintercept = seq(0, 75, by = 10), size = 1, alpha = 0.8) +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\")  + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\")",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#x_margin_point",
    "href": "x.html#x_margin_point",
    "title": "24  X",
    "section": "24.19 geom_x_margin_point",
    "text": "24.19 geom_x_margin_point\nPackage\nggpp (Aphalo 2024)\nDescription\nMargin points can supplement a 2d display with annotations. Margin points can highlight individual values along a margin.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, alpha, position, xintercept\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_xsidefunction\nExample\n\nrequire(ggpp)\ndrop_na(worldbankdata) |&gt;\n  filter(Code %in% c('AFG', 'AGO', 'BEN', 'BFA', 'BGD', 'BOL', 'BWA')) |&gt; \n  ggplot(aes(x = Cooking, y = Electricity, colour = Income)) +\n  geom_point(size = 1.5) + \n  geom_x_margin_point(xintercept = seq(0, 75, by = 10)) +\n  labs(title = \"\", x = \"Cooking\", y = \"Electricity\") + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\")",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "x.html#xsidefunction",
    "href": "x.html#xsidefunction",
    "title": "24  X",
    "section": "24.20 geom_xsidefunction",
    "text": "24.20 geom_xsidefunction\nPackage\nggside (Landis 2024)\nDescription\nThe xside and yside variants of geom_function.\nUnderstandable aesthetics\nrequired aesthetics\nx\noptional aesthetics\ncolor, alpha, position\nSee also\ngeom_density2d\nSee also\ngeom_xmax, geom_xmin, geom_x_median, geom_x_mean, geom_x_mean_label, geom_x_percentile, geom_xy_means, geom_x_line, geom_xdiff, geom_x1sd, geom_xydiffsmean, geom_xsidebar, geom_xsidedensity, geom_xsidefreqpoly, geom_xsidehistogram, geom_xsidepoint, geom_xsideboxplot, geom_x_margin_arrow, geom_x_margin_point\nExample\n\nrequire(ggpp)\ndrop_na(worldbankdata) |&gt;\nggplot(aes(x = Cooking, y = Electricity, colour = Income)) +\n  geom_point() +\n  geom_xsidedensity(fill = \"#d95f02\", alpha = .3) + scale_color_brewer(palette = \"Dark2\") + scale_fill_brewer(palette = \"Dark2\")\n\n\n\n\n\n\n\n\n\n\n\n\nAphalo, Pedro J. 2024. Ggpp: Grammar Extensions to ’Ggplot2’. https://CRAN.R-project.org/package=ggpp.\n\n\nLandis, Justin. 2024. Ggside: Side Grammar Graphics. https://CRAN.R-project.org/package=ggside.\n\n\nReynolds, Evangeline. 2024. Ggxmean: Statistical Geoms.",
    "crumbs": [
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>X</span>"
    ]
  },
  {
    "objectID": "y.html",
    "href": "y.html",
    "title": "25  Y",
    "section": "",
    "text": "25.1 geom_y_mean\n##geom_y_line{#y_line}\nPackage\nggxmean (Reynolds 2024)\nDescription\nCreate horizontal lines representing the specified value of the y variable across the x values in the data.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_ydiff, geom_line\nExample\nPackage\nggxmean (Reynolds 2024)\nDescription\nDraw a horizontal line at the mean of y-variable.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_line, geom_ribbon geom_y_line\nExample\nlibrary(ggxmean)\np1 &lt;- worldbankdata |&gt; \n  filter(Country == \"Angola\") |&gt;\n  ggplot(mapping = aes(x = Cooking, y = Electricity)) +\ngeom_point()  + ggtitle(\"without geom_y_mean\")\np2 &lt;- worldbankdata |&gt; \n  filter(Country == \"Angola\") |&gt;\n  ggplot(mapping = aes(x = Cooking, y = Electricity)) +\ngeom_point() + geom_y_mean(colour=\"#d95f02\") + \n  ggtitle(\"with geom_y_mean\")\np1|p2\n##geom_ydiff{#ydiff}\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_line, geom_ribbon geom_y_line\nExample\nlibrary(ggxmean)\np1 &lt;- worldbankdata |&gt; \n  filter(Country == \"Angola\") |&gt;\n  ggplot(mapping = aes(x = Cooking, y = Electricity)) +\ngeom_point()  + ggtitle(\"without geom_ydiff\")\np2 &lt;- worldbankdata |&gt; \n  filter(Country == \"Angola\") |&gt;\n  ggplot(mapping = aes(x = Cooking, y = Electricity)) +\ngeom_point() +\n  geom_y_mean(col=\"#d95f02\")+ggxmean:::geom_ydiff(colour=\"#1b9e77\") + \n  ggtitle(\"with geom_ydiff\")\np1|p2",
    "crumbs": [
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Y</span>"
    ]
  },
  {
    "objectID": "y.html#y_mean",
    "href": "y.html#y_mean",
    "title": "25  Y",
    "section": "",
    "text": "Reynolds, Evangeline. 2024. Ggxmean: Statistical Geoms.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Y</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Aphalo, Pedro J. 2024. Ggpp: Grammar Extensions to ’Ggplot2’.\nhttps://CRAN.R-project.org/package=ggpp.\n\n\nBrunson, Jason Cory. 2020. “Ggalluvial: Layered Grammar for\nAlluvial Plots.” Journal of Open Source Software 5 (49).\n\n\nBrunson, Jason Cory, and Quentin D Read. 2019. “Package\n‘Ggalluvial’.”\n\n\nCampitelli, Elio. 2021. metR: Tools for Easier Analysis of\nMeteorological Fields. https://doi.org/10.5281/zenodo.2593516.\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern:\n’Ggplot2’ Pattern Geoms.\n\n\nHocking, Toby Dylan. 2023. Directlabels: Direct Labels for\nMulticolor Plots. https://CRAN.R-project.org/package=directlabels.\n\n\nJeppson, Haley, Heike Hofmann, and Di Cook. 2021. Ggmosaic: Mosaic\nPlots in the ’Ggplot2’ Framework. https://CRAN.R-project.org/package=ggmosaic.\n\n\nKaplan, Daniel, and Randall Pruim. 2023. Ggformula: Formula\nInterface to the Grammar of Graphics. https://CRAN.R-project.org/package=ggformula.\n\n\nLandis, Justin. 2024. Ggside: Side Grammar Graphics. https://CRAN.R-project.org/package=ggside.\n\n\nMiller, David L. 2023. emoGG: Use Emoji in Ggplot2.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nQuartier-la-Tente, Alain. 2024. Ggdemetra: ’Ggplot2’ Extension for\nSeasonal and Trading Day Adjustment with ’RJDemetra’. https://CRAN.R-project.org/package=ggdemetra.\n\n\nReynolds, Evangeline. 2024. Ggxmean: Statistical Geoms.\n\n\nRudis, Bob, Ben Bolker, and Jan Schulz. 2017. Ggalt: Extra\nCoordinate Systems, ’Geoms’, Statistical Transformations, Scales and\nFonts for ’Ggplot2’. https://CRAN.R-project.org/package=ggalt.\n\n\nRudis, Bob, and Dave Gandy. 2023. Waffle: Create Waffle Chart\nVisualizations.\n\n\nSjoberg, David. 2020. Ggbump: Bump Chart and Sigmoid Curves. https://CRAN.R-project.org/package=ggbump.\n\n\nSlowikowski, Kamil. 2024. Ggrepel: Automatically Position\nNon-Overlapping Text Labels with ’Ggplot2’. https://CRAN.R-project.org/package=ggrepel.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data\nAnalysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy\nD’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019.\n“Welcome to the tidyverse.”\nJournal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis\nVaughan. 2023. Dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\n\n\nWickham, Hadley, Davis Vaughan, and Maximilian Girlich. 2024. Tidyr:\nTidy Messy Data. https://CRAN.R-project.org/package=tidyr.\n\n\nWilke, Claus O. 2023. Ggridges: Ridgeline Plots in ’Ggplot2’.\nhttps://CRAN.R-project.org/package=ggridges.\n\n\nYu, Guangchuang. 2023. Ggimage: Use Image in ’Ggplot2’. https://CRAN.R-project.org/package=ggimage.\n\n\nYu, Youzhi, and Trent Buskirk. 2023. ggDoubleHeat: A Heatmap-Like\nVisualization Tool. https://CRAN.R-project.org/package=ggDoubleHeat.\n\n\nYutani, Hiroaki. 2024. Ggsflabel: Labels for ’Sf’ with\n’Ggplot2’. https://github.com/yutannihilation/ggsflabel.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "a.html",
    "href": "a.html",
    "title": "1  A",
    "section": "",
    "text": "1.1 geom_area\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate an area plot. This cover the space between x-axis and line that connects the data points.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth\nSee also\ngeom_line, geom_ribbon\nExample\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x = Year, y = Electricity)) +\n  geom_area(alpha = 0.5) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +\n  scale_x_continuous(breaks = 2013:2021) +\n  labs(title = \"a1: geom_area only\")\n\na2 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x = Year, y = Electricity)) +\n  geom_area(alpha = 0.5) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +\n  scale_x_continuous(breaks = 2013:2021) +\n  geom_point(col = \"red\") +\n  labs(title = \"a2: geom_area \\n and geom_point\")\na1 | a2",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>A</span>"
    ]
  },
  {
    "objectID": "a.html#abline",
    "href": "a.html#abline",
    "title": "1  A",
    "section": "1.2 geom_abline",
    "text": "1.2 geom_abline\nPackage\nggplot2 (Wickham 2016)\nDescription\nDescription Draw a straight line (\\(Y=mX+c\\)) for a given slope (\\(m\\)) and intercept (\\(c\\)).\nUnderstandable aesthetics\nUnlike most other geoms, geom_abline does not depend on the x and y variables that we map for the main plot. geom_abline has its own independent characteristics: intercept and slope.\nSee also\ngeom_point, geom_vline, geom_hline\nExample\n\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x = Electricity)) +\n  geom_abline(intercept = 0, slope = 1) +\n  labs(title = \"a1: geom_abline only\") +\n  theme(aspect.ratio = 1)\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x = Electricity)) +\n  geom_abline(intercept = 0, slope = 1) +\n  geom_point() +\n  labs(title = \"a2: geom_abline \\n and geom_point\") +\n  theme(aspect.ratio = 1)\na1 | a2",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>A</span>"
    ]
  },
  {
    "objectID": "a.html#alluvium",
    "href": "a.html#alluvium",
    "title": "1  A",
    "section": "1.3 geom_alluvium",
    "text": "1.3 geom_alluvium\nPackage\nggalluvial(Brunson and Read 2019; Brunson 2020)\nDescription\nCreate alluvial plot. An alluvial plot is a type of diagram that is particularly useful for visualizing categorical data and the flow or transition between different categorical variables over multiple stages or categories\nUnderstandable aesthetics\nrequired aesthetics\nx, y, ymin, ymax,\noptional aesthetics\nalpha, colour, fill, linetype, size, group (group is used internally; arguments are ignored)\nSee also\ngeom_stratum, geom_flow, geom_lode\nExample\n\nlibrary(ggalluvial)\nfreq.table &lt;- worldbankdata |&gt;\n  select(Country, Region, Year, Income) |&gt;\n  filter(Year &gt; 2015) |&gt;\n  group_by(Region, Year, Income) |&gt;\n  summarise(n = n()) |&gt;\n  drop_na()\nfreq.table\n\n# A tibble: 153 × 4\n# Groups:   Region, Year [49]\n   Region               Year Income     n\n   &lt;fct&gt;               &lt;dbl&gt; &lt;fct&gt;  &lt;int&gt;\n 1 East Asia & Pacific  2016 LM        13\n 2 East Asia & Pacific  2016 UM        10\n 3 East Asia & Pacific  2016 H         14\n 4 East Asia & Pacific  2017 LM        13\n 5 East Asia & Pacific  2017 UM        10\n 6 East Asia & Pacific  2017 H         14\n 7 East Asia & Pacific  2018 LM        13\n 8 East Asia & Pacific  2018 UM        10\n 9 East Asia & Pacific  2018 H         14\n10 East Asia & Pacific  2019 LM        12\n# ℹ 143 more rows\n\na1 &lt;- freq.table |&gt;\n  ggplot(aes(y = n, axis1 = Region, axis2 = Year)) +\n  geom_alluvium(aes(fill = Income), width = 1 / 12) +\n  labs(title = \"a1: geom_alluvium only\")\n\na2 &lt;- freq.table |&gt;\n  ggplot(aes(y = n, axis1 = Region, axis2 = Year)) +\n  geom_alluvium(aes(fill = Income), width = 1 / 12) +\n  geom_stratum(width = 1 / 12, fill = \"black\", color = \"grey\") +\n  geom_label(stat = \"stratum\", aes(label = after_stat(stratum))) +\n  labs(title = \"a2: geom_alluvium, \\n geom_stratum and geom_label\")\na1 / a2",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>A</span>"
    ]
  },
  {
    "objectID": "a.html#geom_arc",
    "href": "a.html#geom_arc",
    "title": "1  A",
    "section": "1.4 geom_arc",
    "text": "1.4 geom_arc\nPackage\nggforce(Pedersen 2022)\nDescription\nDraw a circle or a segment of a circle.\nUnderstandable aesthetic\nrequired aesthetics\nx0 - starting coordinate of x-axis , y0 - starting coordinate of x-axis, r - radius, start, end\noptional aesthetics\ncolor, linewidth, linetype, alpha, lineend\nThe statistical transformation to use on the data for this layer\nstat_arc\nSee also\ngeom_arc2, geom_arc_bar\nExample\n\nlibrary(ggforce)\nggplot() +\n  geom_arc(aes(x0 = 0, y0 = 0, r = 8, start = 1, end = 8)) +\n  geom_arc(aes(x0 = 0, y0 = 0, r = 8, start = 1, end = 5), col = \"red\", size = 2) +\n  theme(aspect.ratio = 1)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>A</span>"
    ]
  },
  {
    "objectID": "a.html#arcbar",
    "href": "a.html#arcbar",
    "title": "1  A",
    "section": "1.5 geom_arc_bar",
    "text": "1.5 geom_arc_bar\nPackage\nggforce(Pedersen 2022)\nDescription\nTo draw pie chart and donut chart defining centre point, a radius and a start and end angle.\nUnderstandable aesthetic\nrequired aesthetics\nx0 - starting coordinate of x-axis , y0 - starting coordinate of x-axis, r - radius, start, end\noptional aesthetics\ncolor, linewidth, linetype, alpha, lineend\nThe statistical transformation to use on the data for this layer\nstat_arc\nSee also\ngeom_arc, geom_arc_bar\nExample\n\ndf &lt;- data.frame(\n  state = c(\n    \"A\", \"B\", \"C\",\n    \"D\", \"E\"\n  ),\n  focus = c(0.2, 0, 0, 0, 0),\n  start = c(0, 1, 2, 3, 4),\n  end = c(1, 2, 3, 4, 2 * pi),\n  amount = c(4, 3, 1, 2, 5),\n  stringsAsFactors = FALSE\n)\nggplot(df) +\n  geom_arc_bar(aes(\n    x0 = 0, y0 = 0, r0 = 0, r = 1, amount = amount,\n    fill = state, explode = focus\n  ), stat = \"pie\") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  theme(aspect.ratio = 1)\n\n\n\n\n\n\n\n\n##geom_arrow{#arrow}\nPackage\nmetR (Campitelli 2021)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\narrow,type, arrow.angle, arrow.length, arrow.ends, arrow.type\nSee also\ngeom_line, geom_ribbon\n\n1.5.1 Example\n\nlibrary(metR)\n\n\nAttaching package: 'metR'\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\ndata &lt;- tibble(\n  x = c(10, 20, 30, 40, 50),           # Longitude or X-coordinates\n  y = c(1, 2, 3, 4, 5),           # Latitude or Y-coordinates\n  dx = c(1, 0, -1, 0, 1),         # Wind direction components (change in X)\n  dy = c(1, -1, 0, 1, 0)          # Wind direction components (change in Y)\n)\n\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"#1b9e77\", size = 3) +  \n  geom_arrow(aes(dx = dx, dy = dy), color = \"#d95f02\", size = 1, arrow.type = \"closed\") +\n  labs(title = \"Wind Directions at Different Locations\", x = \"Longitude\", y = \"Latitude\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>A</span>"
    ]
  },
  {
    "objectID": "a.html#ash",
    "href": "a.html#ash",
    "title": "1  A",
    "section": "1.6 geom_ash",
    "text": "1.6 geom_ash\nPackage\nggformula (Kaplan and Pruim 2023)\nDescription\nPlotted Average Shifted Histogram (ASH)\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\ncolor, fill, bins, alpha, size\nSee also\ngeom_histogram, geom_density\nExample\n\nlibrary(ggformula)\np1 &lt;- worldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\n  ggplot(aes(x = Electricity)) +\n   geom_ash(bins = 20, color = \"#d95f02\") + labs(\"Average Shifted Histogram\")\np2 &lt;- worldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\n  ggplot(aes(x = Electricity)) +\n  geom_histogram(aes(y = stat(density)), color = \"black\", fill = \"gray\") +\n   geom_ash(bins = 20, color = \"#d95f02\") + labs(\"Histogram and Average Shifted Histogram\")\np1|p2\n\n\n\n\n\n\n\n\n\n\n\n\nBrunson, Jason Cory. 2020. “Ggalluvial: Layered Grammar for Alluvial Plots.” Journal of Open Source Software 5 (49).\n\n\nBrunson, Jason Cory, and Quentin D Read. 2019. “Package ‘Ggalluvial’.”\n\n\nCampitelli, Elio. 2021. metR: Tools for Easier Analysis of Meteorological Fields. https://doi.org/10.5281/zenodo.2593516.\n\n\nKaplan, Daniel, and Randall Pruim. 2023. Ggformula: Formula Interface to the Grammar of Graphics. https://CRAN.R-project.org/package=ggformula.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>A</span>"
    ]
  }
]