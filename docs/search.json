[
  {
    "objectID": "b.html#bar",
    "href": "b.html#bar",
    "title": "4  geom_b",
    "section": "4.1 geom_bar",
    "text": "4.1 geom_bar\n\n4.1.1 Package\nggplot2 (Wickham 2016)\n\n\n4.1.2 Description\nDraw a bar proportional to the specified number. For example, number of cases or user defined number.\n\n\n4.1.3 Understandable aesthetics\nrequired aesthetics\nx, y,\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth\n\n\n4.1.4 The statistical transformation to use on the data for this layer\nstat_count - This the default statistics layer. It counts number of cases in each group.\nstat_identify - It plots the data as it is.\n\n\n4.1.5 See also\ngeom_col\n\n4.1.5.1 With count\n\nworldbankdata |&gt;\n  dplyr::select(c(\"Year\", \"Income\")) |&gt;\n  dplyr::filter(Year==2021) |&gt;\n  ggplot(aes(x = Income)) + \n  geom_bar()\n\n\n\n\nIllustration of geom_bar to create a bar chart\n\n\n\n\n\nworldbankdata |&gt;\n  dplyr::select(c(\"Year\", \"Income\", \"Region\")) |&gt;\n  dplyr::filter(Year==2021) |&gt;\n  ggplot(aes(x = Income, fill=Region)) + \n  geom_bar()\n\n\n\n\nIllustration of geom_bar to create a stacked bar chart\n\n\n\n\n\nworldbankdata |&gt;\n  dplyr::select(c(\"Year\", \"Income\", \"Region\")) |&gt;\n  dplyr::filter(Year==2021) |&gt;\n  ggplot(aes(x = Income, fill=Region)) + \n  geom_bar(position = \"dodge\")\n\n\n\n\nIllustration of geom_bar to create a cluster bar chart\n\n\n\n\n\n\n4.1.5.2 With identity\n\ndfbar &lt;- data.frame(class=c(\"A\", \"B\"),  income = c(100, 200))\nggplot(dfbar, aes(class, income)) +\n  geom_bar(stat=\"identity\")"
  },
  {
    "objectID": "b.html#bin2d",
    "href": "b.html#bin2d",
    "title": "4  geom_b",
    "section": "4.5 geom_bin2d",
    "text": "4.5 geom_bin2d\n\n4.5.1 Package\nggplot2 (R-ggplot2?)\n\n\n4.5.2 Description\nDivides the Cartesian plane created by x-variable and y-variable into rectangles, counts the number of observations in each rectangle. Only the observations with rectangles are filled according to the number of observations.\n\n\n4.5.3 Understandable aesthetics\nx, y, fill, group\n\n\n4.5.4 The statistical transformation to use on the data for this layer\nstat_bin_2d\n\n\n4.5.5 See also\ngeom_bin_2d, geom_point\n\n\n4.5.6 Example\n\nggplot(worldbankdata, aes(y = Cooking, x=Electricity)) +\n  geom_bin2d() + \n  theme(aspect.ratio = 1) +\n  scale_fill_viridis()\n\n\n\n\nIllustration of using geom_bin_2d"
  },
  {
    "objectID": "b.html#bin2dpattern",
    "href": "b.html#bin2dpattern",
    "title": "4  geom_b",
    "section": "4.4 geom_bin2d_pattern",
    "text": "4.4 geom_bin2d_pattern\n\n4.4.1 Package\nggpattern(FC, Davis, and ggplot2 authors 2023)\n\n\n4.4.2 Description\nDivides the Cartesian plane created by x-variable and y-variable into rectangles (2D-Histogram), counts the number of observations in each rectangle. Only the observations with rectangles are filled with a pattern.\n\n\n4.4.3 Understandable aesthetics\npattern_fill (pattern_* - for mapping variables under aesthetics), pattern (to set a patten, for example pattern=‘stripe’), fill, colour\n\n\n4.4.4 The statistical transformation to use on the data for this layer\n\n\n4.4.5 See also\ngeom_bin2d, geom_point\n\nggplot(worldbankdata, aes(y = Cooking, x=Electricity)) +\n  ggpattern::geom_bin2d_pattern(bins=20) + \n  scale_fill_viridis() +\n  theme(aspect.ratio = 1)\n\n\n\n\nIllustration of using geom_bin_2d"
  },
  {
    "objectID": "b.html#blank",
    "href": "b.html#blank",
    "title": "4  geom_b",
    "section": "4.6 geom_blank",
    "text": "4.6 geom_blank\n\n4.6.1 Package\nggplot2 (R-ggplot2?)\n\n\n4.6.2 Description\nDraws nothing."
  },
  {
    "objectID": "b.html#boxplot",
    "href": "b.html#boxplot",
    "title": "4  geom_b",
    "section": "4.7 geom_boxplot",
    "text": "4.7 geom_boxplot\n\n4.7.1 Package\nggplot2 (R-ggplot2?)\n\n\n4.7.2 Description\nDraw a bar proportional to the specified number. For example, number of cases or user defined number.\n\n\n4.7.3 The statistical transformation to use on the data for this layer\nstat_boxplot - This the default statistics layer. This computes minimum, maximum, median, first quartile (\\(Q1\\)), third quartile (\\(Q3\\)), upper whisker extends up to \\(Q3 + 1.5 \\times IQR\\) and lower whisker extends up to \\(Q1 - 1.5 \\times IQR\\), where \\(IQR = Q3 - Q1\\). In a notched box plot, it creates 95% confidence interval for mean.\n\n\n4.7.4 See also\ngeom_col\n\n\n4.7.5 Example\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  dplyr::select(Cooking) |&gt;\nggplot(aes(y = Cooking, x=factor(0))) + \n  geom_boxplot() + \n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\n\n\n\nIllustration of using geom_boxplot\n\n\n\n\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  dplyr::select(Cooking) |&gt;\nggplot(aes(y = Cooking, x=factor(0))) +  \ngeom_boxplot(outlier.colour=\"black\", outlier.shape=16,\n             outlier.size=2, notch=TRUE) + \n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\n\n\n\nIllustration of using geom_boxplot with changing outliers and adding a notch to create notched box plot."
  },
  {
    "objectID": "partc.html",
    "href": "partc.html",
    "title": "C",
    "section": "",
    "text": "In this part of the book we will look at the geoms starts with letter “c” or “C”.\n\n\n\n\n\ngeom\nsection\n\n\n\n\ngeom_col\n5.1\n\n\ngeom_col_pattern\n5.2\n\n\ngeom_circle\n5.3"
  },
  {
    "objectID": "c.html#geom_col",
    "href": "c.html#geom_col",
    "title": "5  geom_c",
    "section": "5.1 geom_col",
    "text": "5.1 geom_col\n\n5.1.1 Package\nggplot2 (Wickham 2016)\n\n\n5.1.2 Description\nCreate bar charts\n\n\n5.1.3 Understandable aesthetics\n\n\n5.1.4 The statistical transformation to use on the data for this layer\nBefore using geom_col, you need to create a summary table of counts/proportions or you can apply geom_col for a summary table.\nafter_stat(count)\nafter_stat(prop)\n\n\n5.1.5 See also\ngeom_bar\n\n\n5.1.6 Example\n\nworldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  group_by(Income) |&gt;\n  summarise(n = n()) |&gt;\n  ggplot(aes(x = Income, y = n)) +   geom_col()"
  },
  {
    "objectID": "c.html#col_pattern",
    "href": "c.html#col_pattern",
    "title": "5  geom_c",
    "section": "5.2 geom_col_pattern",
    "text": "5.2 geom_col_pattern\n\n5.2.1 Package\nggpattern (FC, Davis, and ggplot2 authors 2023)\n\n\n5.2.2 Description\nFill columns with a pattern. User can map a variable for pattern or set a pattern.\n\n\n5.2.3 Understandable aesthetics\nx, y, pattern, fill, colour\n\n\n5.2.4 The statistical transformation to use on the data for this layer\nNone\n\n\n5.2.5 See also\ngeom_line, geom_ribbon\n\nworldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  group_by(Income) |&gt;\n  summarise(n = n()) |&gt;\n  ggplot(aes(x = Income, y = n)) +   ggpattern::geom_col_pattern( pattern = 'stripe',\n    fill    = 'white',\n    colour  = 'black')\n\n\n\n\nIllustration of geom_col_pattern"
  },
  {
    "objectID": "c.html#count",
    "href": "c.html#count",
    "title": "5  geom_c",
    "section": "5.3 geom_count",
    "text": "5.3 geom_count\n\n5.3.1 Package\nggplo2t (Wickham 2016)\n\n\n5.3.2 Description\nCounts the observations at every point on the plot, and then maps the count with the size of the point.\n\n\n5.3.3 Understandable aesthetics\nx, y, pattern, fill, colour\n\n\n5.3.4 The statistical transformation to use on the data for this layer\nNone\n\n\n5.3.5 See also\ngeom_point\n\n\n5.3.6 Example\nHere, both geom_point and geom_count are plotted to see the difference.\n\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_point(alpha = 0.5) + \n  labs(title = \"a1: geom_point\") +\n  theme(aspect.ratio = 1)\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_count() + \n  labs(title = \"a2: geom_count\") +\n  theme(aspect.ratio = 1)\na1 | a2"
  },
  {
    "objectID": "c.html#circle",
    "href": "c.html#circle",
    "title": "5  geom_c",
    "section": "5.4 geom_circle",
    "text": "5.4 geom_circle\n\n5.4.1 Package\nggforce (Pedersen 2022)\n\n\n5.4.2 Description\n\n\n5.4.3 Understandable aesthetics\nrequired aesthetics\nx0 - starting coordinate of x-axis , y0 - starting coordinate of x-axis, r - radius\noptional aesthetics\ncolor, fill, linewidth, linetype, alpha, lineend\n\n\n5.4.4 The statistical transformation to use on the data for this layer\nstat_align\n\n\n5.4.5 See also\ngeom_mark_circle, ### Example\n\nworldbankdata |&gt;\n  filter(Year == 2021) |&gt;\nggplot(aes(y = Cooking, x=Electricity, col=Income)) + \n  geom_point() + \n  ggforce::geom_circle(aes(x0 = 26, y0 = 5, r = 20),\n              inherit.aes = FALSE) + \n  theme(aspect.ratio = 1)"
  },
  {
    "objectID": "c.html#contour",
    "href": "c.html#contour",
    "title": "5  geom_c",
    "section": "5.5 geom_contour",
    "text": "5.5 geom_contour\n\n5.5.1 Package\nggplot2 (Wickham 2016)\n\n\n5.5.2 Description\nCreate contour plots\n\n\n5.5.3 Understandable aesthetics\nx, y, alpha, colour, linetype, linewidth, group, weight\n\n\n5.5.4 The statistical transformation to use on the data for this layer\nstat_contour\n\n\n5.5.5 See also\ngeom_contour_filled, geom_tile, geom_density_2d\n\n\n5.5.6 Example"
  },
  {
    "objectID": "c.html#contour_filled",
    "href": "c.html#contour_filled",
    "title": "5  geom_c",
    "section": "5.6 geom_contour_filled",
    "text": "5.6 geom_contour_filled\n\n5.6.1 Package\nggplot2 (Wickham 2016)\n\n\n5.6.2 Description\nCreate contour plots\n\n\n5.6.3 Understandable aesthetics\nx, y, alpha, colour, linetype, linewidth, group, weight\n\n\n5.6.4 The statistical transformation to use on the data for this layer\nstat_contour\n\n\n5.6.5 See also\ngeom_contour, geom_tile, geom_density_2d\n\n\n5.6.6 Example"
  },
  {
    "objectID": "c.html#curve",
    "href": "c.html#curve",
    "title": "5  geom_c",
    "section": "5.7 geom_curve",
    "text": "5.7 geom_curve\n\n5.7.1 Package\nggplot2 (Wickham 2016)\n\n\n5.7.2 Description\ngeom_segment() draws a straight line between between two points. geom_curve draws a curved line.\n\n\n5.7.3 Understandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nalpha, colour, linetype, linewidth, group\n\n\n5.7.4 The statistical transformation to use on the data for this layer\nidentity\n\n\n5.7.5 See also\ngeom_segment\n\n\n5.7.6 Examples\n\ndf &lt;- data.frame(x1 = 0, x2 = 100, y1 = 0, y2 = 100)\nggplot(df) + \n  geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2))\n\n\n\n\n\ndf &lt;- data.frame(x2 = c( 3, 4, 4, 3, -3, -4, -4, -3),\n                 y2 = c( 4, 3, -3, -4, -4, -3, 3, 3),\n                 x1 = rep(0, 8),\n                 y1 = rep(0, 8))\n\nggplot(df) + \n  geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2),\n             curvature = 0.75, angle = -45,\n             arrow = arrow(length = unit(0.25,\"cm\"))) + \n  coord_equal() +\n  xlim(-5, 5) + ylim(-5, 5)"
  },
  {
    "objectID": "c.html#crossbar",
    "href": "c.html#crossbar",
    "title": "5  geom_c",
    "section": "5.8 geom_crossbar",
    "text": "5.8 geom_crossbar\n\n5.8.1 Package\nggplot2 (Wickham 2016)\n\n\n5.8.2 Description\nPlot a vertical interval defined by x, ymin and ymax.\n\n\n5.8.3 Understandable aesthetics\nrequired aesthetics\nx or y\nxmin or ymin\nxmax or ymax\noptional aesthetics\nalpha, colour, linetype, linewidth, group\n\n\n5.8.4 The statistical transformation to use on the data for this layer\nidentity\n\n\n5.8.5 See also\ngeom_segment\n\n\n5.8.6 Examples\n\nsummary.wb &lt;- aggregate(. ~ Income, mean, data=worldbankdata)\nggplot(worldbankdata, aes(x = Income, y = Electricity)) + \n  geom_point() + \n  geom_crossbar(data=summary.wb, aes(ymin = Electricity, ymax = Electricity),\n                  size=1,col=\"red\", width = .5)\n\n\n\n\n\n\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern: ’Ggplot2’ Pattern Geoms.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "d.html#density",
    "href": "d.html#density",
    "title": "6  geom_d",
    "section": "6.1 geom_density",
    "text": "6.1 geom_density\n\n6.1.1 Package\nggplot2 (Wickham 2016)\n\n\n6.1.2 Description\nComputes and draws kernel density estimation.\n\n\n6.1.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth, weight\n\n\n6.1.4 The statistical transformation to use on the data for this layer\nstat_density\n\n\n6.1.5 See also\ngeom_histogram\n\n\n6.1.6 Example\n\nworldbankdata |&gt;\n  ggplot(aes(x = Electricity)) +   geom_density()"
  },
  {
    "objectID": "d.html#density_line",
    "href": "d.html#density_line",
    "title": "6  geom_d",
    "section": "6.2 geom_density_line",
    "text": "6.2 geom_density_line\n\n6.2.1 Package\nggridges (Wilke 2023)\n\n\n6.2.2 Description\nDraws a density plot same as geom_density. The difference is that the geom draws a ridgeline (line with filled area underneath).\n\n\n6.2.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth, weight\n\n\n6.2.4 The statistical transformation to use on the data for this layer\nstat_density\n\n\n6.2.5 See also\ngeom_density\n\n\n6.2.6 Example\n\nlibrary(ggridges)\nworldbankdata |&gt;\n  ggplot(aes(x = Electricity)) +   \n  geom_density_line()"
  },
  {
    "objectID": "d.html#density_2d",
    "href": "d.html#density_2d",
    "title": "6  geom_d",
    "section": "6.3 geom_density_2d",
    "text": "6.3 geom_density_2d\n\n6.3.1 Package\nggplot2 (Wickham 2016)\n\n\n6.3.2 Description\nComputes a 2D kernel density estimation using MASS::kde2d() and display the results with contours.\n\n\n6.3.3 Understandable aesthetics\nstat_density\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n6.3.4 The statistical transformation to use on the data for this layer\nstat_density\n\n\n6.3.5 See also\ngeom_histofram\n\n\n6.3.6 Example\n\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_density_2d() +\n  xlim(0, 100) +\n  ylim(0, 100) +\n  theme(aspect.ratio = 1) + \n  labs(title = \"a1: geom_density_2d only\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_point() +\n  geom_density_2d() +\n  theme(aspect.ratio = 1) + \n  labs(title = \"a2: geom_point and \\n geom_density_2d\") \n  \na1|a2"
  },
  {
    "objectID": "d.html#density_2d_filled",
    "href": "d.html#density_2d_filled",
    "title": "6  geom_d",
    "section": "6.4 geom_density_2d_filled",
    "text": "6.4 geom_density_2d_filled\n\n6.4.1 Package\nggplot2 (Wickham 2016)\n\n\n6.4.2 Description\nComputes a 2D kernel density estimation using MASS::kde2d() and display the results with filled contour bands.\n\n\n6.4.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth, subgroup\n\n\n6.4.4 The statistical transformation to use on the data for this layer\nstat_density\n\n\n6.4.5 See also\ngeom_histogram\n\n\n6.4.6 Example\n\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_density_2d_filled() + \n  labs(title = \"a1: geom_density_2d_filled only\") + \n  theme(legend.position=\"none\", aspect.ratio = 1)\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_point() + \n  geom_density_2d_filled(alpha = 0.5) + \n  labs(title = \"a2: geom_point and \\n geom_density_2d_filled\") + \n  theme(legend.position=\"none\", aspect.ratio = 1)\na1 | a2"
  },
  {
    "objectID": "d.html#density_ridges",
    "href": "d.html#density_ridges",
    "title": "6  geom_d",
    "section": "6.5 geom_density_ridges",
    "text": "6.5 geom_density_ridges\n\n6.5.1 Package\nggridges (Wilke 2023)\n\n\n6.5.2 Description\nArranges multiple density plots in a staggered fashion.\n\n\n6.5.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\ncolour, fill, group, height, alpha, linetype, linewidth, scale, rel_min_height\n\n\n6.5.4 The statistical transformation to use on the data for this layer\ndensity_ridges\n\n\n6.5.5 See also\ngeom_density_ridges_gradient\n\n\n6.5.6 Example\n\nlibrary(ggridges)\n worldbankdata |&gt;\n  ggplot(aes(y = Income, x=Electricity)) +   \n  geom_density_ridges()"
  },
  {
    "objectID": "d.html#density_ridges_gradient",
    "href": "d.html#density_ridges_gradient",
    "title": "6  geom_d",
    "section": "6.6 geom_density_ridges_gradient",
    "text": "6.6 geom_density_ridges_gradient\n\n6.6.1 Package\nggridges (Wilke 2023)\n\n\n6.6.2 Description\nArranges multiple density plots in a staggered fashion.\n\n\n6.6.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\ncolour, fill, group, height, alpha, linetype, linewidth, scale, rel_min_height\n\n\n6.6.4 The statistical transformation to use on the data for this layer\ndensity_ridges\n\n\n6.6.5 See also\ngeom_density_ridges\n\n\n6.6.6 Example\n\nlibrary(ggridges)\n worldbankdata |&gt;\n  ggplot(aes(y = Income, x=Electricity, fill=stat(x))) +   \n  geom_density_ridges_gradient() +\n  scale_fill_viridis_c()"
  },
  {
    "objectID": "d.html#dl",
    "href": "d.html#dl",
    "title": "6  geom_d",
    "section": "6.7 geom_dl",
    "text": "6.7 geom_dl\n\n6.7.1 Package\ndirectlabels (Hocking 2023)\n\n\n6.7.2 Description\nDisplay direct labels on the plot.\n\n\n6.7.3 Understandable aesthetics\nlayer\n\n\n6.7.4 The statistical transformation to use on the data for this layer\nstat_identity\n\n\n6.7.5 See also\ngeom_text\n\n\n6.7.6 Example\n\nlibrary(directlabels)\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_point(aes(col=Income)) +\n  theme(aspect.ratio = 1) +\n  scale_color_brewer(palette = \"Set1\")\na1 +\n  geom_dl(aes(label=Income), method=\"smart.grid\")+\n  scale_shape_manual(values=c(H = 1, \n                              UM = 6,\n                              L = 3,\n                              LM = 2),\n                     guide=\"none\")"
  },
  {
    "objectID": "d.html#dotplot",
    "href": "d.html#dotplot",
    "title": "6  geom_d",
    "section": "6.8 geom_dotplot",
    "text": "6.8 geom_dotplot\n\n6.8.1 Package\nggplot2 (Wickham 2016)\n\n\n6.8.2 Description\nCreate dotplot.\n\n\n6.8.3 Understandable aesthetics\nstat_density\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, fill , group, linetype, stroke\n\n\n6.8.4 The statistical transformation to use on the data for this layer\nstat_identity\n\n\n6.8.5 See also\ngeom_histogram\n\n\n6.8.6 Example\n\nworldbankdata |&gt;\n  ggplot(aes(x=Cooking)) +   \n  geom_dotplot(binwidth = 1) + \n  theme(legend.position=\"none\", aspect.ratio = 1)"
  },
  {
    "objectID": "d.html#delaunay_tile",
    "href": "d.html#delaunay_tile",
    "title": "6  geom_d",
    "section": "6.9 geom_delaunay_tile",
    "text": "6.9 geom_delaunay_tile\n\n6.9.1 Package\nggplot2 (Pedersen 2022)\n\n\n6.9.2 Description\nDisplay voronoi tesselation and delaunay triangulation.\n\n\n6.9.3 Understandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, fill , linetype, size\n\n\n6.9.4 The statistical transformation to use on the data for this layer\ndelaunay_tile\n\n\n6.9.5 See also\ngeom_delaunay_segment\n\n\n6.9.6 Example\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_delaunay_tile(alpha=0.5) + \n  labs(title = \"a1: geom_delaunay_tile only\") +\n  theme(aspect.ratio = 1)\n\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_delaunay_tile(alpha=0.5) + \n  labs(title = \"a2: geom_point and \\n geom_delaunay_tile\") +\n  theme(aspect.ratio = 1)\na1 | a2"
  },
  {
    "objectID": "d.html#delaunay_segment",
    "href": "d.html#delaunay_segment",
    "title": "6  geom_d",
    "section": "6.10 geom_delaunay_segment",
    "text": "6.10 geom_delaunay_segment\n\n6.10.1 Package\nggplot2 (Pedersen 2022)\n\n\n6.10.2 Description\nDisplay voronoi tesselation and delaunay triangulation.\n\n\n6.10.3 Understandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, fill , linetype, size\n\n\n6.10.4 The statistical transformation to use on the data for this layer\ndelaunay_segment\n\n\n6.10.5 See also\ngeom_delaunay_tile\n\n\n6.10.6 Example\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\n\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_delaunay_segment() + \n  theme(aspect.ratio = 1) +\n  labs(title = \"a1: geom_delaunay_segment only\") \n\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_delaunay_segment() + \n  theme(aspect.ratio = 1) +\n  labs(title = \"a2: geom_point and \\n geom_delaunay_segment\") \n\na1 | a2"
  },
  {
    "objectID": "d.html#delaunay_segment2",
    "href": "d.html#delaunay_segment2",
    "title": "6  geom_d",
    "section": "6.11 geom_delaunay_segment2",
    "text": "6.11 geom_delaunay_segment2\n\n6.11.1 Package\nggplot2 (Pedersen 2022)\n\n\n6.11.2 Description\nDisplay voronoi tesselation and delaunay triangulation.\n\n\n6.11.3 Understandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, fill , linetype, size\n\n\n6.11.4 The statistical transformation to use on the data for this layer\ndelaunay_segment2\n\n\n6.11.5 See also\ngeom_delaunay_tile\n\n\n6.11.6 Example\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\n\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_delaunay_segment2() + \n  theme(aspect.ratio = 1) +\n  labs(title = \"a1: geom_delaunay_segment2 only\") \n\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_delaunay_segment2() + \n  theme(aspect.ratio = 1) +\n  labs(title = \"a2: geom_point and \\n geom_delaunay_segment2\") \n\na1 | a2"
  },
  {
    "objectID": "d.html#geom_dumbbell",
    "href": "d.html#geom_dumbbell",
    "title": "6  geom_d",
    "section": "6.12 geom_dumbbell",
    "text": "6.12 geom_dumbbell\n\n6.12.1 Package\nggalt(Rudis, Bolker, and Schulz 2017)\n\n\n6.12.2 Description\nCreate dumbbell charts.\n\n\n6.12.3 Understandable aesthetics\nrequired aesthetics\nx, y, xend, yend\noptional aesthetics\nalpha, colour, group, linetype, size\n\n\n6.12.4 The statistical transformation to use on the data for this layer\n\n\n6.12.5 See also\ngeom_segment\n\n\n6.12.6 Example\n\nlibrary(ggalt)\ndf &lt;- worldbankdata |&gt;\n  group_by(Income) |&gt;\n  summarise(min = min(Electricity, na.rm=TRUE), max = max(Electricity, na.rm=TRUE))\ndf\n\n# A tibble: 5 × 3\n  Income   min   max\n  &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 L       2.11  99.8\n2 LM      3.81 100  \n3 UM     26.5  100  \n4 H      65.9  100  \n5 &lt;NA&gt;   17.8  100  \n\nggplot(df, aes(y=Income, x=min, xend=max)) +\n  xlab(\"Electricity Range\") + \n  geom_dumbbell(color = \"darkgray\",  # Color of the line between min and max\n                size = 3,            # Line width\n                dot_guide = FALSE,   # Whether to add a guide from origin to X or not\n                size_x = 3,          # Size of the X point\n                size_xend = 3,       # Size of the X end point\n                colour_x = \"#762a83\",    # Color of the X point\n                colour_xend = \"#1b7837\")   # Color of the X end point \n\n\n\n\n\n\n\n\nHocking, Toby Dylan. 2023. Directlabels: Direct Labels for Multicolor Plots. https://CRAN.R-project.org/package=directlabels.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nRudis, Bob, Ben Bolker, and Jan Schulz. 2017. Ggalt: Extra Coordinate Systems, ’Geoms’, Statistical Transformations, Scales and Fonts for ’Ggplot2’. https://CRAN.R-project.org/package=ggalt.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nWilke, Claus O. 2023. Ggridges: Ridgeline Plots in ’Ggplot2’. https://CRAN.R-project.org/package=ggridges."
  },
  {
    "objectID": "e.html#errorbar",
    "href": "e.html#errorbar",
    "title": "7  geom_e",
    "section": "7.1 geom_errorbar",
    "text": "7.1 geom_errorbar\n\n7.1.1 Package\nggplot2 (Wickham 2016)\n\n\n7.1.2 Description\nDraws a vertical interval defined by x, ymin and ymax.\n\n\n7.1.3 Understandable aesthetics\nrequired aesthetics\nx or y\nymin or xmin (y/x coordinate of the lower whisker)\nymax or xmax (y/x coordinate of the upper whisker)\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n7.1.4 The statistical transformation to use on the data for this layer\nstat_identity\n\n\n7.1.5 See also\ngeom_crossbar, geom_dumbbell\n\n\n7.1.6 Example\n\ndf &lt;- worldbankdata |&gt;\n  group_by(Income) |&gt;\n  summarise(min = min(Electricity, na.rm=TRUE), max = max(Electricity, na.rm=TRUE), mean = mean(Electricity, na.rm=TRUE))\ndf\n\n# A tibble: 5 × 4\n  Income   min   max  mean\n  &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 L       2.11  99.8  37.0\n2 LM      3.81 100    78.8\n3 UM     26.5  100    95.1\n4 H      65.9  100    99.9\n5 &lt;NA&gt;   17.8  100    89.7\n\na1 &lt;- ggplot(data=df, aes(x=Income, ymin=min, ymax=max)) + \ngeom_errorbar(width=0.2, size=1, color=\"#d95f02\") + \n  labs(title = \"a1: geom_errorbar only\")\n\na2 &lt;- ggplot(data=df, aes(x=Income, ymin=min, ymax=max)) + \n  geom_errorbar(width=0.2, size=1, color=\"#d95f02\") + \n  geom_point(data=df, mapping=aes(x=Income, y=mean), size=4, shape=21, fill=\"#1b9e77\") +\n  labs(title = \"a2: geom_errorbar and geom_point\")\na1|a2"
  },
  {
    "objectID": "e.html#geom_errorbarh",
    "href": "e.html#geom_errorbarh",
    "title": "7  geom_e",
    "section": "7.2 geom_errorbarh",
    "text": "7.2 geom_errorbarh\n\n7.2.1 Package\nggplot2 (Wickham 2016)\n\n\n7.2.2 Description\nDraws horizontal error bars, defined by an upper and lower value.\n\n\n7.2.3 Understandable aesthetics\nrequired aesthetics\nx or y\nymin or xmin (y/x coordinate of the lower whisker)\nymax or xmax (y/x coordinate of the upper whisker)\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n7.2.4 The statistical transformation to use on the data for this layer\nstat_identity\n\n\n7.2.5 See also\ngeom_crossbar, geom_dumbbell\n\n\n7.2.6 Example\n\ndf &lt;- worldbankdata |&gt;\n  group_by(Income) |&gt;\n  summarise(min = min(Electricity, na.rm=TRUE), max = max(Electricity, na.rm=TRUE), mean = mean(Electricity, na.rm=TRUE))\ndf\n\n# A tibble: 5 × 4\n  Income   min   max  mean\n  &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 L       2.11  99.8  37.0\n2 LM      3.81 100    78.8\n3 UM     26.5  100    95.1\n4 H      65.9  100    99.9\n5 &lt;NA&gt;   17.8  100    89.7\n\na1 &lt;- ggplot(data=df, aes(y=Income, x=max, xmin=min, xmax=max)) + \ngeom_errorbarh(width=0.2, size=1, color=\"#d95f02\") + \n  labs(title = \"a1: geom_errorbarh only\")\na2 &lt;- ggplot(data=df, aes(y=Income, x=max, xmin=min, xmax=max)) + \n  geom_errorbarh(width=0.2, size=1, color=\"#d95f02\") + \n  geom_point(data=df, mapping=aes(y=Income, x=mean), size=4, shape=21, fill=\"#1b9e77\") +\n  labs(title = \"a2: geom_errorbarh and geom_point\")\na1|a2"
  },
  {
    "objectID": "e.html#encircle",
    "href": "e.html#encircle",
    "title": "7  geom_e",
    "section": "7.3 geom_encircle",
    "text": "7.3 geom_encircle\n\n7.3.1 Package\nggalt (Rudis, Bolker, and Schulz 2017)\n\n\n7.3.2 Description\nDraws a polygon enclosing all the points.\n\n\n7.3.3 Understandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, group, linetype, linewidth, s_shape, expand\n\n\n7.3.4 The statistical transformation to use on the data for this layer\nstat_identity\n\n\n7.3.5 See also\ngeom_circle\n\n\n7.3.6 Example\n\nlibrary(ggalt)\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\nggplot(aes(y = Cooking, x=Electricity)) + \n  geom_point() + \n  geom_encircle() + \n  theme(aspect.ratio = 1) + \n  labs(title = \"a1: with default setting\")\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\nggplot(aes(y = Cooking, x=Electricity)) + \n  geom_point() + \n  geom_encircle(s_shape=0.2, expand=0.01,fill=\"Red\",alpha=0.4) + \n  theme(aspect.ratio = 1) + labs(title = \"a2: without default settings\")\na1|a2"
  },
  {
    "objectID": "e.html#geom_emoji",
    "href": "e.html#geom_emoji",
    "title": "7  geom_e",
    "section": "7.4 geom_emoji",
    "text": "7.4 geom_emoji\n\n7.4.1 Package\nemoGG (Miller 2023)\nInstallation\ninstall.packages(\"remotes\")\nremotes::install_github(\"dill/emoGG\")\n\n\n7.4.2 Description\nPlot emojis on the plot instead of points\n\n\n7.4.3 Understandable aesthetics\nemoji\n\n\n7.4.4 The statistical transformation to use on the data for this layer\nstat_identity\n\n\n7.4.5 See also\ngeom_point\n\n\n7.4.6 Example\n\nlibrary(emoGG)\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\nggplot(aes(y=Cooking, x=Electricity)) +\n  geom_emoji(emoji = \"1f600\") + \n   theme(aspect.ratio = 1) + labs(\"a1: using emoji\")\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\nggplot(aes(y=Cooking, x=Electricity)) +\n  geom_point() + \n   theme(aspect.ratio = 1) + labs(\"a2: using points\")\na1|a2\n\n\n\n\n\n\n\n\nMiller, David L. 2023. emoGG: Use Emoji in Ggplot2.\n\n\nRudis, Bob, Ben Bolker, and Jan Schulz. 2017. Ggalt: Extra Coordinate Systems, ’Geoms’, Statistical Transformations, Scales and Fonts for ’Ggplot2’. https://CRAN.R-project.org/package=ggalt.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "f.html#geom_abline",
    "href": "f.html#geom_abline",
    "title": "8  geom_a",
    "section": "8.1 geom_abline",
    "text": "8.1 geom_abline"
  },
  {
    "objectID": "g.html#geom_abline",
    "href": "g.html#geom_abline",
    "title": "9  geom_a",
    "section": "9.1 geom_abline",
    "text": "9.1 geom_abline"
  },
  {
    "objectID": "h.html#hline",
    "href": "h.html#hline",
    "title": "10  geom_h",
    "section": "10.9 geom_hline",
    "text": "10.9 geom_hline\n\n10.9.1 Package\nggplot2 (Wickham 2016)\n\n\n10.9.2 Description\nDraw a horizontal line given intercept.\n\n\n10.9.3 Understandable aesthetics\nUnlike most other geoms, geom_hline does not depend on the x and y variables that we map for the main plot.\n\n\n10.9.4 The statistical transformation to use on the data for this layer\nNone (geom_hline is independent from the data layer.)\n\n\n10.9.5 See also:\ngeom_point, geom_vline, geom_abline\n\n\n10.9.6 Example\n\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_hline(yintercept = 50) + \n  labs(title=\"a1: geom_abline only\") +\n  theme(aspect.ratio = 1)\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_hline(yintercept = 50) + \n  geom_point() + \n  labs(title = \"a2: geom_hline \\n and geom_point\") +\n  theme(aspect.ratio = 1)\na1 | a2\n\n\n\n\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nYu, Youzhi, and Trent Buskirk. 2023. ggDoubleHeat: A Heatmap-Like Visualization Tool. https://CRAN.R-project.org/package=ggDoubleHeat."
  },
  {
    "objectID": "i.html#geom_abline",
    "href": "i.html#geom_abline",
    "title": "11  geom_a",
    "section": "11.1 geom_abline",
    "text": "11.1 geom_abline"
  },
  {
    "objectID": "j.html#geom_abline",
    "href": "j.html#geom_abline",
    "title": "12  geom_a",
    "section": "12.1 geom_abline",
    "text": "12.1 geom_abline"
  },
  {
    "objectID": "k.html#geom_abline",
    "href": "k.html#geom_abline",
    "title": "13  geom_a",
    "section": "13.1 geom_abline",
    "text": "13.1 geom_abline"
  },
  {
    "objectID": "l.html#geom_abline",
    "href": "l.html#geom_abline",
    "title": "14  geom_a",
    "section": "14.1 geom_abline",
    "text": "14.1 geom_abline"
  },
  {
    "objectID": "m.html#geom_abline",
    "href": "m.html#geom_abline",
    "title": "15  geom_a",
    "section": "15.1 geom_abline",
    "text": "15.1 geom_abline"
  },
  {
    "objectID": "n.html#geom_abline",
    "href": "n.html#geom_abline",
    "title": "16  geom_a",
    "section": "16.1 geom_abline",
    "text": "16.1 geom_abline"
  },
  {
    "objectID": "o.html#geom_abline",
    "href": "o.html#geom_abline",
    "title": "17  geom_a",
    "section": "17.1 geom_abline",
    "text": "17.1 geom_abline"
  },
  {
    "objectID": "p.html#geom_abline",
    "href": "p.html#geom_abline",
    "title": "18  geom_a",
    "section": "18.1 geom_abline",
    "text": "18.1 geom_abline"
  },
  {
    "objectID": "q.html#geom_abline",
    "href": "q.html#geom_abline",
    "title": "19  geom_a",
    "section": "19.1 geom_abline",
    "text": "19.1 geom_abline"
  },
  {
    "objectID": "r.html#geom_abline",
    "href": "r.html#geom_abline",
    "title": "20  geom_a",
    "section": "20.1 geom_abline",
    "text": "20.1 geom_abline"
  },
  {
    "objectID": "x.html#geom_abline",
    "href": "x.html#geom_abline",
    "title": "26  geom_a",
    "section": "26.1 geom_abline",
    "text": "26.1 geom_abline"
  },
  {
    "objectID": "y.html#geom_abline",
    "href": "y.html#geom_abline",
    "title": "27  geom_a",
    "section": "27.1 geom_abline",
    "text": "27.1 geom_abline"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "29  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Brunson, Jason Cory. 2020. “Ggalluvial: Layered Grammar for\nAlluvial Plots.” Journal of Open Source Software 5 (49).\n\n\nBrunson, Jason Cory, and Quentin D Read. 2019. “Package\n‘Ggalluvial’.”\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern:\n’Ggplot2’ Pattern Geoms.\n\n\nHocking, Toby Dylan. 2023. Directlabels: Direct Labels for\nMulticolor Plots. https://CRAN.R-project.org/package=directlabels.\n\n\nMiller, David L. 2023. emoGG: Use Emoji in Ggplot2.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nRudis, Bob, Ben Bolker, and Jan Schulz. 2017. Ggalt: Extra\nCoordinate Systems, ’Geoms’, Statistical Transformations, Scales and\nFonts for ’Ggplot2’. https://CRAN.R-project.org/package=ggalt.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data\nAnalysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nWilke, Claus O. 2023. Ggridges: Ridgeline Plots in ’Ggplot2’.\nhttps://CRAN.R-project.org/package=ggridges."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Visualisation geom Encyclopedia",
    "section": "",
    "text": "Preface\nWelcome to the “Data Visualisation geom Encyclopedia”, an encyclopedia of geometrics in Data Visualisation. Geometric representations serve as the visual language that bridges the gap between complex datasets and human comprehension. This encyclopedia is a curated collection of geom available in different R programming software packages.\nKeep in mind that the field of data visualization is dynamic, and new techniques and visualizations may emerge over time. Regularly updating your encyclopedia will ensure it remains a relevant and comprehensive resource for users."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Introduction",
    "section": "",
    "text": "3 Data wrangling\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nlibrary(drone)\nlibrary(tibble)\ndata(worldbankdata)\nworldbankdata\n\n# A tibble: 7,937 × 7\n   Country Code  Region                     Year Cooking Electricity Income\n   &lt;fct&gt;   &lt;fct&gt; &lt;fct&gt;                     &lt;dbl&gt;   &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt; \n 1 Aruba   ABW   Latin America & Caribbean  1990      NA       100   H     \n 2 Aruba   ABW   Latin America & Caribbean  2000      NA        91.7 H     \n 3 Aruba   ABW   Latin America & Caribbean  2013      NA       100   H     \n 4 Aruba   ABW   Latin America & Caribbean  2014      NA       100   H     \n 5 Aruba   ABW   Latin America & Caribbean  2015      NA       100   H     \n 6 Aruba   ABW   Latin America & Caribbean  2016      NA       100   H     \n 7 Aruba   ABW   Latin America & Caribbean  2017      NA       100   H     \n 8 Aruba   ABW   Latin America & Caribbean  2018      NA       100   H     \n 9 Aruba   ABW   Latin America & Caribbean  2019      NA       100   H     \n10 Aruba   ABW   Latin America & Caribbean  2020      NA       100   H     \n# ℹ 7,927 more rows\nlibrary(tidyverse)"
  },
  {
    "objectID": "intro.html#data-description",
    "href": "intro.html#data-description",
    "title": "2  Introduction",
    "section": "4.1 Data description",
    "text": "4.1 Data description\n\nlibrary(visdat)\nvis_dat(worldbankdata) + \n  scale_fill_brewer(palette = \"Dark2\")\n\nWarning: Removed 12499 rows containing missing values (`geom_raster()`).\n\n\n\n\n\n\nlibrary(naniar)\ngg_miss_upset(worldbankdata)"
  },
  {
    "objectID": "intro.html#subset-of-datasets-created-from-the-worldbankdata",
    "href": "intro.html#subset-of-datasets-created-from-the-worldbankdata",
    "title": "2  Introduction",
    "section": "5.1 Subset of datasets created from the worldbankdata",
    "text": "5.1 Subset of datasets created from the worldbankdata\n\nwbd.M &lt;- worldbankdata |&gt;\n  filter(Income == \"L\")\n\n\nwdb.Bangladesh &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; filter(Year != 2000)"
  },
  {
    "objectID": "intro.html#r-packages-with-geom-implementation",
    "href": "intro.html#r-packages-with-geom-implementation",
    "title": "2  Introduction",
    "section": "5.2 R packages with geom implementation",
    "text": "5.2 R packages with geom implementation"
  },
  {
    "objectID": "parta.html",
    "href": "parta.html",
    "title": "A",
    "section": "",
    "text": "In this part of the book we will look at the geoms starts with letter “a” or “A”.\n\n\n\n\n\ngeom\nsection\n\n\n\n\ngeom_area\n3.1\n\n\ngeom_abline\n3.2\n\n\ngeom_alluvium\n3.3\n\n\ngeom_arc\n3.4\n\n\ngeom_arc_bar\n3.5"
  },
  {
    "objectID": "g.html#geom_g",
    "href": "g.html#geom_g",
    "title": "9  geom_g",
    "section": "9.1 geom_g",
    "text": "9.1 geom_g\nNot available"
  },
  {
    "objectID": "h.html#histogram",
    "href": "h.html#histogram",
    "title": "10  geom_h",
    "section": "10.2 geom_histogram",
    "text": "10.2 geom_histogram\n\n10.2.1 Package\nggplot2 (Wickham 2016)\n\n\n10.2.2 Description\nVisualise conontinuous data using histogram.\n\n\n10.2.3 Understandable aesthetics\nUnlike most other geoms, geom_hline does not depend on the x and y variables that we map for the main plot. geom_hline has its own independent characteristics: yintercept. The yintercept can be passed either as a arguments or aesthetic.\n\n\n10.2.4 Statistics layer(s)\n\n\n10.2.5 See also\ngeom_density, geom_density_line, geom_freqpoly\n\n\n10.2.6 Example\n\nworldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\n  ggplot(aes(x = Electricity)) +   \n  geom_histogram(col=\"white\")"
  },
  {
    "objectID": "h.html#histogram_pattern",
    "href": "h.html#histogram_pattern",
    "title": "10  geom_h",
    "section": "10.3 geom_histogram_pattern",
    "text": "10.3 geom_histogram_pattern\n\n10.3.1 Package\nggplot2 (Wickham 2016)\n\n\n10.3.2 Description\nVisualise conontinuous data using histogram and filled with patterns.\n\n\n10.3.3 Understandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n10.3.4 Statistics layer(s)\nbin\n\n\n10.3.5 See also\ngeom_histogram, geom_density, geom_density_line\n\n\n10.3.6 Example\n\nworldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\n  ggplot(aes(x = Electricity)) +   \n  geom_histogram_pattern( pattern_color = \"white\",\n                   pattern_fill = \"black\")"
  },
  {
    "objectID": "h.html#geom_hdr_boxplot",
    "href": "h.html#geom_hdr_boxplot",
    "title": "10  geom_h",
    "section": "10.4 geom_hdr_boxplot",
    "text": "10.4 geom_hdr_boxplot\n\n10.4.1 Package\ngghdr (gghdr?)\n\n\n10.4.2 Description\nCalculates and plots the box plot of highest density regions.\n\n\n10.4.3 Understandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour\n\n\n10.4.4 Statistics layer(s)\nhdrcde\n\n\n10.4.5 See also\ngeom_boxplot, geom_histogram, geom_density, geom_density_line\n\n\n10.4.6 Example\n\nlibrary(gghdr)\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  dplyr::select(Cooking) |&gt;\nggplot(aes(y = Cooking, x=factor(0))) + \n  geom_hdr_boxplot(fill = \"#081d58\")"
  },
  {
    "objectID": "h.html#hex",
    "href": "h.html#hex",
    "title": "10  geom_h",
    "section": "10.5 geom_hex",
    "text": "10.5 geom_hex\n\n10.5.1 Package\ngghdr (gghdr?)\n\n\n10.5.2 Description\nCalculates and plots the box plot of highest density regions.\n\n\n10.5.3 Understandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth\n\n\n10.5.4 Statistics layer(s)\nhdrcde\n\n\n10.5.5 See also\ngeom_boxplot, geom_histogram, geom_density, geom_density_line\n\n\n10.5.6 Example\n\nlibrary(hexbin)\nlibrary(viridis)\nworldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) + \n  geom_hex() + \n  scale_fill_viridis()"
  },
  {
    "objectID": "h.html#heat_grid",
    "href": "h.html#heat_grid",
    "title": "10  geom_h",
    "section": "10.6 geom_heat_grid",
    "text": "10.6 geom_heat_grid\n\n10.6.1 Package\nggDoubleHeat (Yu and Buskirk 2023)\n\n\n10.6.2 Description\nVisualize two quantitative variables of information inside a heatmap cell using a grid.\n\n\n10.6.3 Understandable aesthetics\nrequired aesthetics\nx, y, outside, inside\nOptional aesthetics\noutside_colors, outside_name, inside_colors, inside_name\n\n\n10.6.4 Statistics layer(s)\nhdrcde\n\n\n10.6.5 See also\ngeom_heat_circle, geom_heat_tri\n\n\n10.6.6 Example\n\nlibrary(ggDoubleHeat)\nworldbankdata[254:263, ] |&gt;\n  ggplot(aes(y = Year, x=Income)) + \n  geom_heat_grid(outside = Electricity,\n           inside = Cooking)"
  },
  {
    "objectID": "h.html#heat_tri",
    "href": "h.html#heat_tri",
    "title": "10  geom_h",
    "section": "10.7 geom_heat_tri",
    "text": "10.7 geom_heat_tri\n\n10.7.1 Package\nggDoubleHeat (Yu and Buskirk 2023)\n\n\n10.7.2 Description\nVisualize two quantitative variables of information inside a heatmap cell using triangles.\n\n\n10.7.3 Understandable aesthetics\nrequired aesthetics\nx, y, lower, upper\nOptional aesthetics\nlower_colors, lower_name, upper_colors, upper_name\n\n\n10.7.4 Statistics layer(s)\nhdrcde\n\n\n10.7.5 See also\ngeom_heat_grid, geom_heat_tri\n\n\n10.7.6 Example\n\nlibrary(ggDoubleHeat)\nworldbankdata[254:263, ] |&gt;\n  ggplot(aes(y = Year, x=Income)) + \n  geom_heat_tri(lower = Electricity,\n           upper = Cooking)"
  },
  {
    "objectID": "h.html#heat_circle",
    "href": "h.html#heat_circle",
    "title": "10  geom_h",
    "section": "10.8 geom_heat_circle",
    "text": "10.8 geom_heat_circle\n\n10.8.1 Package\nggDoubleHeat (Yu and Buskirk 2023)\n\n\n10.8.2 Description\nVisualize two quantitative variables of information inside a heatmap cell using triangles.\n\n\n10.8.3 Understandable aesthetics\nrequired aesthetics\nx, y, outside, inside\nOptional aesthetics\noutside_colors, outside_name, inside_colors, inside_name\n\n\n10.8.4 Statistics layer(s)\nhdrcde\n\n\n10.8.5 See also\ngeom_heat_grid, geom_heat_tri\n\n\n10.8.6 Example\n\nlibrary(ggDoubleHeat)\nworldbankdata[254:263, ] |&gt;\n  ggplot(aes(y = Year, x=Income)) + \n  geom_heat_circle(outside = Electricity,\n           inside = Cooking)"
  },
  {
    "objectID": "f.html#function",
    "href": "f.html#function",
    "title": "8  geom_f",
    "section": "8.1 geom_function",
    "text": "8.1 geom_function\n\n8.1.1 Package\nggplot2 (Wickham 2016)\n\n\n8.1.2 Description\nComputes and draws a function as a continuous curve.\n\n\n8.1.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n8.1.4 The statistical transformation to use on the data for this layer\nstat_prefix\n\n\n8.1.5 See also\ngeom_density\n\n\n8.1.6 Example\n\nggplot() + \n  geom_function(fun = ~ 0.5*exp(-abs(.x)))"
  },
  {
    "objectID": "f.html#freqpoly",
    "href": "f.html#freqpoly",
    "title": "8  geom_f",
    "section": "8.2 geom_freqpoly",
    "text": "8.2 geom_freqpoly\n\n8.2.1 Package\nggplot2 (Wickham 2016)\n\n\n8.2.2 Description\nVisualise the spread of a single continuous variable by partitioning the x-axis into bins and mapping the frequency of observations within each bin.\n\n\n8.2.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n8.2.4 The statistical transformation to use on the data for this layer\nstat_bin for a continuous x variable\nstat_count for a discrete x variable\n\n\n8.2.5 See also\ngeom_density\n\n\n8.2.6 Example\n\nworldbankdata |&gt;\n  ggplot(aes(x=Electricity, col=Income)) + \n  geom_freqpoly()"
  },
  {
    "objectID": "i.html#image",
    "href": "i.html#image",
    "title": "11  geom_i",
    "section": "11.1 geom_image",
    "text": "11.1 geom_image\n\n11.1.1 Package\nggimage (Yu 2023)\n\n\n11.1.2 Description\nVisualise data through images.\n\n\n11.1.3 Understandable aesthetics\nimage\n\n\n11.1.4 Statistics layer(s)\nidentity\n\n\n11.1.5 See also\ngeom_emoji\n\n\n11.1.6 Example\n\nlibrary(\"ggimage\")\ndf &lt;- data.frame(x = rnorm(10),\n                 y = rnorm(10),\n                image = sample(\"https://www.r-project.org/logo/Rlogo.png\",\n                              size=10, replace = TRUE))\nggplot(df, aes(x, y)) + geom_image(aes(image=image))"
  },
  {
    "objectID": "i.html#geom_icon",
    "href": "i.html#geom_icon",
    "title": "11  geom_i",
    "section": "11.2 geom_icon",
    "text": "11.2 geom_icon\n\n11.2.1 Example\n\nlibrary(\"ggimage\")\ndf &lt;- data.frame(x = rnorm(10),\n                 y = rnorm(10))\ndf$icon = sample(c('ios-power', 'ios-wifi', 'ios-pie'), 10, replace=TRUE)\nggplot(df, aes(x, y)) + geom_icon(aes(image=icon))\n\n\n\n\n\n\n\n\nYu, Guangchuang. 2023. Ggimage: Use Image in ’Ggplot2’. https://CRAN.R-project.org/package=ggimage."
  },
  {
    "objectID": "f.html#geom_flag",
    "href": "f.html#geom_flag",
    "title": "8  geom_f",
    "section": "8.3 geom_flag",
    "text": "8.3 geom_flag\n\nlibrary(ggimage)\nworldbankdata.flag &lt;- worldbankdata |&gt;\n  filter(Country %in% c(\"France\", \"Sweden\", \"Norway\", \"Germany\", \"Switzerland\")) |&gt;\n  filter(Year == 2000) \nworldbankdata.flag$code.flag &lt;- c(\"FR\", \"SE\", \"NO\", \"DE\", \"CH\")\nworldbankdata.flag |&gt;\nggplot(aes(y = Country, x= Electricity)) + \n  geom_col(stat = 'identity') + \n  geom_flag(y = -2, aes(image = code.flag)) +\n  coord_flip() \n\n\n\n\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "j.html#jitter",
    "href": "j.html#jitter",
    "title": "12  geom_j",
    "section": "12.1 geom_jitter",
    "text": "12.1 geom_jitter\n\n12.1.1 Package\nggplot2 (Wickham 2016)\n\n\n12.1.2 Description\nAdds a small amount of random variation to the location of each point, horizontally and/or vertically.\n\n\n12.1.3 The statistical transformation to use on the data for this layer\nstat_identify - It plots the data as it is.\n\n\n12.1.4 See also\ngeom_point\n\n12.1.4.1 Example\n\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Income, y=Electricity)) + \n  geom_jitter() + ggtitle(\"a1: geom_jitter\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Income, y=Electricity)) + \n  geom_point() + ggtitle(\"a1: geom_point\")\na1 | a2\n\n\n\n\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "i.html#icon",
    "href": "i.html#icon",
    "title": "11  geom_i",
    "section": "11.2 geom_icon",
    "text": "11.2 geom_icon\n\n11.2.1 Example\n\nlibrary(\"ggimage\")\ndf &lt;- data.frame(x = rnorm(10),\n                 y = rnorm(10))\ndf$icon = sample(c('ios-power', 'ios-wifi', 'ios-pie'), 10, replace=TRUE)\nggplot(df, aes(x, y)) + geom_icon(aes(image=icon))\n\n\n\n\n\n\n\n\nYu, Guangchuang. 2023. Ggimage: Use Image in ’Ggplot2’. https://CRAN.R-project.org/package=ggimage."
  },
  {
    "objectID": "a.html#area",
    "href": "a.html#area",
    "title": "3  geom_a",
    "section": "3.1 geom_area",
    "text": "3.1 geom_area\n\n3.1.1 Package\nggplot2 (Wickham 2016)\n\n\n3.1.2 Description\nCreate an area plot. This cover the space between x-axis and line that connects the data points.\n\n\n3.1.3 Understandable aesthetics\nalpha, colour, linetype, linewidth\n\n\n3.1.4 The statistical transformation to use on the data for this layer\nstat_align\n\n\n3.1.5 See also\ngeom_line, geom_ribbon\n\n\n3.1.6 Example\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_area(alpha=0.5) + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021) + \n  labs(title = \"a1: geom_area only\")\n\na2 &lt;-  worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_area(alpha=0.5) + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  geom_point(col=\"red\") + \n  labs(title = \"a2: geom_area \\n and geom_point\")\na1 | a2"
  },
  {
    "objectID": "a.html#abline",
    "href": "a.html#abline",
    "title": "3  geom_a",
    "section": "3.2 geom_abline",
    "text": "3.2 geom_abline\n\n3.2.1 Package\nggplot2 (Wickham 2016)\n\n\n3.2.2 Description\nDescription Draw a straight line (\\(Y=mX+c\\)) for a given slope (\\(m\\)) and intercept (\\(c\\)).\n\n\n3.2.3 Understandable aesthetics\nUnlike most other geoms, geom_abline does not depend on the x and y variables that we map for the main plot. geom_abline has its own independent characteristics: intercept and slope.\n\n\n3.2.4 The statistical transformation to use on the data for this layer\nNone (geom_abline is independent from the data layer.)\n\n\n3.2.5 See also:\ngeom_point, geom_vline, geom_hline\n\n\n3.2.6 Example\n\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_abline(intercept = 0, slope = 1) + \n  labs(title=\"a1: geom_abline only\") +\n  theme(aspect.ratio = 1)\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_abline(intercept = 0, slope = 1) + \n  geom_point() + \n  labs(title = \"a2: geom_abline \\n and geom_point\") +\n  theme(aspect.ratio = 1)\na1 | a2"
  },
  {
    "objectID": "a.html#alluvium",
    "href": "a.html#alluvium",
    "title": "3  geom_a",
    "section": "3.3 geom_alluvium",
    "text": "3.3 geom_alluvium\n\n3.3.1 Package\nggalluvial(Brunson and Read 2019; Brunson 2020)\n\n\n3.3.2 Description\nCreate alluvial plot. An alluvial plot is a type of diagram that is particularly useful for visualizing categorical data and the flow or transition between different categorical variables over multiple stages or categories\n\n\n3.3.3 Understandable aesthetics\nx, y, ymin, ymax, alpha, colour, fill, linetype, size, group (group is used internally; arguments are ignored)\n\n\n3.3.4 The statistical transformation to use on the data for this layer\nalluvium\n\n\n3.3.5 See also\ngeom_stratum, geom_flow, geom_lode\n\n\n3.3.6 Example\n\nlibrary(ggalluvial)\nfreq.table &lt;- worldbankdata |&gt;\n  select(Country, Region, Year, Income) |&gt;\n  filter(Year &gt; 2015) |&gt;\n  group_by(Region, Year, Income) |&gt;\n  summarise(n = n()) |&gt;\n  drop_na()\nfreq.table \n\n# A tibble: 153 × 4\n# Groups:   Region, Year [49]\n   Region               Year Income     n\n   &lt;fct&gt;               &lt;dbl&gt; &lt;fct&gt;  &lt;int&gt;\n 1 East Asia & Pacific  2016 LM        13\n 2 East Asia & Pacific  2016 UM        10\n 3 East Asia & Pacific  2016 H         14\n 4 East Asia & Pacific  2017 LM        13\n 5 East Asia & Pacific  2017 UM        10\n 6 East Asia & Pacific  2017 H         14\n 7 East Asia & Pacific  2018 LM        13\n 8 East Asia & Pacific  2018 UM        10\n 9 East Asia & Pacific  2018 H         14\n10 East Asia & Pacific  2019 LM        12\n# ℹ 143 more rows\n\na1 &lt;- freq.table |&gt;\n  ggplot(aes(y = n, axis1 = Region, axis2 = Year)) +\n  geom_alluvium(aes(fill = Income), width = 1/12) + \n  labs(title = \"a1: geom_alluvium only\")\n\na2 &lt;- freq.table |&gt;\n  ggplot(aes(y = n, axis1 = Region, axis2 = Year)) +\n  geom_alluvium(aes(fill = Income), width = 1/12) + \n  geom_stratum(width = 1/12, fill = \"black\", color = \"grey\") +\n  geom_label(stat = \"stratum\", aes(label = after_stat(stratum))) +\n  labs(title = \"a2: geom_alluvium, \\n geom_stratum and geom_label\")\na1/a2"
  },
  {
    "objectID": "a.html#geom_arc",
    "href": "a.html#geom_arc",
    "title": "3  geom_a",
    "section": "3.4 geom_arc",
    "text": "3.4 geom_arc\n\n3.4.1 Package\nggforce(Pedersen 2022)\n\n\n3.4.2 Description\nDraw a circle or a segment of a circle.\n\n\n3.4.3 Understandable aesthetic\nrequired aesthetics\nx0 - starting coordinate of x-axis , y0 - starting coordinate of x-axis, r - radius, start, end\noptional aesthetics\ncolor, linewidth, linetype, alpha, lineend\n\n\n3.4.4 The statistical transformation to use on the data for this layer\nstat_arc\n\n\n3.4.5 See also\ngeom_arc2, geom_arc_bar\n\n\n3.4.6 Example\n\nlibrary(ggforce)\nggplot() + \n  geom_arc(aes(x0=0, y0=0, r=8, start=1, end=8)) + \n  geom_arc(aes(x0=0, y0=0, r=8, start=1, end=5), col=\"red\",size=2) + theme(aspect.ratio = 1)"
  },
  {
    "objectID": "a.html#arcbar",
    "href": "a.html#arcbar",
    "title": "3  geom_a",
    "section": "3.5 geom_arc_bar",
    "text": "3.5 geom_arc_bar\n\n3.5.1 Package\nggforce(Pedersen 2022)\n\n\n3.5.2 Description\nTo draw pie chart and donut chart defining centre point, a radius and a start and end angle.\n\n\n3.5.3 Understandable aesthetic\nrequired aesthetics\nx0 - starting coordinate of x-axis , y0 - starting coordinate of x-axis, r - radius, start, end\noptional\ncolor, linewidth, linetype, alpha, lineend\n\n\n3.5.4 The statistical transformation to use on the data for this layer\nstat_arc\n\n\n3.5.5 See also\ngeom_arc, geom_arc_bar\n\n\n3.5.6 Example\n\ndf &lt;- data.frame(\n    state = c('A', 'B', 'C', \n              'D', 'E'),\n    focus = c(0.2, 0, 0, 0, 0),\n    start = c(0, 1, 2, 3, 4),\n    end = c(1, 2, 3, 4, 2*pi),\n    amount = c(4, 3, 1, 2, 5),\n    stringsAsFactors = FALSE\n)\nggplot(df) + \n    geom_arc_bar(aes(x0 = 0, y0 = 0, r0 = 0, r = 1, amount = amount, \n                     fill = state, explode = focus), stat = 'pie') + \n  theme(aspect.ratio = 1)\n\n\n\n\n\n\n\n\nBrunson, Jason Cory. 2020. “Ggalluvial: Layered Grammar for Alluvial Plots.” Journal of Open Source Software 5 (49).\n\n\nBrunson, Jason Cory, and Quentin D Read. 2019. “Package ‘Ggalluvial’.”\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "k.html",
    "href": "k.html",
    "title": "13  geom_k",
    "section": "",
    "text": "Not found"
  },
  {
    "objectID": "l.html#geom_label",
    "href": "l.html#geom_label",
    "title": "14  geom_l",
    "section": "14.1 geom_label",
    "text": "14.1 geom_label\n\n14.1.1 Package\nggplot2 (Wickham 2016)\n\n\n14.1.2 Description\nLabelling plots\n\n\n14.1.3 Understandable aesthetics\nRequired aesthetics\nx, y, label\nOptional aesthetics\nalpha, angle, colour, family, fontface, group, hjust, lineheight, size, vjust\n\n\n14.1.4 The statistical transformation to use on the data for this layer\nidentity\n\n\n14.1.5 See also\ngeom_text\n\n\n14.1.6 Example\n\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\" | Income ==\"H\") |&gt; \n  filter(Year == 2021) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity, label = Income)) + \n  geom_label(aes(fill = factor(Income)), colour = \"white\", fontface = \"bold\", alpha=0.5) + theme(aspect.ratio = 1) + labs(title = \"a1: geom_label only\") \na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\" | Income ==\"H\") |&gt; \n  filter(Year == 2021) |&gt;\n  ggplot(aes(x = Cooking, y = Electricity, label = Income)) + \n  geom_point(aes(col = Income)) +  theme(aspect.ratio = 1) + \n  labs(title = \"a2: geom_point only\") \na1|a2"
  },
  {
    "objectID": "l.html#geom_line",
    "href": "l.html#geom_line",
    "title": "14  geom_l",
    "section": "14.2 geom_line",
    "text": "14.2 geom_line"
  },
  {
    "objectID": "l.html#geom_linerange",
    "href": "l.html#geom_linerange",
    "title": "14  geom_l",
    "section": "14.3 geom_linerange",
    "text": "14.3 geom_linerange\n\n14.3.1 Package\nggplot2 (Wickham 2016)\n\n\n14.3.2 Description\nRepresenting a vertical interval defined by x, ymin and ymax\n\n\n14.3.3 Understandable aesthetics\nrequired aesthetics\nx or y,\nymin or xmin,\nymax or xmax\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n14.3.4 The statistical transformation to use on the data for this layer\nstat_align\n\n\n14.3.5 See also\ngeom_line, geom_crossbar, geom_errorbar, geom_pointrange\n\n\n14.3.6 Example\n\nworldbankdata |&gt;\n  group_by(Region) |&gt;\n  summarise(min = min(Cooking, na.rm = TRUE), max=max(Cooking, \n                                                      na.rm = TRUE)) |&gt;\n  ggplot(aes(x=Region)) +\n  geom_linerange(aes(ymin = min, ymax = max)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "b.html#bump",
    "href": "b.html#bump",
    "title": "4  geom_b",
    "section": "4.8 geom_bump",
    "text": "4.8 geom_bump\n\n4.8.1 Package\nggbump (ggbump?)\n\n\n4.8.2 Description\nCreates a smooth rank over time.\n\n\n4.8.3 Understandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\ncolour, alpha, size\n\n\n4.8.4 The statistical transformation to use on the data for this layer\nstat_bin_2d\n\n\n4.8.5 See also\ngeom_line\n\n\n4.8.6 Example\n\nlibrary(ggbump)\na1 &lt;- worldbankdata |&gt; \n  filter(Country == \"Afghanistan\") |&gt;\n  ggplot(aes(x = Year, y=Electricity)) +\n  geom_bump() + ggtitle(\"a1: geom_bump only\")\na2 &lt;- worldbankdata |&gt; \n  filter(Country == \"Afghanistan\") |&gt;\n  ggplot(aes(x = Year, y=Electricity)) +\n  geom_bump() + \n  geom_point() + \n  ggtitle(\"a2: geom_bump and geom_point\")\na1|a2\n\n\n\n\nIllustration of using geom_bin_2d\n\n\n\n\n\n\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern: ’Ggplot2’ Pattern Geoms.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "m.html#mark_circle",
    "href": "m.html#mark_circle",
    "title": "15  geom_m",
    "section": "15.1 geom_mark_circle",
    "text": "15.1 geom_mark_circle\n\n15.1.1 Package\nggforce (Pedersen 2022)\n\n\n15.1.2 Description\nAnnotate sets of points via circles.\n\n\n15.1.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\n\n\n15.1.4 The statistical transformation to use on the data for this layer\nstat_xxx\n\n\n15.1.5 See also\ngeom_circle, geom_encircle, geom_mark_ellipse, geom_mark_hull, geom_mark_rect\n\n\n15.1.6 Example\n\nlibrary(ggforce)\nworldbankdata |&gt;\n  filter(Country == \"Angola\") |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_circle(aes(fill = Income, label = Income),\n                   con.cap = 0) +\n  geom_point(aes(col=Income))"
  },
  {
    "objectID": "m.html#geom_make_ellipse",
    "href": "m.html#geom_make_ellipse",
    "title": "15  geom_m",
    "section": "15.2 geom_make_ellipse",
    "text": "15.2 geom_make_ellipse\n\n15.2.1 Package\nggforce (Pedersen 2022)\n\n\n15.2.2 Description\nAnnotate sets of points via ellipse.\n\n\n15.2.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\n\n\n15.2.4 The statistical transformation to use on the data for this layer\nstat_xxx\n\n\n15.2.5 See also\ngeom_circle, geom_encircle, geom_mark_circle, geom_mark_hull, geom_mark_rect\n\n\n15.2.6 Example\n\nlibrary(ggforce)\nworldbankdata |&gt;\n  filter(Country == \"Angola\") |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_ellipse(aes(fill = Income, label = Income),\n                   con.cap = 0) +\n  geom_point(aes(col=Income))"
  },
  {
    "objectID": "m.html#geom_make_hull",
    "href": "m.html#geom_make_hull",
    "title": "15  geom_m",
    "section": "15.3 geom_make_hull",
    "text": "15.3 geom_make_hull\n\n15.3.1 Package\nggforce (Pedersen 2022)\n\n\n15.3.2 Description\nAnnotate sets of points via hulls.\n\n\n15.3.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\n\n\n15.3.4 The statistical transformation to use on the data for this layer\nstat_xxx\n\n\n15.3.5 See also\ngeom_circle, geom_encircle, geom_mark_circle, geom_mark_ellipse, geom_mark_rect\n\n\n15.3.6 Example\n\nlibrary(ggforce)\nlibrary(concaveman)\nworldbankdata |&gt;\n  filter(Income == \"L\" | Income ==\"UM\") |&gt;\n  filter(Year == 2021) |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_hull(aes(fill=Income, lable = Income)) +\n  geom_point(aes(col=Income))"
  },
  {
    "objectID": "m.html#geom_make_rect",
    "href": "m.html#geom_make_rect",
    "title": "15  geom_m",
    "section": "15.4 geom_make_rect",
    "text": "15.4 geom_make_rect\n\n15.4.1 Package\nggforce (Pedersen 2022)\n\n\n15.4.2 Description\nAnnotate sets of points via rectangles.\n\n\n15.4.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\n\n\n15.4.4 The statistical transformation to use on the data for this layer\nstat_xxx\n\n\n15.4.5 See also\ngeom_circle, geom_encircle, geom_mark_circle, geom_mark_ellipse, geom_mark_hull\n\n\n15.4.6 Example\n\nlibrary(ggforce)\nworldbankdata |&gt;\n  filter(Country == \"Angola\") |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_rect(aes(fill = Income, label = Income),\n                   con.cap = 0) +\n  geom_point(aes(col=Income))"
  },
  {
    "objectID": "m.html#geom_map",
    "href": "m.html#geom_map",
    "title": "15  geom_m",
    "section": "15.5 geom_map",
    "text": "15.5 geom_map\n\n\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce."
  },
  {
    "objectID": "m.html#mark_ellipse",
    "href": "m.html#mark_ellipse",
    "title": "15  geom_m",
    "section": "15.2 geom_make_ellipse",
    "text": "15.2 geom_make_ellipse\n\n15.2.1 Package\nggforce (Pedersen 2022)\n\n\n15.2.2 Description\nAnnotate sets of points via ellipse.\n\n\n15.2.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\n\n\n15.2.4 The statistical transformation to use on the data for this layer\nstat_xxx\n\n\n15.2.5 See also\ngeom_circle, geom_encircle, geom_mark_circle, geom_mark_hull, geom_mark_rect\n\n\n15.2.6 Example\n\nlibrary(ggforce)\nworldbankdata |&gt;\n  filter(Country == \"Angola\") |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_ellipse(aes(fill = Income, label = Income),\n                   con.cap = 0) +\n  geom_point(aes(col=Income))"
  },
  {
    "objectID": "m.html#mark_hull",
    "href": "m.html#mark_hull",
    "title": "15  geom_m",
    "section": "15.3 geom_make_hull",
    "text": "15.3 geom_make_hull\n\n15.3.1 Package\nggforce (Pedersen 2022)\n\n\n15.3.2 Description\nAnnotate sets of points via hulls.\n\n\n15.3.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\n\n\n15.3.4 The statistical transformation to use on the data for this layer\nstat_xxx\n\n\n15.3.5 See also\ngeom_circle, geom_encircle, geom_mark_circle, geom_mark_ellipse, geom_mark_rect\n\n\n15.3.6 Example\n\nlibrary(ggforce)\nlibrary(concaveman)\nworldbankdata |&gt;\n  filter(Income == \"L\" | Income ==\"UM\") |&gt;\n  filter(Year == 2021) |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_hull(aes(fill=Income, lable = Income)) +\n  geom_point(aes(col=Income))"
  },
  {
    "objectID": "m.html#mark_rect",
    "href": "m.html#mark_rect",
    "title": "15  geom_m",
    "section": "15.4 geom_make_rect",
    "text": "15.4 geom_make_rect\n\n15.4.1 Package\nggforce (Pedersen 2022)\n\n\n15.4.2 Description\nAnnotate sets of points via rectangles.\n\n\n15.4.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nx0 (used to anchor the label), y0 (used to anchor the label), filter, label, description, color, fill, group, size, linetype, alpha\n\n\n15.4.4 The statistical transformation to use on the data for this layer\nstat_xxx\n\n\n15.4.5 See also\ngeom_circle, geom_encircle, geom_mark_circle, geom_mark_ellipse, geom_mark_hull\n\n\n15.4.6 Example\n\nlibrary(ggforce)\nworldbankdata |&gt;\n  filter(Country == \"Angola\") |&gt;\n  ggplot(aes(x = Cooking, y=Electricity)) +\n  geom_mark_rect(aes(fill = Income, label = Income),\n                   con.cap = 0) +\n  geom_point(aes(col=Income))"
  },
  {
    "objectID": "m.html#map",
    "href": "m.html#map",
    "title": "15  geom_m",
    "section": "15.5 geom_map",
    "text": "15.5 geom_map\n\n15.5.1 Package\nggplot2 (Wickham 2016)\n\n\n15.5.2 Description\nDisplay polygons as a map.\n\n\n15.5.3 Understandable aesthetics\nrequired aesthetics\nmap_id\noptional aesthetics\nalpha, colour, fill ,group, linetype, linewidth, subgropu\n\n\n15.5.4 The statistical transformation to use on the data for this layer\nstat_xxx\n\n\n15.5.5 See also\ngeom_polygon\n\n\n15.5.6 Example\n\nworld = map_data(\"world\")\nggplot() +\n  geom_map(\n    data = world, map = world,\n    aes(long, lat, map_id = region),\n    fill = \"white\", colour = \"#7f7f7f\", size=0.5)"
  },
  {
    "objectID": "m.html#mosaic",
    "href": "m.html#mosaic",
    "title": "15  geom_m",
    "section": "15.6 geom_mosaic",
    "text": "15.6 geom_mosaic\n\n15.6.1 Package\nggmosaic (Jeppson, Hofmann, and Cook 2021)\n\n\n15.6.2 Description\nCreate mosaic plot\n\n\n15.6.3 Understandable aesthetics\nx, y, xmin, xmax, ymin, ymax\n\n\n15.6.4 The statistical transformation to use on the data for this layer\nmosaic\n\n\n15.6.5 See also\ngeom_bar, geom_mosaic_jitter, geom_mosaic_text\n\n\n15.6.6 Example\n\nlibrary(ggmosaic)\nworldbankdata |&gt;\n  filter(Year == 2022) |&gt;\n  ggplot() +\n  geom_mosaic(aes(x = product(Region), fill = Income)) + \n  scale_fill_brewer(palette = \"Dark2\") + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))"
  },
  {
    "objectID": "m.html#geom_mosic_jittermosaic-jitter",
    "href": "m.html#geom_mosic_jittermosaic-jitter",
    "title": "15  geom_m",
    "section": "15.7 geom_mosic_jitter{#mosaic jitter}",
    "text": "15.7 geom_mosic_jitter{#mosaic jitter}\n\n15.7.1 Package\nggmosaic (Jeppson, Hofmann, and Cook 2021)\n\n\n15.7.2 Description\nCreate a mosaic plot with text or labels.\n\n\n15.7.3 Understandable aesthetics\nx, y, xmin, xmax, ymin, ymax\n\n\n15.7.4 The statistical transformation to use on the data for this layer\nmosaic\n\n\n15.7.5 See also\ngeom_bar, geom_mosaic, geom_mosaic_text\n\n\n15.7.6 Example\n\nlibrary(ggmosaic)\nworldbankdata |&gt;\n  filter(Year == 2022) |&gt;\n  ggplot() +\n  geom_mosaic(aes(x = product(Region), fill = Income), alpha=0.5) +\n  geom_mosaic_text(aes(x = product(Region), fill = Income)) +\n  scale_fill_brewer(palette = \"Dark2\") + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) \n\n\n\n\n\n\n\n\nJeppson, Haley, Heike Hofmann, and Di Cook. 2021. Ggmosaic: Mosaic Plots in the ’Ggplot2’ Framework. https://CRAN.R-project.org/package=ggmosaic.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "l.html#line",
    "href": "l.html#line",
    "title": "14  geom_l",
    "section": "14.2 geom_line",
    "text": "14.2 geom_line\n\n14.2.1 Package\nggplot2 (Wickham 2016)\n\n\n14.2.2 Description\nConnects dats in order of the variable on the x axis.\n\n\n14.2.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n14.2.4 The statistical transformation to use on the data for this layer\nstat_xx\n\n\n14.2.5 See also\ngeom_path\n\n\n14.2.6 Example\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Sri Lanka\") |&gt;\n  ggplot(aes(x=Year, y=Cooking)) + \n  geom_line() + ggtitle(\"geom_line only\")\na2 &lt;- worldbankdata |&gt;\n  filter(Country == \"Sri Lanka\") |&gt;\n  ggplot(aes(x=Year, y=Cooking)) + \n  geom_line() + \n  geom_point() +\n  ggtitle(\"geom_line and geom_point\")\na1|a2"
  },
  {
    "objectID": "v.html#geom_vline",
    "href": "v.html#geom_vline",
    "title": "24  geom_v",
    "section": "24.1 geom_vline",
    "text": "24.1 geom_vline\n\n24.1.1 Package\nggplot2 (Wickham 2016)\n\n\n24.1.2 Description\nDraws a vertical line given x-intercept.\n\n\n24.1.3 Understandable aesthetics\nUnlike most other geoms, geom_vline does not depend on the x and y variables that we map for the main plot. geom_vline has its own independent characteristic: xintercept and slope.\n\n\n24.1.4 The statistical transformation to use on the data for this layer\nNone (geom_vline is independent from the data layer.)\n\n\n24.1.5 See also:\ngeom_point, geom_abline, geom_hline\n\n\n24.1.6 Example\n\nlibrary(ggplot2)\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_vline(xintercept = 50) + \n  labs(title=\"a1: geom_vline only\") +\n  theme(aspect.ratio = 1)\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_vline(xintercept = 50) + \n  geom_point() + \n  labs(title = \"a2: geom_vline \\n and geom_point\") +\n  theme(aspect.ratio = 1)\na1 | a2\n\n\n\n\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "v.html#vline",
    "href": "v.html#vline",
    "title": "24  geom_v",
    "section": "24.1 geom_vline",
    "text": "24.1 geom_vline\n\n24.1.1 Package\nggplot2 (Wickham 2016)\n\n\n24.1.2 Description\nDraws a vertical line given x-intercept.\n\n\n24.1.3 Understandable aesthetics\nUnlike most other geoms, geom_vline does not depend on the x and y variables that we map for the main plot. geom_vline has its own independent characteristic: xintercept and slope.\n\n\n24.1.4 The statistical transformation to use on the data for this layer\nNone (geom_vline is independent from the data layer.)\n\n\n24.1.5 See also:\ngeom_point, geom_abline, geom_hline\n\n\n24.1.6 Example\n\nlibrary(ggplot2)\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_vline(xintercept = 50) + \n  labs(title=\"a1: geom_vline only\") +\n  theme(aspect.ratio = 1)\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_vline(xintercept = 50) + \n  geom_point() + \n  labs(title = \"a2: geom_vline \\n and geom_point\") +\n  theme(aspect.ratio = 1)\na1 | a2"
  },
  {
    "objectID": "v.html#violin",
    "href": "v.html#violin",
    "title": "24  geom_v",
    "section": "24.1 geom_violin",
    "text": "24.1 geom_violin\n\n24.1.1 Package\nggplot2 (Wickham 2016)\n\n\n24.1.2 Description\nCreates violin plot.\n\n\n24.1.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth, weight\n\n\n24.1.4 The statistical transformation to use on the data for this layer\nydensity\n\n\n24.1.5 See also\ngeom_boxplot, geom_density\n\n\n24.1.6 Example\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\nggplot(aes(y = Cooking, x=Income, fill=Income)) + \n  geom_violin() + \n  scale_fill_brewer(palette = \"Dark2\") +\n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())"
  },
  {
    "objectID": "v.html#geom_violin_pattern",
    "href": "v.html#geom_violin_pattern",
    "title": "24  geom_v",
    "section": "24.2 geom_violin_pattern",
    "text": "24.2 geom_violin_pattern"
  },
  {
    "objectID": "v.html#geom_voroni",
    "href": "v.html#geom_voroni",
    "title": "24  geom_v",
    "section": "24.3 geom_voroni",
    "text": "24.3 geom_voroni\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\"|Income ==\"U\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_tile(aes(fill=Income), alpha=0.5) + \n  labs(title = \"a1: geom_voroni only\") +\n  theme(aspect.ratio = 1)\n\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\"|Income ==\"U\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_voronoi_tile(aes(fill=Income), alpha=0.5) + \n  labs(title = \"a2: geom_point and \\n geom_delaunay_tile\") +\n  theme(aspect.ratio = 1)\na1 | a2"
  },
  {
    "objectID": "v.html#geom_voroni_segment",
    "href": "v.html#geom_voroni_segment",
    "title": "24  geom_v",
    "section": "24.4 geom_voroni_segment",
    "text": "24.4 geom_voroni_segment"
  },
  {
    "objectID": "v.html#geom_voroni_tile",
    "href": "v.html#geom_voroni_tile",
    "title": "24  geom_v",
    "section": "24.3 geom_voroni_tile",
    "text": "24.3 geom_voroni_tile\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_tile(aes(fill=Income), alpha=0.5) + \n  labs(title = \"a1: geom_voroni only\") +\n  theme(aspect.ratio = 1)\n\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_voronoi_tile(aes(fill=Income), alpha=0.5) + \n  labs(title = \"a2: geom_point and \\n geom_delaunay_tile\") +\n  theme(aspect.ratio = 1)\na1 | a2\n\n\n\n\ni =\n[1] 343\nj =\n[1] -99\nAdjacency list of i does not contain j.\ni =\n[1] 343\nj =\n[1] -99\nAdjacency list of i does not contain j."
  },
  {
    "objectID": "v.html#violin_pattern",
    "href": "v.html#violin_pattern",
    "title": "24  geom_v",
    "section": "24.2 geom_violin_pattern",
    "text": "24.2 geom_violin_pattern\n\n24.2.1 Package\nggforce (Pedersen 2022)\n\n\n24.2.2 Description\nFill violin plots with patterns.\n\n\n24.2.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth, weight\n\n\n24.2.4 The statistical transformation to use on the data for this layer\nydensity\n\n\n24.2.5 See also\ngeom_boxplot, geom_density\n\n\n24.2.6 Example\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\nggplot(aes(y = Cooking, x=Income, fill=Income)) + \n  geom_violin_pattern() + \n  scale_fill_brewer(palette = \"Dark2\") +\n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())"
  },
  {
    "objectID": "v.html#geom_voroni_tile-1",
    "href": "v.html#geom_voroni_tile-1",
    "title": "24  geom_v",
    "section": "24.5 geom_voroni_tile",
    "text": "24.5 geom_voroni_tile\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\na1 &lt;- worldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  filter(Income == \"LM\" | Income == \"UM\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_tile(aes(fill=Income), alpha=0.5) + \n  geom_voronoi_segment() +\n  labs(title = \"a1: geom_voroni only\") +\n  theme(aspect.ratio = 1)\n\na2 &lt;- worldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  filter(Income == \"LM\" | Income == \"UM\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_voronoi_tile(aes(fill=Income), alpha=0.5) + \n  geom_voronoi_segment() +\n  labs(title = \"a2: geom_point and \\n geom_delaunay_tile\") +\n  theme(aspect.ratio = 1)\na1 | a2\n\n\n\n\ni =\n[1] 38\nj =\n[1] -99\nAdjacency list of i does not contain j.\ni =\n[1] 38\nj =\n[1] -99\nAdjacency list of i does not contain j.\n\n\n\n\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "p.html#geom_path",
    "href": "p.html#geom_path",
    "title": "18  geom_p",
    "section": "18.2 geom_path",
    "text": "18.2 geom_path\n\n18.2.1 Package\nggplot2 (Wickham 2016)\n\n\n18.2.2 Description\nConnects the observations in the order in which they appear in the dataset.\n\n\n18.2.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n18.2.4 The statistical transformation to use on the data for this layer\nstat_prefix\n\n\n18.2.5 See also\ngeom_line\n\n\n18.2.6 Example\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_path() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"a1: X-time dependent variable\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Electricity, y=Cooking)) + \n  geom_path() + ggtitle(\"a2: X-time independent variable\")\na1|a2"
  },
  {
    "objectID": "p.html#geom_pointrange",
    "href": "p.html#geom_pointrange",
    "title": "18  geom_p",
    "section": "18.3 geom_pointrange",
    "text": "18.3 geom_pointrange\n\n18.3.1 Package\nggplot2 (Wickham 2016)\n\n\n18.3.2 Description\nRepresenting a vertical interval defined by ymin, ymax and point represent by y for different levels of x.\n\n\n18.3.3 Understandable aesthetics\nrequired aesthetics\nx or y,\nymin or xmin,\nymax or xmax\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n18.3.4 The statistical transformation to use on the data for this layer\nstat_align\n\n\n18.3.5 See also\ngeom_line, geom_crossbar, geom_errorbar, geom_linerange\n\n\n18.3.6 Example\nMethod 1\n\nworldbankdata |&gt;\n  group_by(Region) |&gt;\n  summarise(min = min(Cooking, na.rm = TRUE), max=max(Cooking, \n                                                      na.rm = TRUE),\n            median = median(Cooking, na.rm=TRUE)) |&gt;\n  ggplot(aes(x = Region, y = median, ymin = min, ymax = max)) +\n  geom_pointrange() + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nMethod 2\n\nggplot(data = worldbankdata) +\n  geom_pointrange(\n    mapping = aes(x = Region, y = Cooking),\n    stat = \"summary\",\n    fun.min = min,\n    fun.max = max,\n    fun = median\n  ) + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\nWarning: Removed 6047 rows containing non-finite values (`stat_summary()`)."
  },
  {
    "objectID": "v.html#geom_voronoi_segment",
    "href": "v.html#geom_voronoi_segment",
    "title": "24  geom_v",
    "section": "24.4 geom_voronoi_segment",
    "text": "24.4 geom_voronoi_segment\n\n24.4.1 Package\nggforce (Pedersen 2022)\n\n\n24.4.2 Description\nRepresents the borders between the regions assigned to different input points.\n\n\n24.4.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, linetype, size\n\n\n24.4.4 The statistical transformation to use on the data for this layer\nvoronoi_segment\n\n\n24.4.5 See also\ngeom_voronoi_tile, geom_delaunay_tile, geom_delaunay_segment\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\na1 &lt;- worldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  filter(Income == \"LM\" | Income == \"UM\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_segment() +\n  labs(title = \"a1: geom_voronoi_segment only\") +\n  theme(aspect.ratio = 1)\n\na2 &lt;- worldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  filter(Income == \"LM\" | Income == \"UM\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_voronoi_segment() +\n  labs(title = \"a2: geom_point and \\n geom_voronoi_segment\") +\n  theme(aspect.ratio = 1)\na1 | a2\n\n\n\n\n\n\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "v.html#geom_voronoi_tile",
    "href": "v.html#geom_voronoi_tile",
    "title": "24  geom_v",
    "section": "24.3 geom_voronoi_tile",
    "text": "24.3 geom_voronoi_tile\n\n24.3.1 Package\nggforce (Pedersen 2022)\n\n\n24.3.2 Description\nVoronoi tiles are the polygons that result from the spatial division of a plane based on the input points.\n\n\n24.3.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, linetype, size\n\n\n24.3.4 The statistical transformation to use on the data for this layer\nvoronoi_tile\n\n\n24.3.5 See also\ngeom_voronoi_segment, geom_delaunay_tile, geom_delaunay_segment\n\n\n24.3.6 Example\n\nlibrary(ggforce)\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  filter(Region == \"Middle East & North Africa\" | Region == \"Sub-Saharan Africa\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_tile(alpha=0.5, aes(fill=Region)) + \n  labs(title = \"a1: geom_voronoi_tile only\") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  theme(aspect.ratio = 1) + \n  theme(legend.position='bottom')\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  filter(Region == \"Middle East & North Africa\" | Region == \"Sub-Saharan Africa\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_tile(alpha=0.5, aes(fill=Region)) + \n  geom_point(aes(col=Region)) + \n  labs(title = \"a1: geom_voronoi_tile and  geom_point\") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  theme(aspect.ratio = 1) +\n  theme(legend.position='none')\na1|a2"
  },
  {
    "objectID": "p.html#geom_point",
    "href": "p.html#geom_point",
    "title": "18  geom_p",
    "section": "18.1 geom_point",
    "text": "18.1 geom_point\n\n18.1.1 Package\nggplot2 (Wickham 2016)\n\n\n18.1.2 Description\nVisualize observations using points\n\n\n18.1.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n18.1.4 The statistical transformation to use on the data for this layer\nstat_prefix\n\n\n18.1.5 See also\ngeom_jitter\n\n\n18.1.6 Example\n\nworldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_point() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)"
  },
  {
    "objectID": "p.html#geom_polygon",
    "href": "p.html#geom_polygon",
    "title": "18  geom_p",
    "section": "18.4 geom_polygon",
    "text": "18.4 geom_polygon\n\n18.4.1 Package\nggplot2 (Wickham 2016)\n\n\n18.4.2 Description\nCreate polygon given x and y values. This is similar to paths except that the start an end points are connected.\n\n\n18.4.3 Understandable aesthetics\nrequired aesthetics\nx,\ny\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth, subgroup\n\n\n18.4.4 The statistical transformation to use on the data for this layer\nstat_align\n\n\n18.4.5 See also\ngeom_path\n\n\n18.4.6 Example\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_polygon() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"a1: X-time dependent variable\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Electricity, y=Cooking)) + \n  geom_polygon() + ggtitle(\"a2: X-time independent variable\")\na1|a2"
  },
  {
    "objectID": "p.html#geom_polygon_pattern",
    "href": "p.html#geom_polygon_pattern",
    "title": "18  geom_p",
    "section": "18.5 geom_polygon_pattern",
    "text": "18.5 geom_polygon_pattern\n\n18.5.1 Package\nggpattern (FC, Davis, and ggplot2 authors 2023)\n\n\n18.5.2 Description\nFill polygons with pattern\n\n\n18.5.3 Understandable aesthetics\nrequired aesthetics\nx or y,\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth, subgroup, pattern_fill, pattern_fill_colour, pattern\n\n\n18.5.4 The statistical transformation to use on the data for this layer\nstat_align\n\n\n18.5.5 See also\ngeom_polygon\n\n\n18.5.6 Example\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_polygon_pattern() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"a1: X-time dependent variable\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Electricity, y=Cooking)) + \n  geom_polygon_pattern(aes(fill=Region)) + \n  ggtitle(\"a2: X-time independent variable\")\na1|a2\n\n\n\n\n\n\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern: ’Ggplot2’ Pattern Geoms.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org."
  },
  {
    "objectID": "b.html#bar_pattern",
    "href": "b.html#bar_pattern",
    "title": "4  geom_b",
    "section": "4.2 geom_bar_pattern",
    "text": "4.2 geom_bar_pattern\n\n4.2.1 Package\nggpattern (FC, Davis, and ggplot2 authors 2023)\n\n\n4.2.2 Description\nFill bars with patterns\n\n\n4.2.3 Understandable aesthetics\nrequired aesthetics\nx, y,\noptional aesthetics\npattern, pattern_angle\n\n\n4.2.4 The statistical transformation to use on the data for this layer\nstat_count - This the default statistics layer. It counts number of cases in each group.\nstat_identify - It plots the data as it is.\n\n\n4.2.5 See also\ngeom_bar\n\n4.2.5.1 With count\n\nlibrary(ggpattern)\nworldbankdata |&gt;\n  dplyr::select(c(\"Year\", \"Income\")) |&gt;\n  dplyr::filter(Year==2021) |&gt;\n  ggplot(aes(x = Income)) + \n  geom_bar_pattern()\n\n\n\n\nIllustration of geom_bar to create a bar chart"
  },
  {
    "objectID": "w.html#geom_waffle",
    "href": "w.html#geom_waffle",
    "title": "25  geom_w",
    "section": "25.1 geom_waffle",
    "text": "25.1 geom_waffle\n\n25.1.1 Package\n\n#install.packages(\"remotes\")\n#remotes::install_github(\"hrbrmstr/waffle\")\n\nwaffle (Rudis and Gandy 2023)\n\n\n25.1.2 Description\nCreate waffle plots\n\n\n25.1.3 Understandable aesthetics\nrequired aesthetics\nfill (so the geom knows which column to map the fills to)\nvalues (which column you’re mapping the filling for the squares with)\n\n\n25.1.4 The statistical transformation to use on the data for this layer\nstat_waffle\n\n\n25.1.5 See also\ngeom_bar, geom_col\n\n\n25.1.6 Example\n\nlibrary(waffle)\nworldbankdata |&gt;\n  filter(Region == \"East Asia & Pacific\" | Region == \"Europe & Central Asia\") |&gt;\n  select(Region, Income, Year) |&gt;\n  group_by(Region, Income) |&gt;\n  tally() |&gt;\n  ggplot(aes(fill=Income, values=n)) +\n  geom_waffle(color = \"white\") +\n  facet_wrap(~Region, ncol=1) +\n  scale_x_discrete(expand=c(0,0)) +\n  scale_y_discrete(expand=c(0,0)) +\n  coord_equal() \n\n\n\n\n\n\n\n\nRudis, Bob, and Dave Gandy. 2023. Waffle: Create Waffle Chart Visualizations."
  }
]