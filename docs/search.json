[
  {
    "objectID": "s.html",
    "href": "s.html",
    "title": "21  geom_s",
    "section": "",
    "text": "21.1 geom_smooth\nPackage\nggplot2 (Wickham 2016)\nDescription\nAdd a smooth curve or line to a scatter plot for visulizing trend between x and y variable.\nSee also\ngeom_point\nUnderstandable aesthetics\nThe statistical transformation to use on the data for this layer\nExample\np1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Sri Lanka\" ) |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt; \n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_point() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2000:2021)  + \n\n  ggtitle(\"geom_point_only\")\n\np2 &lt;- worldbankdata |&gt; \n  filter(Country == \"Sri Lanka\" ) |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_smooth() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2000:2021)  + \n  ggtitle(\"geom_smoth_only\")\n\np3 &lt;- worldbankdata |&gt;\n  filter(Country == \"Sri Lanka\" ) |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_point() +\n  geom_smooth() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2000:2021)  + \n  ggtitle(\"geom_point + geom_smooth: loess\")\n\np4 &lt;- worldbankdata |&gt; \n  filter(Country == \"Sri Lanka\" ) |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt; \n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2000:2021)  + \n  ggtitle(\"geom_point + geom_smooth:lm\")\n\n(p1 + p2)/(p3+p4)",
    "crumbs": [
      "S",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>geom_s</span>"
    ]
  },
  {
    "objectID": "s.html#geom_smooth",
    "href": "s.html#geom_smooth",
    "title": "21  geom_s",
    "section": "",
    "text": "Required aesthetics\n\nx, y\n\nOptional aesthetics\n\nalpha, colour, fill, group, linetype, linewidth, weight, ymax, ymin\n\n\n\n\nsmooth",
    "crumbs": [
      "S",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>geom_s</span>"
    ]
  },
  {
    "objectID": "s.html#geom_segment",
    "href": "s.html#geom_segment",
    "title": "21  geom_s",
    "section": "21.2 geom_segment",
    "text": "21.2 geom_segment\nPackage\nggplot2 (Wickham 2016)\nDescription\nAdd a straight line segment between two points.\nUnderstandable aesthetics\n\nRequired aesthetics\n\nx, y, xend or yend\n\nOptional aesthetics\n\nalpha, colour, group, linetype, linewidth\n\n\nThe statistical transformation to use on the data for this layer\n\nidentity\n\nSee Also\n\ngeom_curve(), geom_path(), geom_line(), geom_spoke()\n\nExamples\n\np1 &lt;- ggplot() + \n  geom_segment(aes(x = 3, y = 4, xend = 25, yend = 25)) +\n  theme_minimal() +\n  coord_cartesian(ylim = c(0, 30), xlim = c(0, 30)) +\n  theme_bw()+\n  ggtitle(\"geom_segment_only\")\n\n\ndata &lt;- data.frame(\n  x_start = c(1.5, 2.6, 4.1, 5.1),\n  y_start = c(1.2, 2, 2.2, 2.8),\n  x_end = c(2.5, 4, 5, 6.6),\n  y_end = c(2, 2.1, 2.8, 2.7))\n\np2 &lt;- ggplot(data) +\n  geom_segment(aes(x = x_start, y = y_start, xend = x_end, yend = y_end),\n               color = \"black\", size = 0.5, \n               arrow = arrow(type = \"closed\", length = unit(0.2, \"inches\"))) +\n  labs(x = \"X Axis\",\n       y = \"Y Axis\") +\n  ggtitle(\"geom_segment with direction\")\np1+p2\n\n\n\n\n\n\n\n\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "S",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>geom_s</span>"
    ]
  },
  {
    "objectID": "b.html",
    "href": "b.html",
    "title": "4  geom_b",
    "section": "",
    "text": "4.1 geom_bar\nPackage\nggplot2 (Wickham 2016)\nDescription\nDraw a bar proportional to the specified number. For example, number of cases or user defined number.\nUnderstandable aesthetics\nrequired aesthetics\nx, y,\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth\nSee also\ngeom_col\nExample\nExample 1: Given observations\nworldbankdata |&gt;\n  dplyr::select(c(\"Year\", \"Income\")) |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(x = Income)) +\n  geom_bar()\nExample 2\nworldbankdata |&gt;\n  dplyr::select(c(\"Year\", \"Income\", \"Region\")) |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(x = Income, fill = Region)) +\n  geom_bar() +\n  scale_fill_brewer(palette = \"Paired\", na.value = \"grey50\")\nExample 3\nworldbankdata |&gt;\n  dplyr::select(c(\"Year\", \"Income\", \"Region\")) |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(x = Income, fill = Region)) +\n  geom_bar(position = \"dodge\") +\n  scale_fill_brewer(palette = \"Paired\", na.value = \"grey50\")\nExample 4: Given counts\ndfbar &lt;- data.frame(class = c(\"A\", \"B\"), income = c(100, 200))\nggplot(dfbar, aes(class, income)) +\n  geom_bar(stat = \"identity\")",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#bar_pattern",
    "href": "b.html#bar_pattern",
    "title": "4  geom_b",
    "section": "4.2 geom_bar_pattern",
    "text": "4.2 geom_bar_pattern\nPackage\nggpattern (FC, Davis, and ggplot2 authors 2023)\nDescription\nFill bars with patterns\nUnderstandable aesthetics\nrequired aesthetics\nx, y,\noptional aesthetics\npattern, pattern_angle\nSee also\ngeom_bar\nExample\n\nlibrary(ggpattern)\nworldbankdata |&gt;\n  tidyr::drop_na() |&gt; ## Missing values should be removed to see the different patterns for different levels\n  dplyr::select(c(\"Year\", \"Income\")) |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(x = Income)) +\n  geom_bar_pattern(aes(pattern = Income, pattern_angle = Income), fill = \"white\", colour = \"black\", pattern_spacing = 0.03, pattern_key_scale_factor = 1)",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#bin2d",
    "href": "b.html#bin2d",
    "title": "4  geom_b",
    "section": "4.5 geom_bin2d",
    "text": "4.5 geom_bin2d\nPackage\nggplot2 (R-ggplot2?)\nDescription\nDivides the Cartesian plane created by x-variable and y-variable into rectangles, counts the number of observations in each rectangle. Only the observations with rectangles are filled according to the number of observations.\nUnderstandable aesthetics\nx, y, fill, group\nSee also\ngeom_bin_2d, geom_point\nExample\n\nggplot(worldbankdata, aes(y = Cooking, x = Electricity)) +\n  geom_bin2d() +\n  theme(aspect.ratio = 1) +\n  scale_fill_viridis(na.value = \"grey50\", limits = c(0, 30))",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#bin2dpattern",
    "href": "b.html#bin2dpattern",
    "title": "4  geom_b",
    "section": "4.4 geom_bin2d_pattern",
    "text": "4.4 geom_bin2d_pattern\nPackage\nggpattern(FC, Davis, and ggplot2 authors 2023)\nDescription\nDivides the Cartesian plane created by x-variable and y-variable into rectangles (2D-Histogram), counts the number of observations in each rectangle. Only the observations with rectangles are filled with a pattern.\nUnderstandable aesthetics\nRequired aesthetics\nx, y\nOptional aesthetics\npattern_fill (pattern_* - for mapping variables under aesthetics), pattern (to set a patten, for example pattern=‘stripe’), fill, colour\nSee also\ngeom_bin2d, geom_point\nExample\n\nworldbankdata |&gt;\n  drop_na() |&gt;\n  ggplot(aes(y = Cooking, x = Electricity)) +\n  geom_bin2d_pattern(aes(pattern_spacing = ..density..), fill = \"white\", colour = \"black\", bins = 20) +\n  theme(aspect.ratio = 1)",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#blank",
    "href": "b.html#blank",
    "title": "4  geom_b",
    "section": "4.6 geom_blank",
    "text": "4.6 geom_blank\nPackage\nggplot2 (R-ggplot2?)\nDescription\nDraws nothing.",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#boxplot",
    "href": "b.html#boxplot",
    "title": "4  geom_b",
    "section": "4.7 geom_boxplot",
    "text": "4.7 geom_boxplot\nPackage\nggplot2 (R-ggplot2?)\nDescription\nDraw a bar proportional to the specified number. For example, number of cases or user defined number.\nSee also\ngeom_col\nExample\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  dplyr::select(Cooking) |&gt;\n  ggplot(aes(y = Cooking, x = factor(0))) +\n  geom_boxplot() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(y = Cooking, x = Region)) +\n  geom_boxplot() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(y = Cooking, x = factor(0))) +\n  geom_boxplot(\n    outlier.colour = \"black\", outlier.shape = 16,\n    outlier.size = 2, notch = TRUE\n  ) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank()\n  )",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#bump",
    "href": "b.html#bump",
    "title": "4  geom_b",
    "section": "4.8 geom_bump",
    "text": "4.8 geom_bump\nPackage\nggbump (Sjoberg 2020)\nDescription\nCreates a smooth rank over time.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\ncolour, alpha, size\nSee also\ngeom_line\nExample\n\nlibrary(ggbump)\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Afghanistan\") |&gt;\n  ggplot(aes(x = Year, y = Electricity)) +\n  geom_bump() +\n  ggtitle(\"a1: geom_bump only\")\na2 &lt;- worldbankdata |&gt;\n  filter(Country == \"Afghanistan\") |&gt;\n  ggplot(aes(x = Year, y = Electricity)) +\n  geom_bump() +\n  geom_point() +\n  ggtitle(\"a2: geom_bump and geom_point\")\na1 | a2\n\n\n\n\n\n\n\n\n\n\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern: ’Ggplot2’ Pattern Geoms.\n\n\nSjoberg, David. 2020. Ggbump: Bump Chart and Sigmoid Curves. https://CRAN.R-project.org/package=ggbump.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "partc.html",
    "href": "partc.html",
    "title": "C",
    "section": "",
    "text": "In this part of the book we will look at the geoms starts with letter “c” or “C”.\n\n\n\n\n\ngeom\nsection\n\n\n\n\ngeom_col\n5.1\n\n\ngeom_col_pattern\n5.2\n\n\ngeom_circle\n5.3",
    "crumbs": [
      "C"
    ]
  },
  {
    "objectID": "c.html",
    "href": "c.html",
    "title": "5  geom_c",
    "section": "",
    "text": "5.1 geom_col\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate bar charts\nUnderstandable aesthetics\nRequired aesthetics\nx, y\nOptional aesthetics\nalpha, colour, fill, group, linetype, linewidth\nSee also\ngeom_bar\nExample\nworldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  group_by(Income) |&gt;\n  summarise(n = n()) |&gt;\n  ggplot(aes(x = Income, y = n)) +   geom_col()",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#col_pattern",
    "href": "c.html#col_pattern",
    "title": "5  geom_c",
    "section": "5.2 geom_col_pattern",
    "text": "5.2 geom_col_pattern\nPackage\nggpattern (FC, Davis, and ggplot2 authors 2023)\nDescription\nFill columns with a pattern. User can map a variable for pattern or set a pattern.\nUnderstandable aesthetics\nRequired aesthetics\nx, y\nOptional aesthetics\npattern, fill, colour\nSee also\ngeom_line, geom_ribbon\nExample\n\nworldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  group_by(Income) |&gt;\n  summarise(n = n()) |&gt;\n  ggplot(aes(x = Income, y = n)) +  \n  ggpattern::geom_col_pattern(aes(pattern = n, pattern_angle=n),\n    colour  = 'black', fill=\"white\")",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#count",
    "href": "c.html#count",
    "title": "5  geom_c",
    "section": "5.3 geom_count",
    "text": "5.3 geom_count\nPackage\nggplo2t (Wickham 2016)\nDescription\nCounts the observations at every point on the plot, and then maps the count with the size of the point.\nUnderstandable aesthetics\nRequired aesthetics\nx, y\nOptional aesthetics\nalpha, colour, fill, group, shape, size, stroke\nSee also\ngeom_point\nExample\nHere, both geom_point and geom_count are plotted to see the difference.\n\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_point(alpha = 0.5) + \n  labs(title = \"a1: geom_point\") +\n  theme(aspect.ratio = 1)\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_count() + \n  labs(title = \"a2: geom_count\") +\n  theme(aspect.ratio = 1)\na1 | a2",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#circle",
    "href": "c.html#circle",
    "title": "5  geom_c",
    "section": "5.4 geom_circle",
    "text": "5.4 geom_circle\nPackage\nggforce (Pedersen 2022)\nDescription\nDraw circles based on a center point and a radius.\nUnderstandable aesthetics\nrequired aesthetics\nx0 - starting coordinate of x-axis , y0 - starting coordinate of x-axis, r - radius\noptional aesthetics\ncolor, fill, linewidth, linetype, alpha, lineend\nSee also\ngeom_mark_circle\nExample\n\nworldbankdata |&gt;\n  filter(Year == 2021) |&gt;\nggplot(aes(y = Cooking, x=Electricity, col=Income)) + \n  geom_point() + \n  scale_color_brewer(palette = \"Dark2\") +\n  ggforce::geom_circle(aes(x0 = 26, y0 = 5, r = 20),\n              inherit.aes = FALSE) + \n    theme(aspect.ratio = 1)",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#contour",
    "href": "c.html#contour",
    "title": "5  geom_c",
    "section": "5.5 geom_contour",
    "text": "5.5 geom_contour\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate contour plots.\nUnderstandable aesthetics\nRequired aesthetics\nx, y\nOptional aesthetics\nalpha, colour, fill , group, linetype, linewidth, subgroup\nSee also\ngeom_contour_filled, geom_tile, geom_density_2d\nExample\n\nmean &lt;- c(0.5, -0.5)\nsigma &lt;- matrix(c(1, 0.5, 0.5, 1), nrow=2)\ndata.grid &lt;- expand.grid(x=seq(-3, 3, length.out=200),\n                         y=seq(-3, 3, length.out=200))\ndf &lt;- cbind(data.grid, prob = mvtnorm::dmvnorm(data.grid, mean=mean, sigma=sigma))\nggplot(df, aes(x=x, y=y, z=prob)) + \n  geom_contour() + \n  theme(aspect.ratio = 1)",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#contour_filled",
    "href": "c.html#contour_filled",
    "title": "5  geom_c",
    "section": "5.6 geom_contour_filled",
    "text": "5.6 geom_contour_filled\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate contour plots\nUnderstandable aesthetics\nx, y, alpha, colour, linetype, linewidth, group, weight\nSee also\ngeom_contour, geom_tile, geom_density_2d\nExample\n\nmean &lt;- c(0.5, -0.5)\nsigma &lt;- matrix(c(1, 0.5, 0.5, 1), nrow=2)\ndata.grid &lt;- expand.grid(x=seq(-3, 3, length.out=200),\n                         y=seq(-3, 3, length.out=200))\ndf &lt;- cbind(data.grid, prob = mvtnorm::dmvnorm(data.grid, mean=mean, sigma=sigma))\nggplot(df, aes(x=x, y=y, z=prob)) + \n  geom_contour_filled() + \n  theme(aspect.ratio = 1)",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#curve",
    "href": "c.html#curve",
    "title": "5  geom_c",
    "section": "5.7 geom_curve",
    "text": "5.7 geom_curve\nPackage\nggplot2 (Wickham 2016)\nDescription\ngeom_segment() draws a straight line between between two points. geom_curve draws a curved line.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nalpha, colour, linetype, linewidth, group\nThe statistical transformation to use on the data for this layer\nidentity\nSee also\ngeom_segment\nExamples\n\ndf &lt;- data.frame(x1 = 0, x2 = 100, y1 = 0, y2 = 100)\nggplot(df) + \n  geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2))\n\n\n\n\n\n\n\n\n\ndf &lt;- data.frame(x2 = c( 3, 4, 4, 3, -3, -4, -4, -3),\n                 y2 = c( 4, 3, -3, -4, -4, -3, 3, 3),\n                 x1 = rep(0, 8),\n                 y1 = rep(0, 8))\n\nggplot(df) + \n  geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2),\n             curvature = 0.75, angle = -45,\n             arrow = arrow(length = unit(0.25,\"cm\"))) + \n  coord_equal() +\n  xlim(-5, 5) + ylim(-5, 5)",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#crossbar",
    "href": "c.html#crossbar",
    "title": "5  geom_c",
    "section": "5.8 geom_crossbar",
    "text": "5.8 geom_crossbar\nPackage\nggplot2 (Wickham 2016)\nDescription\nPlot a vertical interval defined by y, ymin and ymax or x, xmin and xmax.\nUnderstandable aesthetics\nrequired aesthetics\nx or y\nxmin or ymin\nxmax or ymax\noptional aesthetics\nalpha, colour, linetype, linewidth, group\nSee also\ngeom_segment\nExamples\nExample 1\n\nsummarydf &lt;- worldbankdata |&gt;\n  drop_na() |&gt;\n  select(Electricity, Income) |&gt;\n  group_by(Income) |&gt;\n  reframe(qs = quantile(Electricity, c(0.25, 0.5 ,0.75))) |&gt;\n  mutate(q=rep(c(\"Q1\", \"Q2\", \"Q3\"), 4)) |&gt;\n  pivot_wider(names_from = q,\n              values_from = qs)\nsummarydf\n\n# A tibble: 4 × 4\n  Income    Q1    Q2    Q3\n  &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 L       16.6  32.2  50.7\n2 LM      62.0  86.7  97.7\n3 UM      95.9  99.5 100. \n4 H      100   100   100  \n\nggplot(summarydf, aes(x=Income, ymin = Q1, y=Q2, ymax = Q3)) + \n  geom_crossbar(size=1,col=\"red\", width = .5)\n\n\n\n\n\n\n\n\nExample 2\n\nsummary_stats &lt;- worldbankdata |&gt;\n  drop_na() |&gt;\n  select(Electricity, Income) |&gt;\n  group_by(Income) |&gt;\n  reframe(mean = mean(Electricity),\n          sd = sd(Electricity)) \nggplot(summary_stats, aes(x = Income, y = mean, ymin = mean - sd, ymax = mean + sd)) +\n  geom_crossbar(width = 0.5, fatten = 2) \n\n\n\n\n\n\n\n\n\n\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern: ’Ggplot2’ Pattern Geoms.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "d.html",
    "href": "d.html",
    "title": "6  geom_d",
    "section": "",
    "text": "6.1 geom_density\nPackage\nggplot2 (Wickham 2016)\nDescription\nComputes and draws kernel density estimation.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth, weight\nSee also\ngeom_histogram\nExample\nworldbankdata |&gt;\n  ggplot(aes(x = Electricity)) +   geom_density()",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#density_line",
    "href": "d.html#density_line",
    "title": "6  geom_d",
    "section": "6.2 geom_density_line",
    "text": "6.2 geom_density_line\nPackage\nggridges (Wilke 2023)\nDescription\nDraws a density plot same as geom_density. The difference is that the geom draws a ridgeline (line with filled area underneath).\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth, weight\nSee also\ngeom_density\nExample\n\nlibrary(ggridges)\nworldbankdata |&gt;\n  ggplot(aes(x = Electricity)) +   \n  geom_density_line()",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#density_2d",
    "href": "d.html#density_2d",
    "title": "6  geom_d",
    "section": "6.3 geom_density_2d",
    "text": "6.3 geom_density_2d\nPackage\nggplot2 (Wickham 2016)\nDescription\nComputes a 2D kernel density estimation using MASS::kde2d() and display the results with contours.\nUnderstandable aesthetics\nstat_density\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_histofram\nExample\n\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_density_2d() +\n  xlim(0, 100) +\n  ylim(0, 100) +\n  theme(aspect.ratio = 1) + \n  labs(title = \"a1: geom_density_2d only\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_point() +\n  geom_density_2d() +\n  theme(aspect.ratio = 1) + \n  labs(title = \"a2: geom_point and \\n geom_density_2d\") \n  \na1|a2",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#density_2d_filled",
    "href": "d.html#density_2d_filled",
    "title": "6  geom_d",
    "section": "6.4 geom_density_2d_filled",
    "text": "6.4 geom_density_2d_filled\nPackage\nggplot2 (Wickham 2016)\nDescription\nComputes a 2D kernel density estimation using MASS::kde2d() and display the results with filled contour bands.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth, subgroup\nSee also\ngeom_histogram\nExample\n\na1 &lt;- worldbankdata |&gt;\n  filter(Year == \"2021\") |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_density_2d_filled() + \n  labs(title = \"a1: geom_density_2d_filled only\") + \n  theme( aspect.ratio = 1)\na2 &lt;- worldbankdata |&gt;\n  filter(Year == \"2020\") |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_density_2d_filled(alpha = 0.5) + \n    geom_point() + \n  labs(title = \"a2: geom_point and \\n geom_density_2d_filled\") + \n  theme( aspect.ratio = 1)\na3 &lt;- worldbankdata |&gt;\n  filter(Year == \"2020\") |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_point(alpha=0.5) + \n  labs(title = \"a3: geom_point\") + \n  theme(aspect.ratio = 1)\na1 / a2 / a3",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#density_ridges",
    "href": "d.html#density_ridges",
    "title": "6  geom_d",
    "section": "6.5 geom_density_ridges",
    "text": "6.5 geom_density_ridges\nPackage\nggridges (Wilke 2023)\nDescription\nArranges multiple density plots in a staggered fashion.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\ncolour, fill, group, height, alpha, linetype, linewidth, scale, rel_min_height\nSee also\ngeom_density_ridges_gradient\nExample\n\nlibrary(ggridges)\n worldbankdata |&gt;\n  ggplot(aes(y = Income, x=Electricity)) +   \n  geom_density_ridges()",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#density_ridges_gradient",
    "href": "d.html#density_ridges_gradient",
    "title": "6  geom_d",
    "section": "6.6 geom_density_ridges_gradient",
    "text": "6.6 geom_density_ridges_gradient\nPackage\nggridges (Wilke 2023)\nDescription\nArranges multiple density plots in a staggered fashion.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\ncolour, fill, group, height, alpha, linetype, linewidth, scale, rel_min_height\nSee also\ngeom_density_ridges\nExample\n\nlibrary(ggridges)\n worldbankdata |&gt;\n  ggplot(aes(y = Income, x=Electricity, fill=stat(x))) +   \n  geom_density_ridges_gradient() +\n  scale_fill_viridis_c()",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#dl",
    "href": "d.html#dl",
    "title": "6  geom_d",
    "section": "6.7 geom_dl",
    "text": "6.7 geom_dl\nPackage\ndirectlabels (Hocking 2023)\nDescription\nDisplay direct labels on the plot.\nUnderstandable aesthetics\nlayer\nSee also\ngeom_text\nExample\n\nlibrary(directlabels)\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) +   \n  geom_point(aes(col=Income)) +\n  theme(aspect.ratio = 1) +\n  scale_color_brewer(palette = \"Set1\")\na1 +\n  geom_dl(aes(label=Income), method=\"smart.grid\")+\n  scale_shape_manual(values=c(H = 1, \n                              UM = 6,\n                              L = 3,\n                              LM = 2),\n                     guide=\"none\")",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#dotplot",
    "href": "d.html#dotplot",
    "title": "6  geom_d",
    "section": "6.8 geom_dotplot",
    "text": "6.8 geom_dotplot\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate dotplot.\n\n6.8.1 Understandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, fill , group, linetype, stroke\nSee also\ngeom_histogram\nExample\n\nworldbankdata |&gt;\n  ggplot(aes(x=Cooking)) +   \n  geom_dotplot(binwidth = 1) + \n  theme(legend.position=\"none\", aspect.ratio = 1)",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#delaunay_tile",
    "href": "d.html#delaunay_tile",
    "title": "6  geom_d",
    "section": "6.9 geom_delaunay_tile",
    "text": "6.9 geom_delaunay_tile\nPackage\nggforce (Pedersen 2022)\nDescription\nDisplay voronoi tesselation and delaunay triangulation.\nUnderstandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, fill , linetype, size\nSee also\ngeom_delaunay_segment\nExample\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_delaunay_tile(alpha=0.5) + \n  labs(title = \"a1: geom_delaunay_tile only\") +\n  theme(aspect.ratio = 1)\n\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_delaunay_tile(alpha=0.5) + \n  labs(title = \"a2: geom_point and \\n geom_delaunay_tile\") +\n  theme(aspect.ratio = 1)\na1 | a2",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#delaunay_segment",
    "href": "d.html#delaunay_segment",
    "title": "6  geom_d",
    "section": "6.10 geom_delaunay_segment",
    "text": "6.10 geom_delaunay_segment\nPackage\nggforce (Pedersen 2022)\nDescription\nDisplay voronoi tesselation and delaunay triangulation.\nUnderstandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, fill , linetype, size\nSee also\ngeom_delaunay_tile\nExample\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\n\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_delaunay_segment() + \n  theme(aspect.ratio = 1) +\n  labs(title = \"a1: geom_delaunay_segment only\") \n\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_delaunay_segment() + \n  theme(aspect.ratio = 1) +\n  labs(title = \"a2: geom_point and \\n geom_delaunay_segment\") \n\na1 | a2",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#delaunay_segment2",
    "href": "d.html#delaunay_segment2",
    "title": "6  geom_d",
    "section": "6.11 geom_delaunay_segment2",
    "text": "6.11 geom_delaunay_segment2\nPackage\nggforce (Pedersen 2022)\nDescription\nDisplay voronoi tesselation and delaunay triangulation.\nUnderstandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, fill , linetype, size\nSee also\ngeom_delaunay_tile\nExample\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\n\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_delaunay_segment2() + \n  theme(aspect.ratio = 1) +\n  labs(title = \"a1: geom_delaunay_segment2 only\") \n\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_delaunay_segment2() + \n  theme(aspect.ratio = 1) +\n  labs(title = \"a2: geom_point and \\n geom_delaunay_segment2\") \n\na1 | a2",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "d.html#geom_dumbbell",
    "href": "d.html#geom_dumbbell",
    "title": "6  geom_d",
    "section": "6.12 geom_dumbbell",
    "text": "6.12 geom_dumbbell\nPackage\nggalt(Rudis, Bolker, and Schulz 2017)\nDescription\nCreate dumbbell charts.\nUnderstandable aesthetics\nrequired aesthetics\nx, y, xend, yend\noptional aesthetics\nalpha, colour, group, linetype, size\nSee also\ngeom_segment\nExample\n\nlibrary(ggalt)\ndf &lt;- worldbankdata |&gt;\n  group_by(Income) |&gt;\n  summarise(min = min(Electricity, na.rm=TRUE), max = max(Electricity, na.rm=TRUE))\ndf\n\n# A tibble: 5 × 3\n  Income   min   max\n  &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 L       2.11  99.8\n2 LM      3.81 100  \n3 UM     26.5  100  \n4 H      65.9  100  \n5 &lt;NA&gt;   17.8  100  \n\nggplot(df, aes(y=Income, x=min, xend=max)) +\n  xlab(\"Electricity Range\") + \n  geom_dumbbell(color = \"darkgray\",  # Color of the line between min and max\n                size = 3,            # Line width\n                dot_guide = FALSE,   # Whether to add a guide from origin to X or not\n                size_x = 3,          # Size of the X point\n                size_xend = 3,       # Size of the X end point\n                colour_x = \"#762a83\",    # Color of the X point\n                colour_xend = \"#1b7837\")   # Color of the X end point \n\n\n\n\n\n\n\n\n\n\n\n\nHocking, Toby Dylan. 2023. Directlabels: Direct Labels for Multicolor Plots. https://CRAN.R-project.org/package=directlabels.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nRudis, Bob, Ben Bolker, and Jan Schulz. 2017. Ggalt: Extra Coordinate Systems, ’Geoms’, Statistical Transformations, Scales and Fonts for ’Ggplot2’. https://CRAN.R-project.org/package=ggalt.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nWilke, Claus O. 2023. Ggridges: Ridgeline Plots in ’Ggplot2’. https://CRAN.R-project.org/package=ggridges.",
    "crumbs": [
      "D",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>geom_d</span>"
    ]
  },
  {
    "objectID": "e.html",
    "href": "e.html",
    "title": "7  geom_e",
    "section": "",
    "text": "7.1 geom_errorbar",
    "crumbs": [
      "E",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>geom_e</span>"
    ]
  },
  {
    "objectID": "e.html#errorbar",
    "href": "e.html#errorbar",
    "title": "7  geom_e",
    "section": "",
    "text": "7.1.1 Package\nggplot2 (Wickham 2016)\n\n\n7.1.2 Description\nDraws a vertical interval defined by x, ymin and ymax.\n\n\n7.1.3 Understandable aesthetics\nrequired aesthetics\nx or y\nymin or xmin (y/x coordinate of the lower whisker)\nymax or xmax (y/x coordinate of the upper whisker)\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n7.1.4 The statistical transformation to use on the data for this layer\nstat_identity\n\n\n7.1.5 See also\ngeom_crossbar, geom_dumbbell\n\n\n7.1.6 Example\n\ndf &lt;- worldbankdata |&gt;\n  group_by(Income) |&gt;\n  summarise(min = min(Electricity, na.rm=TRUE), max = max(Electricity, na.rm=TRUE), mean = mean(Electricity, na.rm=TRUE))\ndf\n\n# A tibble: 5 × 4\n  Income   min   max  mean\n  &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 L       2.11  99.8  37.0\n2 LM      3.81 100    78.8\n3 UM     26.5  100    95.1\n4 H      65.9  100    99.9\n5 &lt;NA&gt;   17.8  100    89.7\n\na1 &lt;- ggplot(data=df, aes(x=Income, ymin=min, ymax=max)) + \ngeom_errorbar(width=0.2, size=1, color=\"#d95f02\") + \n  labs(title = \"a1: geom_errorbar only\")\n\na2 &lt;- ggplot(data=df, aes(x=Income, ymin=min, ymax=max)) + \n  geom_errorbar(width=0.2, size=1, color=\"#d95f02\") + \n  geom_point(data=df, mapping=aes(x=Income, y=mean), size=4, shape=21, fill=\"#1b9e77\") +\n  labs(title = \"a2: geom_errorbar and geom_point\")\na1|a2",
    "crumbs": [
      "E",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>geom_e</span>"
    ]
  },
  {
    "objectID": "e.html#geom_errorbarh",
    "href": "e.html#geom_errorbarh",
    "title": "7  geom_e",
    "section": "7.2 geom_errorbarh",
    "text": "7.2 geom_errorbarh\n\n7.2.1 Package\nggplot2 (Wickham 2016)\n\n\n7.2.2 Description\nDraws horizontal error bars, defined by an upper and lower value.\n\n\n7.2.3 Understandable aesthetics\nrequired aesthetics\nx or y\nymin or xmin (y/x coordinate of the lower whisker)\nymax or xmax (y/x coordinate of the upper whisker)\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n7.2.4 The statistical transformation to use on the data for this layer\nstat_identity\n\n\n7.2.5 See also\ngeom_crossbar, geom_dumbbell\n\n\n7.2.6 Example\n\ndf &lt;- worldbankdata |&gt;\n  group_by(Income) |&gt;\n  summarise(min = min(Electricity, na.rm=TRUE), max = max(Electricity, na.rm=TRUE), mean = mean(Electricity, na.rm=TRUE))\ndf\n\n# A tibble: 5 × 4\n  Income   min   max  mean\n  &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 L       2.11  99.8  37.0\n2 LM      3.81 100    78.8\n3 UM     26.5  100    95.1\n4 H      65.9  100    99.9\n5 &lt;NA&gt;   17.8  100    89.7\n\na1 &lt;- ggplot(data=df, aes(y=Income, x=max, xmin=min, xmax=max)) + \ngeom_errorbarh(width=0.2, size=1, color=\"#d95f02\") + \n  labs(title = \"a1: geom_errorbarh only\")\na2 &lt;- ggplot(data=df, aes(y=Income, x=max, xmin=min, xmax=max)) + \n  geom_errorbarh(width=0.2, size=1, color=\"#d95f02\") + \n  geom_point(data=df, mapping=aes(y=Income, x=mean), size=4, shape=21, fill=\"#1b9e77\") +\n  labs(title = \"a2: geom_errorbarh and geom_point\")\na1|a2",
    "crumbs": [
      "E",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>geom_e</span>"
    ]
  },
  {
    "objectID": "e.html#encircle",
    "href": "e.html#encircle",
    "title": "7  geom_e",
    "section": "7.3 geom_encircle",
    "text": "7.3 geom_encircle\n\n7.3.1 Package\nggalt (Rudis, Bolker, and Schulz 2017)\n\n\n7.3.2 Description\nDraws a polygon enclosing all the points.\n\n\n7.3.3 Understandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, group, linetype, linewidth, s_shape, expand\n\n\n7.3.4 The statistical transformation to use on the data for this layer\nstat_identity\n\n\n7.3.5 See also\ngeom_circle\n\n\n7.3.6 Example\n\nlibrary(ggalt)\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\nggplot(aes(y = Cooking, x=Electricity)) + \n  geom_point() + \n  geom_encircle() + \n  theme(aspect.ratio = 1) + \n  labs(title = \"a1: with default setting\")\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\nggplot(aes(y = Cooking, x=Electricity)) + \n  geom_point() + \n  geom_encircle(s_shape=0.2, expand=0.01,fill=\"Red\",alpha=0.4) + \n  theme(aspect.ratio = 1) + labs(title = \"a2: without default settings\")\na1|a2",
    "crumbs": [
      "E",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>geom_e</span>"
    ]
  },
  {
    "objectID": "e.html#geom_emoji",
    "href": "e.html#geom_emoji",
    "title": "7  geom_e",
    "section": "7.4 geom_emoji",
    "text": "7.4 geom_emoji\n\n7.4.1 Package\nemoGG (Miller 2023)\nInstallation\ninstall.packages(\"remotes\")\nremotes::install_github(\"dill/emoGG\")\n\n\n7.4.2 Description\nPlot emojis on the plot instead of points\n\n\n7.4.3 Understandable aesthetics\nemoji\n\n\n7.4.4 The statistical transformation to use on the data for this layer\nstat_identity\n\n\n7.4.5 See also\ngeom_point\n\n\n7.4.6 Example\n\nlibrary(emoGG)\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\nggplot(aes(y=Cooking, x=Electricity)) +\n  geom_emoji(emoji = \"1f600\") + \n   theme(aspect.ratio = 1) + labs(\"a1: using emoji\")\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\nggplot(aes(y=Cooking, x=Electricity)) +\n  geom_point() + \n   theme(aspect.ratio = 1) + labs(\"a2: using points\")\na1|a2\n\n\n\n\n\n\n\n\n\n\n\n\nMiller, David L. 2023. emoGG: Use Emoji in Ggplot2.\n\n\nRudis, Bob, Ben Bolker, and Jan Schulz. 2017. Ggalt: Extra Coordinate Systems, ’Geoms’, Statistical Transformations, Scales and Fonts for ’Ggplot2’. https://CRAN.R-project.org/package=ggalt.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "E",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>geom_e</span>"
    ]
  },
  {
    "objectID": "f.html",
    "href": "f.html",
    "title": "8  geom_f",
    "section": "",
    "text": "8.1 geom_function",
    "crumbs": [
      "F",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>geom_f</span>"
    ]
  },
  {
    "objectID": "f.html#function",
    "href": "f.html#function",
    "title": "8  geom_f",
    "section": "",
    "text": "8.1.1 Package\nggplot2 (Wickham 2016)\n\n\n8.1.2 Description\nComputes and draws a function as a continuous curve.\n\n\n8.1.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n8.1.4 The statistical transformation to use on the data for this layer\nstat_prefix\n\n\n8.1.5 See also\ngeom_density\n\n\n8.1.6 Example\n\nggplot() + \n  geom_function(fun = ~ 0.5*exp(-abs(.x)))",
    "crumbs": [
      "F",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>geom_f</span>"
    ]
  },
  {
    "objectID": "f.html#freqpoly",
    "href": "f.html#freqpoly",
    "title": "8  geom_f",
    "section": "8.2 geom_freqpoly",
    "text": "8.2 geom_freqpoly\n\n8.2.1 Package\nggplot2 (Wickham 2016)\n\n\n8.2.2 Description\nVisualise the spread of a single continuous variable by partitioning the x-axis into bins and mapping the frequency of observations within each bin.\n\n\n8.2.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n\n\n8.2.4 The statistical transformation to use on the data for this layer\nstat_bin for a continuous x variable\nstat_count for a discrete x variable\n\n\n8.2.5 See also\ngeom_density\n\n\n8.2.6 Example\n\nworldbankdata |&gt;\n  ggplot(aes(x=Electricity, col=Income)) + \n  geom_freqpoly()",
    "crumbs": [
      "F",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>geom_f</span>"
    ]
  },
  {
    "objectID": "f.html#geom_flag",
    "href": "f.html#geom_flag",
    "title": "8  geom_f",
    "section": "8.3 geom_flag",
    "text": "8.3 geom_flag\n\nlibrary(ggimage)\nworldbankdata.flag &lt;- worldbankdata |&gt;\n  filter(Country %in% c(\"France\", \"Sweden\", \"Norway\", \"Germany\", \"Switzerland\")) |&gt;\n  filter(Year == 2000) \nworldbankdata.flag$code.flag &lt;- c(\"FR\", \"SE\", \"NO\", \"DE\", \"CH\")\nworldbankdata.flag |&gt;\nggplot(aes(y = Country, x= Electricity)) + \n  geom_col(stat = 'identity') + \n  geom_flag(y = -2, aes(image = code.flag)) +\n  coord_flip() \n\n\n\n\n\n\n\n\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "F",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>geom_f</span>"
    ]
  },
  {
    "objectID": "g.html",
    "href": "g.html",
    "title": "9  geom_g",
    "section": "",
    "text": "9.1 geom_g\nNot available",
    "crumbs": [
      "G",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>geom_g</span>"
    ]
  },
  {
    "objectID": "h.html",
    "href": "h.html",
    "title": "10  geom_h",
    "section": "",
    "text": "10.1 geom_hline\nPackage\nggplot2 (Wickham 2016)\nDescription\nDraw a horizontal line (\\(Y=c\\)) for a given value of \\(c\\), which is known as yintercept.\nUnderstandable aesthetics\nUnlike most other geoms, geom_hline does not depend on the x and y variables that we map for the main plot. geom_hline has its own independent characteristics: yintercept. The yintercept can be passed either as a arguments or aesthetic.\nSee also\ngeom_point, geom_vline, geom_hline\nExample\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x= Electricity)) + geom_hline(yintercept = 50) + \n  labs(title=\"a1: `geom_hline` only\") +\n  theme(aspect.ratio = 1)\n\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_point() + \n  geom_hline(yintercept = 50) + \n  labs(title=\"a2: `geom_point +\\n geom_hline` both\") +\n  theme(aspect.ratio = 1)\na1 | a2\n\n\n\n\nIllustration of (A) geom_hline and (B) use of geom_point and geom_hline both",
    "crumbs": [
      "H",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>geom_h</span>"
    ]
  },
  {
    "objectID": "h.html#histogram",
    "href": "h.html#histogram",
    "title": "10  geom_h",
    "section": "10.2 geom_histogram",
    "text": "10.2 geom_histogram\nPackage\nggplot2 (Wickham 2016)\nDescription\nVisualise data using histogram.\nUnderstandable aesthetics\nUnlike most other geoms, geom_hline does not depend on the x and y variables that we map for the main plot. geom_hline has its own independent characteristics: yintercept. The yintercept can be passed either as a arguments or aesthetic.\nSee also\ngeom_density, geom_density_line, geom_freqpoly\nExample\n\nworldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\n  ggplot(aes(x = Electricity)) +   \n  geom_histogram(col=\"white\")",
    "crumbs": [
      "H",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>geom_h</span>"
    ]
  },
  {
    "objectID": "h.html#histogram_pattern",
    "href": "h.html#histogram_pattern",
    "title": "10  geom_h",
    "section": "10.3 geom_histogram_pattern",
    "text": "10.3 geom_histogram_pattern\nPackage\nggplot2 (Wickham 2016)\nDescription\nVisualize numeric data using histogram and filled with patterns.\nUnderstandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_histogram, geom_density, geom_density_line\n\n10.3.1 Example\n\nworldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\n  ggplot(aes(x = Electricity)) +   \n  geom_histogram_pattern( pattern_color = \"white\",\n                   pattern_fill = \"black\")",
    "crumbs": [
      "H",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>geom_h</span>"
    ]
  },
  {
    "objectID": "h.html#geom_hdr_boxplot",
    "href": "h.html#geom_hdr_boxplot",
    "title": "10  geom_h",
    "section": "10.4 geom_hdr_boxplot",
    "text": "10.4 geom_hdr_boxplot\nPackage\ngghdr (gghdr?)\nDescription\nCalculates and plots the box plot of highest density regions.\nUnderstandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour\nSee also\ngeom_boxplot, geom_histogram, geom_density, geom_density_line\nExample\n\nlibrary(gghdr)\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  dplyr::select(Cooking) |&gt;\nggplot(aes(y = Cooking, x=factor(0))) + \n  geom_hdr_boxplot(fill = \"#081d58\")",
    "crumbs": [
      "H",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>geom_h</span>"
    ]
  },
  {
    "objectID": "h.html#hex",
    "href": "h.html#hex",
    "title": "10  geom_h",
    "section": "10.5 geom_hex",
    "text": "10.5 geom_hex\nPackage\ngghdr (gghdr?)\nDescription\nCalculates and plots the box plot of highest density regions.\nUnderstandable aesthetics\nrequired aesthetics\nx or y\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth\nSee also\ngeom_boxplot, geom_histogram, geom_density, geom_density_line\nExample\n\nlibrary(hexbin)\nlibrary(viridis)\nworldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\n  ggplot(aes(y = Cooking, x=Electricity)) + \n  geom_hex() + \n  scale_fill_viridis()",
    "crumbs": [
      "H",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>geom_h</span>"
    ]
  },
  {
    "objectID": "h.html#heat_grid",
    "href": "h.html#heat_grid",
    "title": "10  geom_h",
    "section": "10.6 geom_heat_grid",
    "text": "10.6 geom_heat_grid\nPackage\nggDoubleHeat (Yu and Buskirk 2023)\nDescription\nVisualize two quantitative variables of information inside a heatmap cell using a grid.\nUnderstandable aesthetics\nrequired aesthetics\nx, y, outside, inside\nOptional aesthetics\noutside_colors, outside_name, inside_colors, inside_name\nSee also\ngeom_heat_circle, geom_heat_tri\nExample\n\nlibrary(ggDoubleHeat)\nworldbankdata[254:263, ] |&gt;\n  ggplot(aes(y = Year, x=Income)) + \n  geom_heat_grid(outside = Electricity,\n           inside = Cooking)",
    "crumbs": [
      "H",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>geom_h</span>"
    ]
  },
  {
    "objectID": "h.html#heat_tri",
    "href": "h.html#heat_tri",
    "title": "10  geom_h",
    "section": "10.7 geom_heat_tri",
    "text": "10.7 geom_heat_tri\nPackage\nggDoubleHeat (Yu and Buskirk 2023)\nDescription\nVisualize two quantitative variables of information inside a heatmap cell using triangles.\nUnderstandable aesthetics\nrequired aesthetics\nx, y, lower, upper\nOptional aesthetics\nlower_colors, lower_name, upper_colors, upper_name\nSee also\ngeom_heat_grid, geom_heat_tri\nExample\n\nlibrary(ggDoubleHeat)\nworldbankdata[254:263, ] |&gt;\n  ggplot(aes(y = Year, x=Income)) + \n  geom_heat_tri(lower = Electricity,\n           upper = Cooking)",
    "crumbs": [
      "H",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>geom_h</span>"
    ]
  },
  {
    "objectID": "h.html#heat_circle",
    "href": "h.html#heat_circle",
    "title": "10  geom_h",
    "section": "10.8 geom_heat_circle",
    "text": "10.8 geom_heat_circle\nPackage\nggDoubleHeat (Yu and Buskirk 2023)\nDescription\nVisualize two quantitative variables of information inside a heatmap cell using triangles.\nUnderstandable aesthetics\nrequired aesthetics\nx, y, outside, inside\nOptional aesthetics\noutside_colors, outside_name, inside_colors, inside_name\nSee also\ngeom_heat_grid, geom_heat_tri\nExample\n\nlibrary(ggDoubleHeat)\nworldbankdata[254:263, ] |&gt;\n  ggplot(aes(y = Year, x=Income)) + \n  geom_heat_circle(outside = Electricity,\n           inside = Cooking)",
    "crumbs": [
      "H",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>geom_h</span>"
    ]
  },
  {
    "objectID": "h.html#hline",
    "href": "h.html#hline",
    "title": "10  geom_h",
    "section": "10.9 geom_hline",
    "text": "10.9 geom_hline\nPackage\nggplot2 (Wickham 2016)\nDescription\nDraw a horizontal line given intercept.\nUnderstandable aesthetics\nUnlike most other geoms, geom_hline does not depend on the x and y variables that we map for the main plot.\nSee also\ngeom_point, geom_vline, geom_abline\nExample\n\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_hline(yintercept = 50) + \n  labs(title=\"a1: geom_abline only\") +\n  theme(aspect.ratio = 1)\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_hline(yintercept = 50) + \n  geom_point() + \n  labs(title = \"a2: geom_hline \\n and geom_point\") +\n  theme(aspect.ratio = 1)\na1 | a2\n\n\n\n\n\n\n\n\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nYu, Youzhi, and Trent Buskirk. 2023. ggDoubleHeat: A Heatmap-Like Visualization Tool. https://CRAN.R-project.org/package=ggDoubleHeat.",
    "crumbs": [
      "H",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>geom_h</span>"
    ]
  },
  {
    "objectID": "o.html",
    "href": "o.html",
    "title": "17  geom_a",
    "section": "",
    "text": "17.1 geom_abline",
    "crumbs": [
      "O",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>geom_a</span>"
    ]
  },
  {
    "objectID": "p.html",
    "href": "p.html",
    "title": "18  geom_p",
    "section": "",
    "text": "18.1 geom_point",
    "crumbs": [
      "P",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>geom_p</span>"
    ]
  },
  {
    "objectID": "p.html#geom_point",
    "href": "p.html#geom_point",
    "title": "18  geom_p",
    "section": "",
    "text": "18.1.1 Package\nggplot2 (Wickham 2016)\n\n\n18.1.2 Description\nVisualize observations using points\n\n\n18.1.3 Understandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\n**See also88\ngeom_jitter\n**Example88\n\nworldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_point() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)",
    "crumbs": [
      "P",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>geom_p</span>"
    ]
  },
  {
    "objectID": "p.html#geom_path",
    "href": "p.html#geom_path",
    "title": "18  geom_p",
    "section": "18.2 geom_path",
    "text": "18.2 geom_path\nPackage\nggplot2 (Wickham 2016)\nDescription\nConnects the observations in the order in which they appear in the dataset.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_line\n\n18.2.1 Example\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_path() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"a1: X-time dependent variable\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Electricity, y=Cooking)) + \n  geom_path() + ggtitle(\"a2: X-time independent variable\")\na1|a2",
    "crumbs": [
      "P",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>geom_p</span>"
    ]
  },
  {
    "objectID": "p.html#geom_pointrange",
    "href": "p.html#geom_pointrange",
    "title": "18  geom_p",
    "section": "18.3 geom_pointrange",
    "text": "18.3 geom_pointrange\nPackage\nggplot2 (Wickham 2016)\nDescription\nRepresenting a vertical interval defined by ymin, ymax and point represent by y for different levels of x.\nUnderstandable aesthetics\nrequired aesthetics\nx or y,\nymin or xmin,\nymax or xmax\noptional aesthetics\nalpha, colour, group, linetype, linewidth\nSee also\ngeom_line, geom_crossbar, geom_errorbar, geom_linerange\nExample\nMethod 1\n\nworldbankdata |&gt;\n  group_by(Region) |&gt;\n  summarise(min = min(Cooking, na.rm = TRUE), max=max(Cooking, \n                                                      na.rm = TRUE),\n            median = median(Cooking, na.rm=TRUE)) |&gt;\n  ggplot(aes(x = Region, y = median, ymin = min, ymax = max)) +\n  geom_pointrange() + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\nMethod 2\n\nggplot(data = worldbankdata) +\n  geom_pointrange(\n    mapping = aes(x = Region, y = Cooking),\n    stat = \"summary\",\n    fun.min = min,\n    fun.max = max,\n    fun = median\n  ) + \n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\nWarning: Removed 6047 rows containing non-finite outside the scale range\n(`stat_summary()`).",
    "crumbs": [
      "P",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>geom_p</span>"
    ]
  },
  {
    "objectID": "p.html#geom_polygon",
    "href": "p.html#geom_polygon",
    "title": "18  geom_p",
    "section": "18.4 geom_polygon",
    "text": "18.4 geom_polygon\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate polygon given x and y values. This is similar to paths except that the start an end points are connected.\nUnderstandable aesthetics\nrequired aesthetics\nx,\ny\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth, subgroup\nSee also\ngeom_path\nExample\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_polygon() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"a1: X-time dependent variable\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Electricity, y=Cooking)) + \n  geom_polygon() + ggtitle(\"a2: X-time independent variable\")\na1|a2",
    "crumbs": [
      "P",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>geom_p</span>"
    ]
  },
  {
    "objectID": "p.html#geom_polygon_pattern",
    "href": "p.html#geom_polygon_pattern",
    "title": "18  geom_p",
    "section": "18.5 geom_polygon_pattern",
    "text": "18.5 geom_polygon_pattern\nPackage\nggpattern (FC, Davis, and ggplot2 authors 2023)\nDescription\nFill polygons with pattern\nUnderstandable aesthetics\nrequired aesthetics\nx or y,\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth, subgroup, pattern_fill, pattern_fill_colour, pattern\nSee also\ngeom_polygon\nExample\n\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt; \n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x=Year, y=Electricity)) + \n  geom_polygon_pattern() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + \n  scale_x_continuous(breaks = 2013:2021)  + \n  ggtitle(\"a1: X-time dependent variable\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x=Electricity, y=Cooking)) + \n  geom_polygon_pattern(aes(fill=Region)) + \n  ggtitle(\"a2: X-time independent variable\")\na1|a2\n\n\n\n\n\n\n\n\n\n\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern: ’Ggplot2’ Pattern Geoms.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "P",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>geom_p</span>"
    ]
  },
  {
    "objectID": "q.html",
    "href": "q.html",
    "title": "19  geom_q",
    "section": "",
    "text": "19.1 geom_qq\nPackage\nggplot2 (Wickham 2016)\nDescription\nDraws quantitle-quantile plot.\nUnderstandable aesthetics\nrequired aesthetics\nsample\noptional aesthetics\ngroup, x, y\nSee also\ngeom_qq_line\nExample\nworldbankdata |&gt;\n  ggplot(aes(sample = Cooking)) +\n  geom_qq()\n\nWarning: Removed 6047 rows containing non-finite outside the scale range\n(`stat_qq()`).",
    "crumbs": [
      "Q",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>geom_q</span>"
    ]
  },
  {
    "objectID": "q.html#qq_line",
    "href": "q.html#qq_line",
    "title": "19  geom_q",
    "section": "19.2 geom_qq_line",
    "text": "19.2 geom_qq_line\nPackage\nggplot2 (Wickham 2016)\nDescription\nComputes the slope and intercept of the line connecting the points at specified quartiles of the theoretical and sample distribution in the quantitle-quantile plot. This geom should be used along with geom_qq to plot to be meaningful.\nUnderstandable aesthetics\nrequired aesthetics\nsample\noptional aesthetics\ngroup, x, y\nSee also\ngeom_qq_line\nExample\n\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(sample = Cooking)) +\n  geom_qq_line()  + ggtitle(\"geom_qq_line only\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(sample = Cooking)) +\n  geom_qq_line() + geom_qq() + ggtitle(\"geom_qq_line and geom_qq\")\na1|a2",
    "crumbs": [
      "Q",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>geom_q</span>"
    ]
  },
  {
    "objectID": "q.html#quantile",
    "href": "q.html#quantile",
    "title": "19  geom_q",
    "section": "19.3 geom_qquantile",
    "text": "19.3 geom_qquantile\nPackage\nggplot2 (Wickham 2016)\nDescription\nFits and draw quantile regression lines. Quantile regression models the relationship between independent variables and the percentiles of the dependent variable\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nalpha, colour, group, linetype, linewidth, weight, quantile, method\nSee also\ngeom_boxplot\nExamples\nExample 1\n\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(y=Cooking, x = Electricity)) + \n  geom_quantile() + ggtitle(\"geom_quantile only\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(y=Cooking, x = Electricity)) + \n  geom_quantile() + \n  geom_point() +\n  ggtitle(\"geom_quantile and geom_point\")\na1|a2\n\n\n\n\n\n\n\n\nExample 2\n\nq &lt;- seq(0.05, 0.95, by = 0.05)\na3 &lt;- worldbankdata |&gt;\n  ggplot(aes(y=Cooking, x = Electricity)) + \n  geom_quantile(method = \"rqss\") + \n  ggtitle(\"geom_quantile with method rqss\")\na4 &lt;- worldbankdata |&gt;\n  ggplot(aes(y=Cooking, x = Electricity)) + \n  geom_quantile(method = \"rqss\") + \n  geom_point() +\n  ggtitle(\"geom_quantile with \\n method rqss and geom_point\")\na3|a4\n\n\n\n\n\n\n\n\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "Q",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>geom_q</span>"
    ]
  },
  {
    "objectID": "r.html",
    "href": "r.html",
    "title": "20  geom_r",
    "section": "",
    "text": "20.1 geom_raster\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\noptional aesthetics\nSee also\ngeom_tile, geom_rect\nExample",
    "crumbs": [
      "R",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>geom_r</span>"
    ]
  },
  {
    "objectID": "r.html#geom_rect",
    "href": "r.html#geom_rect",
    "title": "20  geom_r",
    "section": "20.2 geom_rect",
    "text": "20.2 geom_rect\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\noptional aesthetics\nSee also\ngeom_tile, geom_rect\nExample",
    "crumbs": [
      "R",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>geom_r</span>"
    ]
  },
  {
    "objectID": "r.html#geom_ribbon",
    "href": "r.html#geom_ribbon",
    "title": "20  geom_r",
    "section": "20.3 geom_ribbon",
    "text": "20.3 geom_ribbon\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\noptional aesthetics\nSee also\nExample",
    "crumbs": [
      "R",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>geom_r</span>"
    ]
  },
  {
    "objectID": "r.html#geom_rub",
    "href": "r.html#geom_rub",
    "title": "20  geom_r",
    "section": "20.4 geom_rub",
    "text": "20.4 geom_rub\nPackage\nggplot2 (Wickham 2016)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\noptional aesthetics\nSee also\nExample\n\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "R",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>geom_r</span>"
    ]
  },
  {
    "objectID": "v.html",
    "href": "v.html",
    "title": "24  geom_v",
    "section": "",
    "text": "24.1 geom_violin\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreates violin plot.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth, weight\nSee also\ngeom_boxplot, geom_density\nExample\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\nggplot(aes(y = Cooking, x=Income, fill=Income)) + \n  geom_violin() + \n  scale_fill_brewer(palette = \"Dark2\") +\n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())",
    "crumbs": [
      "V",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>geom_v</span>"
    ]
  },
  {
    "objectID": "v.html#violin_pattern",
    "href": "v.html#violin_pattern",
    "title": "24  geom_v",
    "section": "24.2 geom_violin_pattern",
    "text": "24.2 geom_violin_pattern\nPackage\nggforce (Pedersen 2022)\nDescription\nFill violin plots with patterns.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, group, linetype, linewidth, weight\n\n24.2.1 The statistical transformation to use on the data for this layer\nydensity\nSee also\ngeom_boxplot, geom_density\nExample\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\nggplot(aes(y = Cooking, x=Income, fill=Income)) + \n  geom_violin_pattern() + \n  scale_fill_brewer(palette = \"Dark2\") +\n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())",
    "crumbs": [
      "V",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>geom_v</span>"
    ]
  },
  {
    "objectID": "v.html#geom_voronoi_tile",
    "href": "v.html#geom_voronoi_tile",
    "title": "24  geom_v",
    "section": "24.3 geom_voronoi_tile",
    "text": "24.3 geom_voronoi_tile\nPackage\nggforce (Pedersen 2022)\nDescription\nVoronoi tiles are the polygons that result from the spatial division of a plane based on the input points.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, linetype, size\nSee also\ngeom_voronoi_segment, geom_delaunay_tile, geom_delaunay_segment\nExample\n\nlibrary(ggforce)\na1 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  filter(Region == \"Middle East & North Africa\" | Region == \"Sub-Saharan Africa\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_tile(alpha=0.5, aes(fill=Region)) + \n  labs(title = \"a1: geom_voronoi_tile only\") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  theme(aspect.ratio = 1) + \n  theme(legend.position='bottom')\na2 &lt;- worldbankdata |&gt;\n  filter(Income == \"L\") |&gt;\n  filter(Region == \"Middle East & North Africa\" | Region == \"Sub-Saharan Africa\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_tile(alpha=0.5, aes(fill=Region)) + \n  geom_point(aes(col=Region)) + \n  labs(title = \"a1: geom_voronoi_tile and  geom_point\") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  theme(aspect.ratio = 1) +\n  theme(legend.position='none')\na1|a2",
    "crumbs": [
      "V",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>geom_v</span>"
    ]
  },
  {
    "objectID": "v.html#geom_voronoi_segment",
    "href": "v.html#geom_voronoi_segment",
    "title": "24  geom_v",
    "section": "24.4 geom_voronoi_segment",
    "text": "24.4 geom_voronoi_segment\nPackage\nggforce (Pedersen 2022)\nDescription\nRepresents the borders between the regions assigned to different input points.\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\nalpha, colour, linetype, size\nSee also\ngeom_voronoi_tile, geom_delaunay_tile, geom_delaunay_segment\nExample\n\nlibrary(ggforce)\nlibrary(deldir) #to calculate delaunay triangulation\na1 &lt;- worldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  filter(Income == \"LM\" | Income == \"UM\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_voronoi_segment() +\n  labs(title = \"a1: geom_voronoi_segment only\") +\n  theme(aspect.ratio = 1)\n\na2 &lt;- worldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  filter(Income == \"LM\" | Income == \"UM\") |&gt;\n  ggplot(aes(x=Cooking, y=Electricity)) +   \n  geom_point() +\n  geom_voronoi_segment() +\n  labs(title = \"a2: geom_point and \\n geom_voronoi_segment\") +\n  theme(aspect.ratio = 1)\na1 | a2\n\n\n\n\n\n\n\n\n\n\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "V",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>geom_v</span>"
    ]
  },
  {
    "objectID": "w.html",
    "href": "w.html",
    "title": "25  geom_w",
    "section": "",
    "text": "25.1 geom_waffle\nPackage\n#install.packages(\"remotes\")\n#remotes::install_github(\"hrbrmstr/waffle\")\nwaffle (Rudis and Gandy 2023)\nDescription\nCreate waffle plots\nUnderstandable aesthetics\nrequired aesthetics\nfill (so the geom knows which column to map the fills to)\nvalues (which column you’re mapping the filling for the squares with)\nSee also\ngeom_bar, geom_col\nExample\nlibrary(waffle)\n\nWarning: package 'waffle' was built under R version 4.4.2\n\nworldbankdata |&gt;\n  filter(Region == \"East Asia & Pacific\" | Region == \"Europe & Central Asia\") |&gt;\n  select(Region, Income, Year) |&gt;\n  group_by(Region, Income) |&gt;\n  tally() |&gt;\n  ggplot(aes(fill=Income, values=n)) +\n  geom_waffle(color = \"white\", size=1) +\n  facet_wrap(~Region, ncol=1) +\n  scale_x_discrete(expand=c(0,0)) +\n  scale_y_discrete(expand=c(0,0)) +\n  coord_equal()",
    "crumbs": [
      "W",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>geom_w</span>"
    ]
  },
  {
    "objectID": "w.html#geom_waffle",
    "href": "w.html#geom_waffle",
    "title": "25  geom_w",
    "section": "",
    "text": "Rudis, Bob, and Dave Gandy. 2023. Waffle: Create Waffle Chart Visualizations.",
    "crumbs": [
      "W",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>geom_w</span>"
    ]
  },
  {
    "objectID": "x.html",
    "href": "x.html",
    "title": "26  geom_x",
    "section": "",
    "text": "26.1 geom_x_label\nPackage\nggxmean (Reynolds 2024)\ngeom_x_line\nPackage\nggxmean (Reynolds 2024)",
    "crumbs": [
      "X",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>geom_x</span>"
    ]
  },
  {
    "objectID": "x.html#geom_x_mean",
    "href": "x.html#geom_x_mean",
    "title": "26  geom_x",
    "section": "26.2 geom_x_mean",
    "text": "26.2 geom_x_mean\nPackage\nggxmean (Reynolds 2024)\ngeom_x_mean_label",
    "crumbs": [
      "X",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>geom_x</span>"
    ]
  },
  {
    "objectID": "x.html#geom_x_median",
    "href": "x.html#geom_x_median",
    "title": "26  geom_x",
    "section": "26.3 geom_x_median",
    "text": "26.3 geom_x_median\nPackage\nggxmean (Reynolds 2024)",
    "crumbs": [
      "X",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>geom_x</span>"
    ]
  },
  {
    "objectID": "x.html#geom_x_percentile",
    "href": "x.html#geom_x_percentile",
    "title": "26  geom_x",
    "section": "26.4 geom_x_percentile",
    "text": "26.4 geom_x_percentile\nPackage\nggxmean (Reynolds 2024)",
    "crumbs": [
      "X",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>geom_x</span>"
    ]
  },
  {
    "objectID": "x.html#geom_x_quantile",
    "href": "x.html#geom_x_quantile",
    "title": "26  geom_x",
    "section": "26.5 geom_x_quantile",
    "text": "26.5 geom_x_quantile\nPackage\nggxmean (Reynolds 2024)",
    "crumbs": [
      "X",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>geom_x</span>"
    ]
  },
  {
    "objectID": "x.html#geom_xmax",
    "href": "x.html#geom_xmax",
    "title": "26  geom_x",
    "section": "26.6 geom_xmax",
    "text": "26.6 geom_xmax\nPackage\nggxmean (Reynolds 2024)",
    "crumbs": [
      "X",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>geom_x</span>"
    ]
  },
  {
    "objectID": "x.html#geom_xmin",
    "href": "x.html#geom_xmin",
    "title": "26  geom_x",
    "section": "26.7 geom_xmin",
    "text": "26.7 geom_xmin\nPackage\nggxmean (Reynolds 2024)",
    "crumbs": [
      "X",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>geom_x</span>"
    ]
  },
  {
    "objectID": "x.html#geom_xy_means",
    "href": "x.html#geom_xy_means",
    "title": "26  geom_x",
    "section": "26.8 geom_xy_means",
    "text": "26.8 geom_xy_means\nPackage\n\n# install.packages(\"devtools\")\n#devtools::install_github(\"EvaMaeRey/ggxmean\")\n\nggxmean (Reynolds 2024)\nDescription\nPlace point at mean of x and mean of y\nUnderstandable aesthetics\nrequired aesthetics\nx, y\nSee also\ngeom_point\nExample\n\nlibrary(ggxmean)\na1 &lt;- worldbankdata |&gt;\n  ggplot(aes(x = Income, y = Cooking)) + \n  geom_xy_means(na.rm=TRUE, col=\"red\", size=4) + \n  ggtitle(\"a1: geom_xy_means only\")\na2 &lt;- worldbankdata |&gt;\n  ggplot(aes(x = Income, y = Cooking)) + \n  geom_point(alpha=0.5) +\n  geom_xy_means(na.rm=TRUE, col=\"red\", size=4) + \n  ggtitle(\"a2: geom_points and geom_xy_means\")\na1|a2\n\nWarning: Removed 6047 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "X",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>geom_x</span>"
    ]
  },
  {
    "objectID": "x.html#geom_xy_xymean",
    "href": "x.html#geom_xy_xymean",
    "title": "26  geom_x",
    "section": "26.9 geom_xy_xymean",
    "text": "26.9 geom_xy_xymean\nExample\n\nlibrary(ggxmean)\nworldbankdata |&gt;\n  ggplot(aes(x = Income, y = Cooking)) + \n  geom_xy_xymean(na.rm=TRUE, size=3) \n\n\n\n\n\n\n\n\n\n\n\n\nReynolds, Evangeline. 2024. Ggxmean: Statistical Geoms.",
    "crumbs": [
      "X",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>geom_x</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "29  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.",
    "crumbs": [
      "<span class='chapter-number'>29</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Brunson, Jason Cory. 2020. “Ggalluvial: Layered Grammar for\nAlluvial Plots.” Journal of Open Source Software 5 (49).\n\n\nBrunson, Jason Cory, and Quentin D Read. 2019. “Package\n‘Ggalluvial’.”\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern:\n’Ggplot2’ Pattern Geoms.\n\n\nHocking, Toby Dylan. 2023. Directlabels: Direct Labels for\nMulticolor Plots. https://CRAN.R-project.org/package=directlabels.\n\n\nJeppson, Haley, Heike Hofmann, and Di Cook. 2021. Ggmosaic: Mosaic\nPlots in the ’Ggplot2’ Framework. https://CRAN.R-project.org/package=ggmosaic.\n\n\nMiller, David L. 2023. emoGG: Use Emoji in Ggplot2.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nReynolds, Evangeline. 2024. Ggxmean: Statistical Geoms.\n\n\nRudis, Bob, Ben Bolker, and Jan Schulz. 2017. Ggalt: Extra\nCoordinate Systems, ’Geoms’, Statistical Transformations, Scales and\nFonts for ’Ggplot2’. https://CRAN.R-project.org/package=ggalt.\n\n\nRudis, Bob, and Dave Gandy. 2023. Waffle: Create Waffle Chart\nVisualizations.\n\n\nSjoberg, David. 2020. Ggbump: Bump Chart and Sigmoid Curves. https://CRAN.R-project.org/package=ggbump.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data\nAnalysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\n\n\nWilke, Claus O. 2023. Ggridges: Ridgeline Plots in ’Ggplot2’.\nhttps://CRAN.R-project.org/package=ggridges.\n\n\nYu, Guangchuang. 2023. Ggimage: Use Image in ’Ggplot2’. https://CRAN.R-project.org/package=ggimage.\n\n\nYu, Youzhi, and Trent Buskirk. 2023. ggDoubleHeat: A Heatmap-Like\nVisualization Tool. https://CRAN.R-project.org/package=ggDoubleHeat.",
    "crumbs": [
      "References"
    ]
  }
]