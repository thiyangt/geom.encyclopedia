[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Visualisation Geometries Encyclopedia",
    "section": "",
    "text": "Preface\nWelcome to the “Data Visualisation geom Encyclopedia”, an encyclopedia of geometrics in Data Visualisation. Geometric representations serve as the visual language that bridges the gap between complex datasets and human comprehension. This encyclopedia is a curated collection of geom available in different R programming software packages.\nThe field of data visualization is dynamic, and new techniques and visualizations may emerge over time. Hence, I will be regularly updating this encyclopedia to ensure it remains a relevant and comprehensive resource for users.\nThis book is a work in progress. The accompanying R package for drone is available at:",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#accompanying-r-package-drone",
    "href": "index.html#accompanying-r-package-drone",
    "title": "Data Visualisation Geometries Encyclopedia",
    "section": "Accompanying R package: drone",
    "text": "Accompanying R package: drone",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#drone-data-for-geom-encyclopaedia",
    "href": "index.html#drone-data-for-geom-encyclopaedia",
    "title": "Data Visualisation Geometries Encyclopedia",
    "section": "drone: Data foR geOm eNcyclopaEdia",
    "text": "drone: Data foR geOm eNcyclopaEdia",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "b.html",
    "href": "b.html",
    "title": "4  geom_b",
    "section": "",
    "text": "4.1 geom_bar\nPackage\nggplot2 (Wickham 2016)\nDescription\nDraw a bar proportional to the specified number. For example, number of cases or user defined number.\nUnderstandable aesthetics\nrequired aesthetics\nx, y,\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth\nSee also\ngeom_col\nExample\nExample 1: Given observations\nworldbankdata |&gt;\n  dplyr::select(c(\"Year\", \"Income\")) |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(x = Income)) +\n  geom_bar()\nExample 2\nworldbankdata |&gt;\n  dplyr::select(c(\"Year\", \"Income\", \"Region\")) |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(x = Income, fill = Region)) +\n  geom_bar() +\n  scale_fill_brewer(palette = \"Paired\", na.value = \"grey50\")\nExample 3\nworldbankdata |&gt;\n  dplyr::select(c(\"Year\", \"Income\", \"Region\")) |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(x = Income, fill = Region)) +\n  geom_bar(position = \"dodge\") +\n  scale_fill_brewer(palette = \"Paired\", na.value = \"grey50\")\nExample 4: Given counts\ndfbar &lt;- data.frame(class = c(\"A\", \"B\"), income = c(100, 200))\nggplot(dfbar, aes(class, income)) +\n  geom_bar(stat = \"identity\")",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#bar_pattern",
    "href": "b.html#bar_pattern",
    "title": "4  geom_b",
    "section": "4.2 geom_bar_pattern",
    "text": "4.2 geom_bar_pattern\nPackage\nggpattern (FC, Davis, and ggplot2 authors 2023)\nDescription\nFill bars with patterns\nUnderstandable aesthetics\nrequired aesthetics\nx, y,\noptional aesthetics\npattern, pattern_angle\nSee also\ngeom_bar\nExample\n\nlibrary(ggpattern)\nworldbankdata |&gt;\n  tidyr::drop_na() |&gt; ## Missing values should be removed to see the different patterns for different levels\n  dplyr::select(c(\"Year\", \"Income\")) |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(x = Income)) +\n  geom_bar_pattern(aes(pattern = Income, pattern_angle = Income), fill = \"white\", colour = \"black\", pattern_spacing = 0.03, pattern_key_scale_factor = 1)",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#bin2d",
    "href": "b.html#bin2d",
    "title": "4  geom_b",
    "section": "4.5 geom_bin2d",
    "text": "4.5 geom_bin2d\nPackage\nggplot2 (R-ggplot2?)\nDescription\nDivides the Cartesian plane created by x-variable and y-variable into rectangles, counts the number of observations in each rectangle. Only the observations with rectangles are filled according to the number of observations.\nUnderstandable aesthetics\nx, y, fill, group\nSee also\ngeom_bin_2d, geom_point\nExample\n\nggplot(worldbankdata, aes(y = Cooking, x = Electricity)) +\n  geom_bin2d() +\n  theme(aspect.ratio = 1) +\n  scale_fill_viridis(na.value = \"grey50\", limits = c(0, 30))",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#bin2dpattern",
    "href": "b.html#bin2dpattern",
    "title": "4  geom_b",
    "section": "4.4 geom_bin2d_pattern",
    "text": "4.4 geom_bin2d_pattern\nPackage\nggpattern(FC, Davis, and ggplot2 authors 2023)\nDescription\nDivides the Cartesian plane created by x-variable and y-variable into rectangles (2D-Histogram), counts the number of observations in each rectangle. Only the observations with rectangles are filled with a pattern.\nUnderstandable aesthetics\nRequired aesthetics\nx, y\nOptional aesthetics\npattern_fill (pattern_* - for mapping variables under aesthetics), pattern (to set a patten, for example pattern=‘stripe’), fill, colour\nSee also\ngeom_bin2d, geom_point\nExample\n\nworldbankdata |&gt;\n  drop_na() |&gt;\n  ggplot(aes(y = Cooking, x = Electricity)) +\n  geom_bin2d_pattern(aes(pattern_spacing = ..density..), fill = \"white\", colour = \"black\", bins = 20) +\n  theme(aspect.ratio = 1)",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#blank",
    "href": "b.html#blank",
    "title": "4  geom_b",
    "section": "4.6 geom_blank",
    "text": "4.6 geom_blank\nPackage\nggplot2 (R-ggplot2?)\nDescription\nDraws nothing.",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#boxplot",
    "href": "b.html#boxplot",
    "title": "4  geom_b",
    "section": "4.7 geom_boxplot",
    "text": "4.7 geom_boxplot\nPackage\nggplot2 (R-ggplot2?)\nDescription\nDraw a bar proportional to the specified number. For example, number of cases or user defined number.\nSee also\ngeom_col\nExample\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  dplyr::select(Cooking) |&gt;\n  ggplot(aes(y = Cooking, x = factor(0))) +\n  geom_boxplot() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(y = Cooking, x = Region)) +\n  geom_boxplot() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nworldbankdata |&gt;\n  dplyr::filter(Year == 2021) |&gt;\n  ggplot(aes(y = Cooking, x = factor(0))) +\n  geom_boxplot(\n    outlier.colour = \"black\", outlier.shape = 16,\n    outlier.size = 2, notch = TRUE\n  ) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank()\n  )",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "b.html#bump",
    "href": "b.html#bump",
    "title": "4  geom_b",
    "section": "4.8 geom_bump",
    "text": "4.8 geom_bump\nPackage\nggbump (Sjoberg 2020)\nDescription\nCreates a smooth rank over time.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\ncolour, alpha, size\nSee also\ngeom_line\nExample\n\nlibrary(ggbump)\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Afghanistan\") |&gt;\n  ggplot(aes(x = Year, y = Electricity)) +\n  geom_bump() +\n  ggtitle(\"a1: geom_bump only\")\na2 &lt;- worldbankdata |&gt;\n  filter(Country == \"Afghanistan\") |&gt;\n  ggplot(aes(x = Year, y = Electricity)) +\n  geom_bump() +\n  geom_point() +\n  ggtitle(\"a2: geom_bump and geom_point\")\na1 | a2\n\n\n\n\n\n\n\n\n\n\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern: ’Ggplot2’ Pattern Geoms.\n\n\nSjoberg, David. 2020. Ggbump: Bump Chart and Sigmoid Curves. https://CRAN.R-project.org/package=ggbump.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "B",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>geom_b</span>"
    ]
  },
  {
    "objectID": "a.html",
    "href": "a.html",
    "title": "3  geom_a",
    "section": "",
    "text": "3.1 geom_area\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate an area plot. This cover the space between x-axis and line that connects the data points.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nalpha, colour, fill, group, linetype, linewidth\nSee also\ngeom_line, geom_ribbon\nExample\na1 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x = Year, y = Electricity)) +\n  geom_area(alpha = 0.5) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +\n  scale_x_continuous(breaks = 2013:2021) +\n  labs(title = \"a1: geom_area only\")\n\na2 &lt;- worldbankdata |&gt;\n  filter(Country == \"Bangladesh\") |&gt;\n  filter(Year &gt;= 2013 & Year &lt;= 2021) |&gt;\n  ggplot(aes(x = Year, y = Electricity)) +\n  geom_area(alpha = 0.5) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +\n  scale_x_continuous(breaks = 2013:2021) +\n  geom_point(col = \"red\") +\n  labs(title = \"a2: geom_area \\n and geom_point\")\na1 | a2",
    "crumbs": [
      "A",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>geom_a</span>"
    ]
  },
  {
    "objectID": "a.html#abline",
    "href": "a.html#abline",
    "title": "3  geom_a",
    "section": "3.2 geom_abline",
    "text": "3.2 geom_abline\nPackage\nggplot2 (Wickham 2016)\nDescription\nDescription Draw a straight line (\\(Y=mX+c\\)) for a given slope (\\(m\\)) and intercept (\\(c\\)).\nUnderstandable aesthetics\nUnlike most other geoms, geom_abline does not depend on the x and y variables that we map for the main plot. geom_abline has its own independent characteristics: intercept and slope.\nSee also\ngeom_point, geom_vline, geom_hline\nExample\n\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x = Electricity)) +\n  geom_abline(intercept = 0, slope = 1) +\n  labs(title = \"a1: geom_abline only\") +\n  theme(aspect.ratio = 1)\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x = Electricity)) +\n  geom_abline(intercept = 0, slope = 1) +\n  geom_point() +\n  labs(title = \"a2: geom_abline \\n and geom_point\") +\n  theme(aspect.ratio = 1)\na1 | a2",
    "crumbs": [
      "A",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>geom_a</span>"
    ]
  },
  {
    "objectID": "a.html#alluvium",
    "href": "a.html#alluvium",
    "title": "3  geom_a",
    "section": "3.3 geom_alluvium",
    "text": "3.3 geom_alluvium\nPackage\nggalluvial(Brunson and Read 2019; Brunson 2020)\nDescription\nCreate alluvial plot. An alluvial plot is a type of diagram that is particularly useful for visualizing categorical data and the flow or transition between different categorical variables over multiple stages or categories\nUnderstandable aesthetics\nrequired aesthetics\nx, y, ymin, ymax,\noptional aesthetics\nalpha, colour, fill, linetype, size, group (group is used internally; arguments are ignored)\nSee also\ngeom_stratum, geom_flow, geom_lode\nExample\n\nlibrary(ggalluvial)\nfreq.table &lt;- worldbankdata |&gt;\n  select(Country, Region, Year, Income) |&gt;\n  filter(Year &gt; 2015) |&gt;\n  group_by(Region, Year, Income) |&gt;\n  summarise(n = n()) |&gt;\n  drop_na()\nfreq.table\n\n# A tibble: 153 × 4\n# Groups:   Region, Year [49]\n   Region               Year Income     n\n   &lt;fct&gt;               &lt;dbl&gt; &lt;fct&gt;  &lt;int&gt;\n 1 East Asia & Pacific  2016 LM        13\n 2 East Asia & Pacific  2016 UM        10\n 3 East Asia & Pacific  2016 H         14\n 4 East Asia & Pacific  2017 LM        13\n 5 East Asia & Pacific  2017 UM        10\n 6 East Asia & Pacific  2017 H         14\n 7 East Asia & Pacific  2018 LM        13\n 8 East Asia & Pacific  2018 UM        10\n 9 East Asia & Pacific  2018 H         14\n10 East Asia & Pacific  2019 LM        12\n# ℹ 143 more rows\n\na1 &lt;- freq.table |&gt;\n  ggplot(aes(y = n, axis1 = Region, axis2 = Year)) +\n  geom_alluvium(aes(fill = Income), width = 1 / 12) +\n  labs(title = \"a1: geom_alluvium only\")\n\na2 &lt;- freq.table |&gt;\n  ggplot(aes(y = n, axis1 = Region, axis2 = Year)) +\n  geom_alluvium(aes(fill = Income), width = 1 / 12) +\n  geom_stratum(width = 1 / 12, fill = \"black\", color = \"grey\") +\n  geom_label(stat = \"stratum\", aes(label = after_stat(stratum))) +\n  labs(title = \"a2: geom_alluvium, \\n geom_stratum and geom_label\")\na1 / a2",
    "crumbs": [
      "A",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>geom_a</span>"
    ]
  },
  {
    "objectID": "a.html#geom_arc",
    "href": "a.html#geom_arc",
    "title": "3  geom_a",
    "section": "3.4 geom_arc",
    "text": "3.4 geom_arc\nPackage\nggforce(Pedersen 2022)\nDescription\nDraw a circle or a segment of a circle.\nUnderstandable aesthetic\nrequired aesthetics\nx0 - starting coordinate of x-axis , y0 - starting coordinate of x-axis, r - radius, start, end\noptional aesthetics\ncolor, linewidth, linetype, alpha, lineend\nThe statistical transformation to use on the data for this layer\nstat_arc\nSee also\ngeom_arc2, geom_arc_bar\nExample\n\nlibrary(ggforce)\nggplot() +\n  geom_arc(aes(x0 = 0, y0 = 0, r = 8, start = 1, end = 8)) +\n  geom_arc(aes(x0 = 0, y0 = 0, r = 8, start = 1, end = 5), col = \"red\", size = 2) +\n  theme(aspect.ratio = 1)",
    "crumbs": [
      "A",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>geom_a</span>"
    ]
  },
  {
    "objectID": "a.html#arcbar",
    "href": "a.html#arcbar",
    "title": "3  geom_a",
    "section": "3.5 geom_arc_bar",
    "text": "3.5 geom_arc_bar\nPackage\nggforce(Pedersen 2022)\nDescription\nTo draw pie chart and donut chart defining centre point, a radius and a start and end angle.\nUnderstandable aesthetic\nrequired aesthetics\nx0 - starting coordinate of x-axis , y0 - starting coordinate of x-axis, r - radius, start, end\noptional aesthetics\ncolor, linewidth, linetype, alpha, lineend\nThe statistical transformation to use on the data for this layer\nstat_arc\nSee also\ngeom_arc, geom_arc_bar\nExample\n\ndf &lt;- data.frame(\n  state = c(\n    \"A\", \"B\", \"C\",\n    \"D\", \"E\"\n  ),\n  focus = c(0.2, 0, 0, 0, 0),\n  start = c(0, 1, 2, 3, 4),\n  end = c(1, 2, 3, 4, 2 * pi),\n  amount = c(4, 3, 1, 2, 5),\n  stringsAsFactors = FALSE\n)\nggplot(df) +\n  geom_arc_bar(aes(\n    x0 = 0, y0 = 0, r0 = 0, r = 1, amount = amount,\n    fill = state, explode = focus\n  ), stat = \"pie\") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  theme(aspect.ratio = 1)\n\n\n\n\n\n\n\n\n##geom_arrow{#arrow}\nPackage\nmetR (Campitelli 2021)\nDescription\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\narrow,type, arrow.angle, arrow.length, arrow.ends, arrow.type\nSee also\ngeom_line, geom_ribbon\n\n3.5.1 Example\n\nlibrary(metR)\n\n\nAttaching package: 'metR'\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\ndata &lt;- tibble(\n  x = c(10, 20, 30, 40, 50),           # Longitude or X-coordinates\n  y = c(1, 2, 3, 4, 5),           # Latitude or Y-coordinates\n  dx = c(1, 0, -1, 0, 1),         # Wind direction components (change in X)\n  dy = c(1, -1, 0, 1, 0)          # Wind direction components (change in Y)\n)\n\nggplot(data, aes(x = x, y = y)) +\n  geom_point(color = \"#1b9e77\", size = 3) +  \n  geom_arrow(aes(dx = dx, dy = dy), color = \"#d95f02\", size = 1, arrow.type = \"closed\") +\n  labs(title = \"Wind Directions at Different Locations\", x = \"Longitude\", y = \"Latitude\")",
    "crumbs": [
      "A",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>geom_a</span>"
    ]
  },
  {
    "objectID": "a.html#ash",
    "href": "a.html#ash",
    "title": "3  geom_a",
    "section": "3.6 geom_ash",
    "text": "3.6 geom_ash\nPackage\nggformula (Kaplan and Pruim 2023)\nDescription\nPlotted Average Shifted Histogram (ASH)\nUnderstandable aesthetics\nrequired aesthetics\nx\ny\noptional aesthetics\ncolor, fill, bins, alpha, size\nSee also\ngeom_histogram, geom_density\nExample\n\nlibrary(ggformula)\np1 &lt;- worldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\n  ggplot(aes(x = Electricity)) +\n   geom_ash(bins = 20, color = \"#d95f02\") + labs(\"Average Shifted Histogram\")\np2 &lt;- worldbankdata |&gt;\n  filter(Income == \"LM\") |&gt;\n  ggplot(aes(x = Electricity)) +\n  geom_histogram(aes(y = stat(density)), color = \"black\", fill = \"gray\") +\n   geom_ash(bins = 20, color = \"#d95f02\") + labs(\"Histogram and Average Shifted Histogram\")\np1|p2\n\n\n\n\n\n\n\n\n\n\n\n\nBrunson, Jason Cory. 2020. “Ggalluvial: Layered Grammar for Alluvial Plots.” Journal of Open Source Software 5 (49).\n\n\nBrunson, Jason Cory, and Quentin D Read. 2019. “Package ‘Ggalluvial’.”\n\n\nCampitelli, Elio. 2021. metR: Tools for Easier Analysis of Meteorological Fields. https://doi.org/10.5281/zenodo.2593516.\n\n\nKaplan, Daniel, and Randall Pruim. 2023. Ggformula: Formula Interface to the Grammar of Graphics. https://CRAN.R-project.org/package=ggformula.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "A",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>geom_a</span>"
    ]
  },
  {
    "objectID": "c.html",
    "href": "c.html",
    "title": "5  geom_c",
    "section": "",
    "text": "5.1 geom_col\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate bar charts\nUnderstandable aesthetics\nRequired aesthetics\nx, y\nOptional aesthetics\nalpha, colour, fill, group, linetype, linewidth\nSee also\ngeom_bar\nExample\nworldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  group_by(Income) |&gt;\n  summarise(n = n()) |&gt;\n  ggplot(aes(x = Income, y = n)) +   geom_col()",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#col_pattern",
    "href": "c.html#col_pattern",
    "title": "5  geom_c",
    "section": "5.2 geom_col_pattern",
    "text": "5.2 geom_col_pattern\nPackage\nggpattern (FC, Davis, and ggplot2 authors 2023)\nDescription\nFill columns with a pattern. User can map a variable for pattern or set a pattern.\nUnderstandable aesthetics\nRequired aesthetics\nx, y\nOptional aesthetics\npattern, fill, colour\nSee also\ngeom_line, geom_ribbon\nExample\n\nworldbankdata |&gt;\n  filter(Year == 2021) |&gt;\n  group_by(Income) |&gt;\n  summarise(n = n()) |&gt;\n  ggplot(aes(x = Income, y = n)) +  \n  ggpattern::geom_col_pattern(aes(pattern = n, pattern_angle=n),\n    colour  = 'black', fill=\"white\")",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#count",
    "href": "c.html#count",
    "title": "5  geom_c",
    "section": "5.3 geom_count",
    "text": "5.3 geom_count\nPackage\nggplo2t (Wickham 2016)\nDescription\nCounts the observations at every point on the plot, and then maps the count with the size of the point.\nUnderstandable aesthetics\nRequired aesthetics\nx, y\nOptional aesthetics\nalpha, colour, fill, group, shape, size, stroke\nSee also\ngeom_point\nExample\nHere, both geom_point and geom_count are plotted to see the difference.\n\na1 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_point(alpha = 0.5) + \n  labs(title = \"a1: geom_point\") +\n  theme(aspect.ratio = 1)\na2 &lt;- ggplot(worldbankdata, aes(y = Cooking, x=Electricity)) + \n  geom_count() + \n  labs(title = \"a2: geom_count\") +\n  theme(aspect.ratio = 1)\na1 | a2",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#circle",
    "href": "c.html#circle",
    "title": "5  geom_c",
    "section": "5.4 geom_circle",
    "text": "5.4 geom_circle\nPackage\nggforce (Pedersen 2022)\nDescription\nDraw circles based on a center point and a radius.\nUnderstandable aesthetics\nrequired aesthetics\nx0 - starting coordinate of x-axis , y0 - starting coordinate of x-axis, r - radius\noptional aesthetics\ncolor, fill, linewidth, linetype, alpha, lineend\nSee also\ngeom_mark_circle\nExample\n\nworldbankdata |&gt;\n  filter(Year == 2021) |&gt;\nggplot(aes(y = Cooking, x=Electricity, col=Income)) + \n  geom_point() + \n  scale_color_brewer(palette = \"Dark2\") +\n  ggforce::geom_circle(aes(x0 = 26, y0 = 5, r = 20),\n              inherit.aes = FALSE) + \n    theme(aspect.ratio = 1)",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#contour",
    "href": "c.html#contour",
    "title": "5  geom_c",
    "section": "5.5 geom_contour",
    "text": "5.5 geom_contour\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate contour plots.\nUnderstandable aesthetics\nRequired aesthetics\nx, y\nOptional aesthetics\nalpha, colour, fill , group, linetype, linewidth, subgroup\nSee also\ngeom_contour_filled, geom_tile, geom_density_2d\nExample\n\nmean &lt;- c(0.5, -0.5)\nsigma &lt;- matrix(c(1, 0.5, 0.5, 1), nrow=2)\ndata.grid &lt;- expand.grid(x=seq(-3, 3, length.out=200),\n                         y=seq(-3, 3, length.out=200))\ndf &lt;- cbind(data.grid, prob = mvtnorm::dmvnorm(data.grid, mean=mean, sigma=sigma))\nggplot(df, aes(x=x, y=y, z=prob)) + \n  geom_contour() + \n  theme(aspect.ratio = 1)",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#contour_filled",
    "href": "c.html#contour_filled",
    "title": "5  geom_c",
    "section": "5.6 geom_contour_filled",
    "text": "5.6 geom_contour_filled\nPackage\nggplot2 (Wickham 2016)\nDescription\nCreate contour plots\nUnderstandable aesthetics\nx, y, alpha, colour, linetype, linewidth, group, weight\nSee also\ngeom_contour, geom_tile, geom_density_2d\nExample\n\nmean &lt;- c(0.5, -0.5)\nsigma &lt;- matrix(c(1, 0.5, 0.5, 1), nrow=2)\ndata.grid &lt;- expand.grid(x=seq(-3, 3, length.out=200),\n                         y=seq(-3, 3, length.out=200))\ndf &lt;- cbind(data.grid, prob = mvtnorm::dmvnorm(data.grid, mean=mean, sigma=sigma))\nggplot(df, aes(x=x, y=y, z=prob)) + \n  geom_contour_filled() + \n  theme(aspect.ratio = 1)",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#curve",
    "href": "c.html#curve",
    "title": "5  geom_c",
    "section": "5.7 geom_curve",
    "text": "5.7 geom_curve\nPackage\nggplot2 (Wickham 2016)\nDescription\ngeom_segment() draws a straight line between between two points. geom_curve draws a curved line.\nUnderstandable aesthetics\nrequired aesthetics\nx, y\noptional aesthetics\nalpha, colour, linetype, linewidth, group\nThe statistical transformation to use on the data for this layer\nidentity\nSee also\ngeom_segment\nExamples\n\ndf &lt;- data.frame(x1 = 0, x2 = 100, y1 = 0, y2 = 100)\nggplot(df) + \n  geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2))\n\n\n\n\n\n\n\n\n\ndf &lt;- data.frame(x2 = c( 3, 4, 4, 3, -3, -4, -4, -3),\n                 y2 = c( 4, 3, -3, -4, -4, -3, 3, 3),\n                 x1 = rep(0, 8),\n                 y1 = rep(0, 8))\n\nggplot(df) + \n  geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2),\n             curvature = 0.75, angle = -45,\n             arrow = arrow(length = unit(0.25,\"cm\"))) + \n  coord_equal() +\n  xlim(-5, 5) + ylim(-5, 5)",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "c.html#crossbar",
    "href": "c.html#crossbar",
    "title": "5  geom_c",
    "section": "5.8 geom_crossbar",
    "text": "5.8 geom_crossbar\nPackage\nggplot2 (Wickham 2016)\nDescription\nPlot a vertical interval defined by y, ymin and ymax or x, xmin and xmax.\nUnderstandable aesthetics\nrequired aesthetics\nx or y\nxmin or ymin\nxmax or ymax\noptional aesthetics\nalpha, colour, linetype, linewidth, group\nSee also\ngeom_segment\nExamples\nExample 1\n\nsummarydf &lt;- worldbankdata |&gt;\n  drop_na() |&gt;\n  select(Electricity, Income) |&gt;\n  group_by(Income) |&gt;\n  reframe(qs = quantile(Electricity, c(0.25, 0.5 ,0.75))) |&gt;\n  mutate(q=rep(c(\"Q1\", \"Q2\", \"Q3\"), 4)) |&gt;\n  pivot_wider(names_from = q,\n              values_from = qs)\nsummarydf\n\n# A tibble: 4 × 4\n  Income    Q1    Q2    Q3\n  &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 L       16.6  32.2  50.7\n2 LM      62.0  86.7  97.7\n3 UM      95.9  99.5 100. \n4 H      100   100   100  \n\nggplot(summarydf, aes(x=Income, ymin = Q1, y=Q2, ymax = Q3)) + \n  geom_crossbar(size=1,col=\"red\", width = .5)\n\n\n\n\n\n\n\n\nExample 2\n\nsummary_stats &lt;- worldbankdata |&gt;\n  drop_na() |&gt;\n  select(Electricity, Income) |&gt;\n  group_by(Income) |&gt;\n  reframe(mean = mean(Electricity),\n          sd = sd(Electricity)) \nggplot(summary_stats, aes(x = Income, y = mean, ymin = mean - sd, ymax = mean + sd)) +\n  geom_crossbar(width = 0.5, fatten = 2) \n\n\n\n\n\n\n\n\n\n\n\n\nFC, Mike, Trevor L Davis, and ggplot2 authors. 2023. Ggpattern: ’Ggplot2’ Pattern Geoms.\n\n\nPedersen, Thomas Lin. 2022. Ggforce: Accelerating ’Ggplot2’. https://CRAN.R-project.org/package=ggforce.\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.",
    "crumbs": [
      "C",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>geom_c</span>"
    ]
  },
  {
    "objectID": "w.html",
    "href": "w.html",
    "title": "25  geom_w",
    "section": "",
    "text": "25.1 geom_waffle\nPackage\n#install.packages(\"remotes\")\n#remotes::install_github(\"hrbrmstr/waffle\")\nwaffle (Rudis and Gandy 2023)\nDescription\nCreate waffle plots\nUnderstandable aesthetics\nrequired aesthetics\nfill (so the geom knows which column to map the fills to)\nvalues (which column you’re mapping the filling for the squares with)\nSee also\ngeom_bar, geom_col\nExample\nlibrary(waffle)\nworldbankdata |&gt;\n  filter(Region == \"East Asia & Pacific\" | Region == \"Europe & Central Asia\") |&gt;\n  select(Region, Income, Year) |&gt;\n  group_by(Region, Income) |&gt;\n  tally() |&gt;\n  ggplot(aes(fill=Income, values=n)) +\n  geom_waffle(color = \"white\", size=1) +\n  facet_wrap(~Region, ncol=1) +\n  scale_x_discrete(expand=c(0,0)) +\n  scale_y_discrete(expand=c(0,0))",
    "crumbs": [
      "W",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>geom_w</span>"
    ]
  },
  {
    "objectID": "w.html#geom_waffle",
    "href": "w.html#geom_waffle",
    "title": "25  geom_w",
    "section": "",
    "text": "Rudis, Bob, and Dave Gandy. 2023. Waffle: Create Waffle Chart Visualizations.",
    "crumbs": [
      "W",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>geom_w</span>"
    ]
  }
]